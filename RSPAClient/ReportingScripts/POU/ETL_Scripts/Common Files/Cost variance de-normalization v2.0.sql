--Table creation script:
--drop table RPT_CASE_DATA

--select count(*) from RPT_CASE_DATA

DROP TABLE RPT_CASE_DATA_COST_VARIANCE

CREATE TABLE RPT_CASE_DATA_COST_VARIANCE
(CASE_DATA_UNIQUE_ID int identity (1,1),
[PROCEDURE_CODE] [nvarchar](50),
[SERVICE_CODE] [nvarchar](20) NULL,
[PHY_ID] [nvarchar](60) NULL,
[ITEM_COUNT] [float] NULL,
[ISSUE_QTY] [float] NULL,
[WASTAGE_QTY] [float] NULL,
RETURN_QTY [float] NULL,
ITEM_PRICE [float] NULL,
[PERFORM_DATE] [datetime] NULL,
[CASE_ID] [nvarchar](20) ,
[ITEM_ID] [nvarchar](50),
[ITEM_DESCRIPTION] [nvarchar](255) NULL,
[MFG_ITEM_ID] [nvarchar](50) NULL,
ENCOUNTER_ID [bigint] NULL,
[PATIENT_ID] [nvarchar](50) NULL,
ICD10 varchar(50) NULL,
ICD10_DESCRIPTION [nvarchar](255),
CC360_ICD10_DESCR [nvarchar](255),
CC360_ICD10_CODE [nvarchar](255),
TOTAL_USAGE FLOAT,
ITEM_GROUP VARCHAR(200),
ITEM_GROUP_DESCRIPTION VARCHAR(255),
PHYSICIAN_NAME NVARCHAR(100)
)

--1497868 (ROWS)  1497868
INSERT INTO RPT_CASE_DATA_COST_VARIANCE (
[PROCEDURE_CODE],
[SERVICE_CODE] ,
[PHY_ID] ,
[ITEM_COUNT] ,
[ISSUE_QTY] ,
[WASTAGE_QTY] ,
RETURN_QTY,
ITEM_PRICE ,
[PERFORM_DATE],
[CASE_ID],
[ITEM_ID],
[ITEM_DESCRIPTION],
[MFG_ITEM_ID],
ENCOUNTER_ID,
[PATIENT_ID]
)
SELECT 
H.EXAM_ID,
CH.SERVICE_CODE,
H.PHYSICIAN_ID,
D.ITEM_COUNT,
D.ISSUE_QTY,
R.WASTAGE_QTY,
R.RETURN_QTY,
D.ITEM_PRICE,
CH.PERFORM_DATE,
H.CASE_ID,
D.ITEM_ID,
D.ITEM_DESCRIPTION,
D.MFG_ITEM_ID,
CH.ENCOUNTER_ID,
H.[PATIENT_ID]
FROM 
ATPAR_MT.MT_POU_CHARGECAPTURE_DETAILS D
JOIN ATPAR_MT.MT_POU_CHARGECAPTURE_HEADER H 
ON H.TRANSACTION_ID = D.TRANSACTION_ID
JOIN ATPAR_MT.MT_POU_CASE_CART_HEADER CH
ON CH.CASE_ID = H.CASE_ID
AND CH.PREF_LIST_ID = H.PREF_LIST_ID
AND CH.PROCEDURE_CODE = H.EXAM_ID
LEFT JOIN ATPAR_MT.MT_POU_CASE_CART_DETAILS CD
ON CD.CASE_ID = CH.CASE_ID
AND CD.PREF_LIST_ID = CH.PREF_LIST_ID
AND CD.PROCEDURE_CODE = CH.PROCEDURE_CODE
AND CD.ITEM_ID = D.ITEM_ID
LEFT JOIN ATPAR_MT.MT_POU_CHARGECAPTURE_RETURNS R
ON D.TRANSACTION_ID = R.TRANSACTION_ID 
AND D.LINE_NO = R.LINE_NO
WHERE CH.STATUS IN (10,50)

go

alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_PROC_OUTLIER_Y CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_PROC_OUTLIER_H CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_PROC_OUTLIER_Q CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_PROC_OUTLIER_M CHAR(1)

alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_ICD_OUTLIER_Y CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_ICD_OUTLIER_H CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_ICD_OUTLIER_Q CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_ICD_OUTLIER_M CHAR(1)

alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_CPT_OUTLIER_Y CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_CPT_OUTLIER_H CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_CPT_OUTLIER_Q CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add SINGLE_CPT_OUTLIER_M CHAR(1)

alter table RPT_CASE_DATA_COST_VARIANCE add PROC_OUTLIER_Y CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add PROC_OUTLIER_H CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add PROC_OUTLIER_Q CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add PROC_OUTLIER_M CHAR(1)

alter table RPT_CASE_DATA_COST_VARIANCE add ICD_OUTLIER_Y CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add ICD_OUTLIER_H CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add ICD_OUTLIER_Q CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add ICD_OUTLIER_M CHAR(1)

alter table RPT_CASE_DATA_COST_VARIANCE add CPT_OUTLIER_Y CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add CPT_OUTLIER_H CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add CPT_OUTLIER_Q CHAR(1)
alter table RPT_CASE_DATA_COST_VARIANCE add CPT_OUTLIER_M CHAR(1)

ALTER TABLE RPT_CASE_DATA_COST_VARIANCE ADD MP_CASE VARCHAR(1) 
ALTER TABLE RPT_CASE_DATA_COST_VARIANCE ADD QTY_OUTLIER VARCHAR(1) 

--DELETE PERFORM_DATE IS NULL

DELETE FROM RPT_CASE_DATA_COST_VARIANCE WHERE PERFORM_DATE IS NULL

delete from RPT_CASE_DATA_COST_VARIANCE where ITEM_ID in
('[)> 06+H435714201181Q0+$12GM1489614D20220701 ',
'[)> 06+H435714205881Q0+$09FM1815914D20190601 ',
'[)> 06+H435714206281Q1+$12GSM0009B14D20220801 ',
'[)> 06+H435716765811Q1+$14GM1085614D20240701 ',
'[)> 06+H435717709281Q1+$14CM1126114D20240301 ',
'[)> 06+H728717550380Q0+$13CT2895214D20230301 ',
'00',
'000')

UPDATE RPT_CASE_DATA_COST_VARIANCE SET SERVICE_CODE = 'OTHERS' WHERE SERVICE_CODE = ''

-----------UPDATE MFG ITEM IDS starts----------------------------------------------------------
--14242   NOW : 8716 + 6800
DROP TABLE EMPTY_MFG_ITEM_ID
SELECT  ITEM_ID, MFG_ITEM_ID INTO EMPTY_MFG_ITEM_ID 
FROM RPT_CASE_DATA_COST_VARIANCE  
GROUP BY ITEM_ID, MFG_ITEM_ID
HAVING (MFG_ITEM_ID IS NULL OR MFG_ITEM_ID = '' OR MFG_ITEM_ID = ' ' )

--11274
DROP TABLE WITH_MFG_ITEM_ID
SELECT  ITEM_ID, MFG_ITEM_ID INTO WITH_MFG_ITEM_ID 
FROM RPT_CASE_DATA_COST_VARIANCE 
GROUP BY ITEM_ID, MFG_ITEM_ID
HAVING MFG_ITEM_ID IS NOT NULL AND MFG_ITEM_ID <> '' AND MFG_ITEM_ID <> ' ' 

DROP TABLE TEMP_MFG_ITEM_IDS
SELECT WITH_MFG_ITEM_ID.MFG_ITEM_ID, WITH_MFG_ITEM_ID.ITEM_ID INTO TEMP_MFG_ITEM_IDS 
FROM EMPTY_MFG_ITEM_ID, WITH_MFG_ITEM_ID 
WHERE EMPTY_MFG_ITEM_ID.ITEM_ID = WITH_MFG_ITEM_ID.ITEM_ID

--6800
--SELECT COUNT(*) FROM TEMP_MFG_ITEM_IDS

UPDATE RPT_CASE_DATA_COST_VARIANCE SET MFG_ITEM_ID = TEMP_MFG_ITEM_IDS.MFG_ITEM_ID FROM RPT_CASE_DATA_COST_VARIANCE,TEMP_MFG_ITEM_IDS
WHERE RPT_CASE_DATA_COST_VARIANCE.ITEM_ID = TEMP_MFG_ITEM_IDS.ITEM_ID 
AND ( RPT_CASE_DATA_COST_VARIANCE.MFG_ITEM_ID IS NULL OR RPT_CASE_DATA_COST_VARIANCE.MFG_ITEM_ID = '' OR RPT_CASE_DATA_COST_VARIANCE.MFG_ITEM_ID = ' ')



--SELECT COUNT(DISTINCT ITEM_ID) FROM RPT_CASE_DATA_COST_VARIANCE WHERE (MFG_ITEM_ID IS NULL OR MFG_ITEM_ID = '' OR MFG_ITEM_ID = ' ' )  --8716
-----------UPDATE MFG ITEM IDS Ends----------------------------------------------------------

-- Handling Physician ID with -(hyphen)--------------------------------------------------------------------

--ALTER TABLE RPT_CASE_DATA_COST_VARIANCE ADD PHYSICIAN_NAME NVARCHAR(100)

--86322 --select * from RPT_CASE_DATA_COST_VARIANCE where PHY_ID like '%-%'
update RPT_CASE_DATA_COST_VARIANCE 
set PHYSICIAN_NAME = SUBSTRING(PHY_ID,(CHARINDEX('-',PHY_ID))+1,len(PHY_ID)),
PHY_ID = SUBSTRING(PHY_ID,0,CHARINDEX('-',PHY_ID,0))
where PHY_ID like '%-%'

---physician name update--------------------------------------------------------------------------------------------
update RPT_CASE_DATA_COST_VARIANCE set PHYSICIAN_NAME = [MT_POU_PHYSICIAN].FIRST_NAME
+' ' + [MT_POU_PHYSICIAN].MIDDLE_INITIAL + ' '+[MT_POU_PHYSICIAN].LAST_NAME
from RPT_CASE_DATA_COST_VARIANCE,[MT_POU_PHYSICIAN]
where RPT_CASE_DATA_COST_VARIANCE.PHY_ID= [MT_POU_PHYSICIAN].PHYSICIAN_ID

--------------------qty null handling-----------------------------------------------------------------------------

UPDATE RPT_CASE_DATA_COST_VARIANCE SET [ITEM_COUNT]= ISNULL([ITEM_COUNT],0),[WASTAGE_QTY]= ISNULL([WASTAGE_QTY],0),
[ITEM_PRICE]= ISNULL([ITEM_PRICE],0),[ISSUE_QTY]= ISNULL([ISSUE_QTY],0),[RETURN_QTY]= ISNULL([RETURN_QTY],0)

-- Multi pro cases flagging starts ---------------------------------------------------------------------------------------------

DROP TABLE RPT_CASE_DATA_COST_VARIANCE_MULTI_PROC

SELECT SERVICE_CODE,PROCEDURE_CODE,CASE_ID INTO RPT_CASE_DATA_COST_VARIANCE_MULTI_PROC FROM RPT_CASE_DATA_COST_VARIANCE

--ALTER TABLE RPT_CASE_DATA_COST_VARIANCE ADD MP_CASE VARCHAR(1) 

--SELECT TOP 10 * FROM RPT_CASE_DATA_COST_VARIANCE 

UPDATE RPT_CASE_DATA_COST_VARIANCE SET MP_CASE = 'Y' WHERE CASE_ID IN
(SELECT DISTINCT CASE_ID FROM RPT_CASE_DATA_COST_VARIANCE_MULTI_PROC GROUP BY CASE_ID HAVING COUNT(DISTINCT PROCEDURE_CODE)>1) 

UPDATE RPT_CASE_DATA_COST_VARIANCE SET MP_CASE = 'N' WHERE MP_CASE IS NULL

-- Multi pro cases flagging starts ---------------------------------------------------------------------------------------------

--  Qty outlier cases flagging starts ---------------------------------------------------------------------------------------------

--ALTER TABLE RPT_CASE_DATA_COST_VARIANCE ADD QTY_OUTLIER VARCHAR(1) 

UPDATE RPT_CASE_DATA_COST_VARIANCE SET QTY_OUTLIER = 'Y' WHERE (ISSUE_QTY > 99 OR RETURN_QTY > 99 OR ITEM_COUNT > 99)

UPDATE RPT_CASE_DATA_COST_VARIANCE SET QTY_OUTLIER = 'N' WHERE QTY_OUTLIER IS NULL

--  Qty outlier cases flagging ends ---------------------------------------------------------------------------------------------

---------------------------- Item Price, Item Description, Item Group update Starts  ------------------------
update RPT_CASE_DATA_COST_VARIANCE 
set RPT_CASE_DATA_COST_VARIANCE.ITEM_PRICE=Itemmasterfrominventoryteam22092017.[AMC UNIT COST],
RPT_CASE_DATA_COST_VARIANCE.ITEM_DESCRIPTION=Itemmasterfrominventoryteam22092017.[DESCRIPTION],
RPT_CASE_DATA_COST_VARIANCE.ITEM_GROUP = Itemmasterfrominventoryteam22092017.ITEM_GROUP
from Itemmasterfrominventoryteam22092017,RPT_CASE_DATA_COST_VARIANCE
where Itemmasterfrominventoryteam22092017.ITEM = RPT_CASE_DATA_COST_VARIANCE.ITEM_ID

UPDATE RPT_CASE_DATA_COST_VARIANCE SET ITEM_GROUP = 'UNKNOWN' WHERE ITEM_GROUP IS NULL OR ITEM_GROUP = '' OR ITEM_GROUP = ' '


---------------------------- Starts -----------------------------------------------
-- Preference card item data update in [RPT_CASE_DATA_COST_VARIANCE] table

select a.[PROCEDURE_ID], a.[PREF_LIST_ID], [PHYSICIAN_ID], b.ITEM_ID, 'Preference Card Item' grouped 
into [PREFRENCECARD_ITEMS]
from [ATPAR_MT].[MT_POU_PREF_LIST_HEADER] a, [ATPAR_MT].[MT_POU_PREF_LIST_ALLOC] b
where a.PREF_LIST_ID = b.PREF_LIST_ID 
and a.PROCEDURE_ID=b.PROCEDURE_ID

update [ATPAR_MT].[RPT_CASE_DATA_COST_VARIANCE] 
set ITEM_GROUP = [PREFRENCECARD_ITEMS].grouped
from [ATPAR_MT].[RPT_CASE_DATA_COST_VARIANCE], [PREFRENCECARD_ITEMS]
where [ATPAR_MT].[RPT_CASE_DATA_COST_VARIANCE].ITEM_ID = [PREFRENCECARD_ITEMS].ITEM_ID
and [ATPAR_MT].[RPT_CASE_DATA_COST_VARIANCE].PROCEDURE_CODE = [PREFRENCECARD_ITEMS].PROCEDURE_ID
and [ATPAR_MT].[RPT_CASE_DATA_COST_VARIANCE].PHY_ID = [PREFRENCECARD_ITEMS].PHYSICIAN_ID

update [ATPAR_MT].[RPT_CASE_DATA_COST_VARIANCE] set ITEM_GROUP='Surgical Implant' where ITEM_GROUP='Implant'

---------------------------- Ends  -----------------------------------------------

-- TOTAL USAGE UPDATE

--ALTER TABLE RPT_CASE_DATA_COST_VARIANCE ADD TOTAL_USAGE FLOAT
-- Item Price, Item Description, Item Group update ends ------------------------

-- Total Usage update starts  ------------------------
update RPT_CASE_DATA_COST_VARIANCE 
set TOTAL_USAGE= (((ISNULL(ITEM_COUNT,0) + ISNULL(ISSUE_QTY,0) + ISNULL(WASTAGE_QTY,0)) - ISNULL(RETURN_QTY,0)) * ITEM_PRICE)

-- Total Usage update Ends  ------------------------ 

-- Process to eliminate Single procedure cases starts ------------------------------

Run Singleton_Procedure_Outliers.sql

-- Process to eliminate Single procedure cases ends------------------------------ 

------------------------ Starts ICD10 -------------------------------

-- Updating ICD10 for the cases in Inpatient data file given by Mike/Orlando as we are not able to find exact matches based on the ECD & Perform date Starts ----
--UPDATE INPATIENT TABLE WITH CASE_ID FROM CASE_ICD_DATA

--SELECT COUNT(DISTINCT CASE_ID) FROM INPATIENT

ALTER TABLE INPATIENT ADD [CASE_ID] [nvarchar](20)

UPDATE Inpatient SET CASE_ID = CASE_ICD_DATA.CASEID
--SELECT DISTINCT Inpatient.CASE_ID
FROM Inpatient, CASE_ICD_DATA
WHERE Inpatient.ECD = CASE_ICD_DATA.ECD
AND DATEPART(YYYY,Inpatient.PERFORM_DATE) = DATEPART(YYYY,CASE_ICD_DATA.PERFORMDATE)
AND DATEPART(MM,Inpatient.PERFORM_DATE) = DATEPART(MM,CASE_ICD_DATA.PERFORMDATE)
AND DATEPART(DD,Inpatient.PERFORM_DATE) = DATEPART(DD,CASE_ICD_DATA.PERFORMDATE)

--
--1497851
--SELECT COUNT(distinct case_id) FROM RPT_CASE_DATA_COST_VARIANCE WHERE ICD10 IS NOT NULL 
--AND DATEPART(YYYY,PERFORM_DATE)=2016 AND MP_CASE='N' AND QTY_OUTLIER='N' AND SINGLE_ICD_OUTLIER_Y='N' AND ICD_OUTLIER_Y = 'N'
---- 50956
--SELECT COUNT(distinct case_id) FROM RPT_CASE_DATA_COST_VARIANCE
---- 15228
--SELECT COUNT(*) FROM Inpatient where case_id is not null

--2382035 2383169 1829586 1637544 134289
UPDATE RPT_CASE_DATA_COST_VARIANCE SET ICD10 = Inpatient.[Primary ICD10 Procedure Code] 
--SELECT COUNT(*)
FROM RPT_CASE_DATA_COST_VARIANCE,Inpatient
WHERE RPT_CASE_DATA_COST_VARIANCE.CASE_ID = Inpatient.CASE_ID
and DATEPART(YYYY,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE) = DATEPART(YYYY,Inpatient.PERFORM_DATE)
and DATEPART(MM,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE) = DATEPART(MM,Inpatient.PERFORM_DATE)
and DATEPART(DD,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE) = DATEPART(DD,Inpatient.PERFORM_DATE)
AND RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID = Inpatient.ECD
AND RPT_CASE_DATA_COST_VARIANCE.PHY_ID=Inpatient.CaseIDToEncCrossWalkPhysician
--AND RPT_CASE_DATA_COST_VARIANCE.PATIENT_ID = CAST(CAST(Inpatient.[Patient ID] AS int) AS NVARCHAR)

-- Updating ICD10 for the cases in Inpatient data file given by Mike/Orlando as we are not able to find exact matches based on the ECD & Perform date Ends ----


---- MATCH WITH CASE_ID, PROCEDURE_CODE, PHYSICIAN AND SPECIALTY AND UPDATE ENCOUNTER_ID----------
--WITH ICD NULL IN RPT: 10726/ (TOTAL CASES IN RPT:50956)/ ALL ICD MATCH: 14191  (PREVIOUS MATCH : 8288)

--SELECT COUNT(DISTINCT CASE_ID)
--FROM  RPT_CASE_DATA_COST_VARIANCE, CASE_ICD_DATA 
--WHERE RPT_CASE_DATA_COST_VARIANCE.CASE_ID = CASE_ICD_DATA.CASEID 
--AND RPT_CASE_DATA_COST_VARIANCE.SERVICE_CODE = CASE_ICD_DATA.SERVICE_CODE 
--AND RPT_CASE_DATA_COST_VARIANCE.PROCEDURE_CODE = CASE_ICD_DATA.PROCEDURE_CODE
--AND RPT_CASE_DATA_COST_VARIANCE.PHY_ID = CASE_ICD_DATA.PHYSICIAN
--AND (RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID IS NULL OR RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID = '' OR RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID = ' ')
--AND ( CASE_ICD_DATA.ECD IS NOT NULL OR  CASE_ICD_DATA.ECD = '' OR  CASE_ICD_DATA.ECD =' ')  

UPDATE RPT_CASE_DATA_COST_VARIANCE SET ENCOUNTER_ID = CASE_ICD_DATA.ECD
FROM  RPT_CASE_DATA_COST_VARIANCE, CASE_ICD_DATA 
WHERE RPT_CASE_DATA_COST_VARIANCE.CASE_ID = CASE_ICD_DATA.CASEID 
AND RPT_CASE_DATA_COST_VARIANCE.SERVICE_CODE = CASE_ICD_DATA.SERVICE_CODE 
AND RPT_CASE_DATA_COST_VARIANCE.PROCEDURE_CODE = CASE_ICD_DATA.PROCEDURE_CODE
AND RPT_CASE_DATA_COST_VARIANCE.PHY_ID = CASE_ICD_DATA.PHYSICIAN
AND (RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID IS NULL OR RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID = '' OR RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID = ' ')
AND ( CASE_ICD_DATA.ECD IS NOT NULL OR  CASE_ICD_DATA.ECD = '' OR  CASE_ICD_DATA.ECD =' ') 

--alter table RPT_CASE_DATA_COST_VARIANCE add ICD10 varchar(50)
--SELECT COUNT(*)
--from RPT_CASE_DATA_COST_VARIANCE,inpatient
--where RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID=inpatient.ECD
--and RPT_CASE_DATA_COST_VARIANCE.[PHY_ID]=inpatient.CaseIDToEncCrossWalkPhysician
--and datepart(yyyy,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(yyyy,Inpatient.PERFORM_DATE)
--and datepart(MM,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(MM,Inpatient.PERFORM_DATE)
--and datepart(DD,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(DD,Inpatient.PERFORM_DATE)

-- 126415
-- Updating ICD10 based on Inpatient data's Physician ID (CaseIDToEncCrossWalkPhysician)
UPDATE RPT_CASE_DATA_COST_VARIANCE SET ICD10 = inpatient.[Primary ICD10 Procedure Code]
FROM RPT_CASE_DATA_COST_VARIANCE,inpatient
WHERE RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID=inpatient.ECD
and RPT_CASE_DATA_COST_VARIANCE.[PHY_ID]=inpatient.CaseIDToEncCrossWalkPhysician
and datepart(yyyy,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(yyyy,Inpatient.PERFORM_DATE)
and datepart(MM,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(MM,Inpatient.PERFORM_DATE)
and datepart(DD,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(DD,Inpatient.PERFORM_DATE)
AND (RPT_CASE_DATA_COST_VARIANCE.ICD10 IS NULL OR RPT_CASE_DATA_COST_VARIANCE.ICD10 = '' OR RPT_CASE_DATA_COST_VARIANCE.ICD10 = ' ')

--SELECT COUNT(*)
--from RPT_CASE_DATA_COST_VARIANCE,inpatient
--where RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID=inpatient.ECD
--and RPT_CASE_DATA_COST_VARIANCE.[PHY_ID] = SUBSTRING(inpatient.Physician,0,CHARINDEX(',',inpatient.Physician,0))
--and datepart(yyyy,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(yyyy,Inpatient.PERFORM_DATE)
--and datepart(MM,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(MM,Inpatient.PERFORM_DATE)
--and datepart(DD,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(DD,Inpatient.PERFORM_DATE)
--AND RPT_CASE_DATA_COST_VARIANCE.ICD10 IS NULL

--152
-- Updating ICD10 based on Inpatient data's Physician (SUBSTRING(inpatient.Physician,0,CHARINDEX(',',inpatient.Physician,0)))
update RPT_CASE_DATA_COST_VARIANCE SET ICD10 = inpatient.[Primary ICD10 Procedure Code]
FROM RPT_CASE_DATA_COST_VARIANCE,inpatient
WHERE RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID=inpatient.ECD
and RPT_CASE_DATA_COST_VARIANCE.[PHY_ID] = SUBSTRING(inpatient.Physician,0,CHARINDEX(',',inpatient.Physician,0))
and datepart(yyyy,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(yyyy,Inpatient.PERFORM_DATE)
and datepart(MM,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(MM,Inpatient.PERFORM_DATE)
and datepart(DD,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(DD,Inpatient.PERFORM_DATE)
AND (RPT_CASE_DATA_COST_VARIANCE.ICD10 IS NULL OR RPT_CASE_DATA_COST_VARIANCE.ICD10 = '' OR RPT_CASE_DATA_COST_VARIANCE.ICD10 = ' ')

--SELECT COUNT(*)
--from RPT_CASE_DATA_COST_VARIANCE,inpatient
--where RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID=inpatient.ECD
--and RPT_CASE_DATA_COST_VARIANCE.[PHY_ID] = inpatient.Physician
--and datepart(yyyy,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(yyyy,Inpatient.PERFORM_DATE)
--and datepart(MM,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(MM,Inpatient.PERFORM_DATE)
--and datepart(DD,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(DD,Inpatient.PERFORM_DATE)
--AND RPT_CASE_DATA_COST_VARIANCE.ICD10 IS NULL

--SELECT TOP 10 * FROM Inpatient

--SELECT COUNT(*)
--from RPT_CASE_DATA_COST_VARIANCE,inpatient
--where RPT_CASE_DATA_COST_VARIANCE.ENCOUNTER_ID=inpatient.ECD
----and RPT_CASE_DATA_12072017.PERFORM_DATE=inpatient.PERFORM_DATE
--and datepart(yyyy,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(yyyy,Inpatient.PERFORM_DATE)
--and datepart(MM,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(MM,Inpatient.PERFORM_DATE)
--and datepart(DD,RPT_CASE_DATA_COST_VARIANCE.PERFORM_DATE)=datepart(DD,Inpatient.PERFORM_DATE)

------------ICD------------------------

----------------------------- starts ----------------------------------------------------------------
-- TODO (SR) - Rollup by Laterality
-- to Update ICD10 Description, CC360_ICD_Description and CC360_ICD_Rollup_Code from ICD master data 

--ALTER TABLE RPT_CASE_DATA_COST_VARIANCE 
--ADD ICD10_DESCRIPTION [nvarchar](255),
-- CC360_ICD10_DESCR [nvarchar](255),
-- CC360_ICD10_CODE [nvarchar](255)

--SELECT COUNT(*) -- ORIG_ICD10_CODE, ORIG_ICD10_DESCR, CC360_ICD10_DESCR, CC360_ICD10_CODE
-- 576,548
UPDATE RPT_CASE_DATA_COST_VARIANCE SET 
ICD10_DESCRIPTION = ICD10descriptionsmaster.ORIG_ICD10_DESCR ,
CC360_ICD10_DESCR = ICD10descriptionsmaster.CC360_ICD10_DESCR, 
CC360_ICD10_CODE = ICD10descriptionsmaster.CC360_ICD10_CODE
FROM dbo.ICD10descriptionsmaster, RPT_CASE_DATA_COST_VARIANCE 
WHERE RPT_CASE_DATA_COST_VARIANCE.ICD10 = dbo.ICD10descriptionsmaster.ORIG_ICD10_CODE
AND RPT_CASE_DATA_COST_VARIANCE.ICD10 IS NOT NULL

-- to Update ICD10 Description, CC360_ICD_Description and CC360_ICD_Rollup_Code from ICD master data 

--SELECT COUNT(DISTINCT ORIG_ICD10_CODE) FROM ICD10descriptionsmaster

--SELECT COUNT(*) FROM ICD10descriptionsmaster

--SELECT COUNT(*) FROM RPT_CASE_DATA_COST_VARIANCE WHERE ICD10 IS NOT NULL -- 586,394

--SELECT DISTINCT ICD10 FROM RPT_CASE_DATA_COST_VARIANCE WHERE ICD10 IS NOT NULL 
--AND ICD10 NOT IN (SELECT ORIG_ICD10_CODE FROM ICD10descriptionsmaster)

-- TODO (SR) - Rollup by Laterality - Cost Variance aggregation scripts 
-- TODO (SR) Discuss about updating rollup codes in RPT and then apply outlier logic
----------------------------- Ends ----------------------------------------------------------------


------------------------ Starts -------------------------------

-- Process to eliminate Single ICD cases starts ------------------------------

Run Singleton_ICD_Outliers.sql

-- Process to eliminate Single ICD cases ends------------------------------ 

------------------------ Ends -------------------------------

------------------------ Starts -------------------------------

Run Cost_Variance_Item_Details_table_Creation_V1.0.sql

------------------------ Ends -------------------------------



