{"version":3,"sources":["webpack:///./src/app/Shared/AtParWebApiResponse.ts","webpack:///./src/app/Reports/config.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/Login/login.component.ts","webpack:///./src/app/Login/login.routes.ts","webpack:///./src/app/AtPar/Menus/MenusService.ts","webpack:///./src/app/Login/index.ts","webpack:///./src/app/Login/login.service.ts","webpack:///./src/app/Login/login.component.html","webpack:///./src/app/Login/login.module.ts"],"names":[],"mappings":"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","file":"0.601fce7cdc00a672fc7a.chunk.js","sourcesContent":["\r\nimport { StatusType } from './atparenums';\r\nexport class AtParWebApiResponse<T> {\r\n    Data: T;\r\n    DataList: T[];\r\n    DataVariable: Object;\r\n    ExceptionMessage: string;\r\n    StatType: StatusType;\r\n    StatusCode: any;\r\n    StatusMessage: string; \r\n    DataDictionary: T[];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Shared/AtParWebApiResponse.ts","\nexport class Config {\n    public static getPath(value: string): string {\n\n        let apiEndPoint = window.location.protocol + \"//\" + window.location.hostname + \"/AtPar/ReportingStarterApi/\"\n\n       // let apiEndPoint = \"http://localhost/WebApi2StarterKit/\";\n       // let apiEndPoint = \"http://Localhost/AtPar/ReportingStarterApi/\"\n        //debugger;\n        switch (value) {\n            case \"register\":\n                return apiEndPoint + \"api/Account/Register\";\n            case \"login\":\n                return apiEndPoint + \"Token\";\n            case \"logout\":\n                return apiEndPoint + \"api/Account/Logout\";\n            case \"getizendatoken\":\n                return apiEndPoint + \"api/User/GenerateToken\";\n            default:\n                return \"\";\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Reports/config.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response, RequestOptions, URLSearchParams } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map'\nimport { Config } from '../Reports/config'\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthenticationService {\n    public token: string;\n\n    constructor(private http: Http, private router:Router) {\n        // set token if saved in local storage\n        var currentUser = localStorage.getItem('currentUser');\n        this.token =  localStorage.getItem('tokenKey');\n    }\n\n    public  login(tenantname: string, username: string, password: string): Observable<boolean> {\n        let url: string = Config.getPath(\"login\");\n        \n        let urlSearchParams  = new URLSearchParams();\n        urlSearchParams.append('grant_type', 'password');\n        urlSearchParams.append('tenant', tenantname);\n        urlSearchParams.append('username', username);\n        urlSearchParams.append('password', password);\n\n        let body = urlSearchParams.toString();\n\n        let headers: Headers = new Headers({ \"Content-Type\": \"application/x-www-form-urlencoded\" });\n        let options: RequestOptions = new RequestOptions({ headers: headers });\n        \n        return this.http.post(url, body, options )\n            .map((response: Response) => {\n                let token = response.json() && response.json().access_token;\n                console.log(token);\n                if (token) {\n                    this.token = token;\n                    localStorage.setItem('currentUser', username);\n                    localStorage.setItem('tokenKey', token);\n                    this.getIzendaToken(token);\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n    }\n\n\n    //public async login(tenantname: string, username: string, password: string):Boolean {\n    //    let url: string = Config.getPath(\"login\");\n\n    //    let urlSearchParams = new URLSearchParams();\n    //    urlSearchParams.append('grant_type', 'password');\n    //    urlSearchParams.append('tenant', tenantname);\n    //    urlSearchParams.append('username', username);\n    //    urlSearchParams.append('password', password);\n\n    //    let body = urlSearchParams.toString();\n\n    //    let headers: Headers = new Headers({ \"Content-Type\": \"application/x-www-form-urlencoded\" });\n    //    let options: RequestOptions = new RequestOptions({ headers: headers });\n\n    //    return await this.http.post(url, body, options)\n    //        .map((response: Response) => {\n    //            let token = response.json() && response.json().access_token;\n    //            console.log(token);\n    //            if (token) {\n    //                this.token = token;\n    //                localStorage.setItem('currentUser', username);\n    //                localStorage.setItem('tokenKey', token);\n    //                this.getIzendaToken(token);\n    //                return true;\n    //            } else {\n    //                return false;\n    //            }\n    //        });\n    //}\n\n\n    Newlogin(tenantname: string, username: string, password: string) {\n\n        debugger;\n        let url: string = Config.getPath(\"login\");\n\n        let urlSearchParams = new URLSearchParams();\n        urlSearchParams.append('grant_type', 'password');\n        urlSearchParams.append('tenant', tenantname);\n        urlSearchParams.append('username', username);\n        urlSearchParams.append('password', password);\n\n        let body = urlSearchParams.toString();\n\n        let headers: Headers = new Headers({ \"Content-Type\": \"application/x-www-form-urlencoded\" });\n        let options: RequestOptions = new RequestOptions({ headers: headers });\n\n        this.http.post(url, body, options)\n            .map((response: Response) => {\n                let token = response.json() && response.json().access_token;\n                console.log(token);\n                if (token) {\n                    this.token = token;\n                    localStorage.setItem('currentUser', username);\n                    localStorage.setItem('tokenKey', token);\n                    this.getIzendaToken(token);\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n    }\n\n    logout(){\n        let url: string = Config.getPath(\"logout\");\n        var token = localStorage.getItem(\"tokenKey\");\n        let headers:Headers;\n        if (token) {\n            headers = new Headers({ \"Authorization\": 'Bearer ' + token });\n        }\n        let body = {};\n        let options: RequestOptions = new RequestOptions({ headers: headers });\n\n        return this.http.post(url, body, options )\n            .subscribe(response => {\n                    localStorage.removeItem('currentUser');\n                    localStorage.removeItem('tokenKey');\n                    localStorage.removeItem('izendatoken');\n            },\n            err=> { \n                console.log(err);\n                });\n        \n    }\n\n    register(tenantname: string, username: string, password: string, confirmpassword: string) {\n        let url: string = Config.getPath(\"register\");\n        let headers: Headers = new Headers({ \"Content-Type\": \"application/json; charset=utf-8\" });\n        let body: string = JSON.stringify({Tenant: tenantname,  Email: username, Password: password, ConfirmPassword: confirmpassword });\n        let options: RequestOptions = new RequestOptions({ headers: headers });\n\n\n        return this.http.post(url, body, options )\n            .map((response: Response) => {\n                if(response.status >= 200 && response.status < 300 ){\n                    return true;\n                }\n                else{\n                      return false;\n                }\n            });\n    }\n\n    getIzendaToken(token:string): void {\n        let url: string = Config.getPath(\"getizendatoken\");\n        let  headers = new Headers({ \"Authorization\": 'Bearer ' + token });\n        let options: RequestOptions = new RequestOptions({ headers: headers });\n\n        this.http.get(url, options)\n        .subscribe(\n            data => {\n                console.log(data.json());\n                localStorage.setItem(\"izendatoken\", data.json());\n            },\n            error => {\n                console.log(\"Cannot get Izenda Token\");\n                console.log(error);\n            });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/_services/authentication.service.ts","import {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    ViewChild,\r\n    ElementRef,\r\n    Inject\r\n} from '@angular/core';\r\n\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nimport {\r\n    Router,\r\n    ActivatedRoute,\r\n    Params,\r\n    NavigationExtras\r\n} from '@angular/router';\r\n\r\nimport {\r\n    Http,\r\n    Response\r\n} from '@angular/http';\r\n\r\nimport {\r\n    AbstractControl,\r\n    FormArray,\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators\r\n} from '@angular/forms';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport * as Rx from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { List } from 'linqts';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\n\r\nimport {\r\n    TokenEntry_Enum,\r\n    ClientType,\r\n    StatusType,\r\n    EnumApps,\r\n    YesNo_Enum\r\n} from '../Shared/AtParEnums';\r\n\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { MT_ATPAR_USER_PROFILE_APP_ACL_ORG } from '../Entities/MT_ATPAR_USER_PROFILE_APP_ACL_ORG';\r\nimport { MT_ATPAR_USER_PROFILE_APP_ACL } from '../Entities/MT_ATPAR_USER_PROFILE_APP_ACL';\r\nimport { MT_ATPAR_USER_ORG_GROUPS } from '../Entities/MT_ATPAR_USER_ORG_GROUPS';\r\nimport { MT_ATPAR_SYSTEM_DB } from '../Entities/MT_ATPAR_SYSTEM_DB';\r\nimport { MT_ATPAR_APP } from '../Entities/MT_ATPAR_APP';\r\nimport { MT_ATPAR_APP_GROUP } from '../Entities/MT_ATPAR_APP_GROUP';\r\nimport { VM_REPORTS_MENUS } from '../Entities/VM_REPORTS_MENUS';\r\nimport { loginService } from './login.service';\r\n//import { CustomValidators } from '../common/textbox/custom-validators';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { MenuServices } from '../AtPar/Menus/MenusService';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\n\r\nimport {\r\n    SelectItem,\r\n    Message\r\n} from './../components/common/api';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { IzendaIntegrate } from '../_helpers/izendaintegrate';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { LeftBarAnimationService } from '../Home/leftbar-animation.service';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\n/**\r\n*\tThis class represents the lazy loaded LoginComponent.\r\n*/\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n    selector: 'login-cmp',\r\n    template: require('./login.component.html'),\r\n    providers: [\r\n        MenuServices,\r\n        loginService,\r\n        AuthenticationService,\r\n        AtParConstants,\r\n        HttpService\r\n    ],\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n    model: any = {};\r\n    mhsicon: string = \"\";\r\n    visibleUserID: boolean = false;\r\n    visiblePassword = false;\r\n    pSSOByPass: boolean;\r\n    trSystemId: boolean = false;\r\n    isSSOEnabled: boolean = false;\r\n    isValidUser: false;\r\n    statusCode: number = -1;\r\n    activeLblUserID: String;\r\n    activeLblPassword: String;\r\n    userId: string = \"\";\r\n    password: string = \"\";\r\n    deviceID: string = \"\";\r\n    systemID: string = \"\";\r\n    dateTime: string = \"\";\r\n    accessToken: string = \"\";\r\n    accessTokenXML: any;\r\n    errorCode: string = \"\";\r\n    _dbConnectionString: string = \"\";\r\n    systemRowData: any;\r\n    strServer: string = \"\";\r\n    strDatabase: string = \"\";\r\n    strUserID: string = \"\";\r\n    strPassword: string = \"\";\r\n    strSSOVariable: string = \"\";\r\n    strSSOCookie: string = \"\";\r\n    strSSOLogout: string = \"\";\r\n    strSystemId: string = \"\";\r\n    hdnSystemId: string = \"\";\r\n    strSSOUser: string = \"\";\r\n    gStrSSOUser: string = \"\";\r\n    selectedDB: string = \"\";\r\n    statusMessage: string = \"\";\r\n    statusType: any;\r\n    ipAddress: any;\r\n    passHash: any;\r\n    decryptpassword: any;\r\n    message: string;\r\n    dropdownData: SelectItem[] = [];\r\n    roleIds: MT_ATPAR_USER_PROFILE_APP_ACL[];\r\n    msgs: Message[] = [];\r\n    _deviceTokenEntry: string[] = [];\r\n    systemData: MT_ATPAR_SYSTEM_DB[];\r\n    menus: Menus[];\r\n    atweb: AtParWebApiResponse<MT_ATPAR_SYSTEM_DB>;\r\n    userToken: AtParWebApiResponse<MT_ATPAR_USER_PROFILE_APP_ACL_ORG>;\r\n    lstApps: List<MT_ATPAR_APP>;\r\n    lstAppGroups: List<MT_ATPAR_APP_GROUP>;\r\n    lstMenus: List<Menus>;\r\n    lstRepMenus: List<VM_REPORTS_MENUS>;\r\n    myForm: FormGroup;\r\n    ipData: AtParWebApiResponse<string>;\r\n    breadCrumbName: string = \"\";\r\n    breadCrumbMenu: Menus;\r\n    savedUserID: boolean = true;\r\n    savedPassword: boolean = true;\r\n    @ViewChild('userID') user: ElementRef;\r\n    @ViewChild('f') formGroup;\r\n    public userID: HTMLDivElement;\r\n\r\n    constructor(\r\n        public fb: FormBuilder,\r\n        private router: Router,\r\n        private loginService: loginService,\r\n        private route: ActivatedRoute,\r\n        private spinnerService: SpinnerService,\r\n        private menulistService: MenuServices,\r\n        private authenticationservice: AuthenticationService,\r\n        private title: Title,\r\n        private izItergrate: IzendaIntegrate,\r\n        private atParConstant: AtParConstants,\r\n        private leftBarAnimationsewrvice: LeftBarAnimationService,\r\n        @Inject(DOCUMENT) private document,\r\n        private httpService: HttpService\r\n    ) {\r\n        try {\r\n            debugger;\r\n            this.mhsicon = \"assets/images/MHSAtpar.png\";\r\n            this.httpService.clearAppSession();\r\n            localStorage.setItem('isTrackITLogin', YesNo_Enum.N.toString());\r\n            this.title.setTitle('Login');\r\n            this.visibleUserID = false;\r\n            this.visiblePassword = false;\r\n            this.lstAppGroups = new List<MT_ATPAR_APP_GROUP>();\r\n            this.lstApps = new List<MT_ATPAR_APP>();\r\n            this.lstMenus = new List<Menus>();\r\n            HttpService.previousTime = new Date();\r\n            this.myForm = this.fb.group({\r\n                userID: ['', Validators.required],\r\n                password: ['', Validators.required],\r\n            });\r\n            this.breadCrumbMenu = new Menus();\r\n            debugger;\r\n            alert(navigator.onLine);\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"constructor\");\r\n        }\r\n    }\r\n\r\n    onFocusUserName() {\r\n        try {\r\n            if (this.model.userID == \"undefined\") {\r\n                this.visibleUserID = !this.visibleUserID;\r\n            } else { this.visibleUserID = true };\r\n            this.activeLblUserID = this.visibleUserID ? 'input-disturbed' : 'hide-class';\r\n            this.savedUserID = false;\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onFocusUserName\");\r\n        }\r\n    }\r\n\r\n    onFocusPassword() {\r\n        try {\r\n            if (this.model.password == \"undefined\") {\r\n                this.visiblePassword = !this.visiblePassword;\r\n            } else { this.visiblePassword = true; }\r\n            this.activeLblPassword = this.visiblePassword ? 'input-disturbed' : 'hide-class';\r\n            this.savedPassword = false;\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onFocusPassword\");\r\n        }\r\n    }\r\n\r\n    formKeyPressEvent(event) {\r\n        try {\r\n            if (event.charCode == 13) {\r\n                if (this.model.userID == null || this.model.userID == undefined || this.model.userID == '') {\r\n                    (<HTMLInputElement>document.getElementById(\"txtUserID\")).focus();\r\n                }\r\n                else if (this.model.password == null || this.model.password == undefined || this.model.password == '') {\r\n                    (<HTMLInputElement>document.getElementById(\"txtPassword\")).focus();\r\n                }\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"formKeyPressEvent\");\r\n        }\r\n    }\r\n\r\n    async onSubmit(userId, password) {\r\n\r\n        try {\r\n\r\n            if (userId == null || userId == \"\" || userId == undefined) {\r\n                this.statusMessage = \"Please enter Valid User ID\";\r\n                (<HTMLInputElement>document.getElementById(\"txtUserID\")).focus();\r\n                this.msgs = [];\r\n                this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                return;\r\n            }\r\n\r\n            if (password == null || password == \"\" || password == undefined) {\r\n                this.statusMessage = \"Please enter Valid Password\";\r\n                (<HTMLInputElement>document.getElementById(\"txtPassword\")).focus();\r\n                this.msgs = [];\r\n                this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                return;\r\n            }\r\n\r\n            this.userId = userId.toUpperCase();\r\n\r\n            if (((<HTMLInputElement>document.getElementById(\"txtPassword\")).value == null)\r\n                || ((<HTMLInputElement>document.getElementById(\"txtPassword\")).value == '')) {\r\n                this.model.password = null;\r\n                return;\r\n            }\r\n\r\n            localStorage.setItem(\"userId\", userId);\r\n\r\n            if (this.trSystemId == true) {\r\n                if (this.selectedDB == null || this.selectedDB == \"\" ||\r\n                    this.selectedDB == undefined || this.selectedDB == \"Select System ID\") {\r\n                    this.statusMessage = \"Please select a SystemId\";\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (typeof this.hdnSystemId.trim() != 'undefined' && this.hdnSystemId) {\r\n                this.systemID = await this.hdnSystemId;\r\n            }\r\n            else {\r\n                this.systemID = this.selectedDB;\r\n            }\r\n            try {\r\n\r\n                await this.loginService.GetIpAddress()\r\n                    .then((res: Response) => {\r\n                        let data = res.json();\r\n                        this.deviceID = data.DataVariable.toString();\r\n                    });\r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"onSubmit\");\r\n                console.log('GetIpAddress failed :' + ex.toString());\r\n            }\r\n\r\n            this.DoLogin(this.userId, password, this.deviceID, this.pSSOByPass, this.systemID);\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onSubmit\");\r\n            console.log('on submit failed :' + ex.toString());\r\n        }\r\n    }\r\n\r\n    async DoLogin(userID, password, deviceID, pSSOByPass, SystemID) {\r\n\r\n        try {\r\n            this.msgs = [];\r\n            HttpService.previousTime = new Date();\r\n            var key = CryptoJS.enc.Utf8.parse('8080808080808080');\r\n            var iv = CryptoJS.enc.Utf8.parse('8080808080808080');\r\n\r\n            // Storing Password for Old application will remove later\r\n            localStorage.setItem(\"UserLoginPwd\", password);\r\n\r\n            this.passHash = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(password), key,\r\n                { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\r\n            this.spinnerService.start();\r\n            try {\r\n                await this.loginService.GetAppRoleIDs(userID)\r\n                    .then((res: Response) => {\r\n                        let data = res.json();\r\n                        this.roleIds = data.DataList;\r\n                        if (this.roleIds != null) {\r\n                            if (this.roleIds.length > 0) {\r\n                                this._deviceTokenEntry[TokenEntry_Enum.LdapUser] = this.roleIds[0].LDAP_USER;\r\n                                this._deviceTokenEntry[TokenEntry_Enum.ProfileID] = this.roleIds[0].PROFILE_ID\r\n                            }\r\n                        }\r\n\r\n                    });\r\n\r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"DoLogin\");\r\n                console.log('GetAppRoleIDs failed:' + ex.toString());\r\n            }\r\n\r\n            try {\r\n                let orgGrpId: string = \"\";\r\n                await this.loginService.GetUserOrgGrpID(userID)\r\n                    .then((res: Response) => {\r\n                        let data = res.json();\r\n                        if (data.DataVariable != null && data.DataVariable != \"\") {\r\n                            orgGrpId = data.DataVariable.toString();\r\n                            this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID] = data.DataVariable.toString();\r\n                            sessionStorage.setItem(\"OrgGroupID\", orgGrpId);\r\n                        }\r\n\r\n                    });\r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"DoLogin\");\r\n                console.log('GetUserOrgGrpID failed :' + ex.toString());\r\n            }\r\n\r\n            try {\r\n\r\n                await this.loginService.GetRecordsPerPage(userID)\r\n                    .then((res: Response) => {\r\n                        let data1 = res.json();\r\n                        if (data1.Data != null) {\r\n                            this._deviceTokenEntry[TokenEntry_Enum.RecordsPerPage] = data1.Data.RECORDS_PER_PAGE.toString();\r\n                            if (data1.Data.IDLE_TIME != null) {\r\n                                this._deviceTokenEntry[TokenEntry_Enum.IdleTime] = data1.Data.IDLE_TIME.toString();\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"DoLogin\");\r\n                console.log('GetRecordsPerPage failed:' + ex.toString());\r\n            }\r\n\r\n            try {\r\n                await this.UpdateIzendaHosting(window.location.protocol.toString() + \"//\" + window.location.hostname.toString());\r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"DoLogin\");\r\n                console.log('UpdateIzendaHosting failed:' + ex.toString());\r\n\r\n            }\r\n\r\n            this.pSSOByPass = false;\r\n            this.accessToken = \"\";\r\n            this.dateTime = new Date().toLocaleString().toString();\r\n            var dateStr = new Date().toLocaleString().replace(/[^A-Za-z 0-9 \\.,\\?\"\"!@#\\$%\\^&\\*\\(\\)-_=\\+;:<>\\/\\\\\\|\\}\\{\\[\\]`~]*/g, '');\r\n            this.dateTime = dateStr.replace(',', '')\r\n            this._deviceTokenEntry[TokenEntry_Enum.UserID] = userID;\r\n            this._deviceTokenEntry[TokenEntry_Enum.DeviceID] = deviceID;\r\n            this._deviceTokenEntry[TokenEntry_Enum.DateTime] = this.dateTime;\r\n            this._deviceTokenEntry[TokenEntry_Enum.ClientType] = ClientType.WEB.toFixed().toString();\r\n            this._deviceTokenEntry[TokenEntry_Enum.SystemId] = SystemID;\r\n            this._deviceTokenEntry[TokenEntry_Enum.AccessToken] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.AppName] = EnumApps[EnumApps.Init].toString();\r\n            localStorage.setItem(\"DeviceTokenEntry\", JSON.stringify(this._deviceTokenEntry));\r\n\r\n            try {\r\n                await this.loginService.GetAccessToken(userID, this.passHash, ClientType.WEB,\r\n                    this.dateTime, this.deviceID, this.accessToken,\r\n                    this.pSSOByPass)\r\n                    .subscribe((response: Response) => {\r\n                        let data = response.json();\r\n                        this.accessTokenXML = data.DataVariable,\r\n                            this.statusCode = data.StatusCode;\r\n                        this.statusType = data.StatType;\r\n                        this.statusMessage = data.StatusMessage;\r\n\r\n                        switch (this.statusType) {\r\n                            case StatusType.Success:\r\n                                this.GetConnectionDetails(JSON.parse(localStorage.getItem(\"DeviceTokenEntry\")));\r\n                                this.GetMenuList();\r\n                                break;\r\n                            case StatusType.Error:\r\n                                this.setDeviceTokenSession();\r\n                                this.spinnerService.stop();\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: this.statusMessage });\r\n                                break;\r\n                            case StatusType.Warn:\r\n                                this.spinnerService.stop();\r\n                                if (this.statusCode == AtparStatusCodes.ATPAR_E_PASSWORDEXPIRED ||\r\n                                    this.statusCode == AtparStatusCodes.ATPAR_E_PASSWORDRESETREQ) {\r\n\r\n                                    let navigationExtras: NavigationExtras = {\r\n                                        queryParams: { 'userId': this.userId }\r\n                                    };\r\n\r\n                                    this.breadCrumbMenu.APP_NAME = 'Change Password';\r\n                                    this.breadCrumbMenu.ROUTE = 'changepassword'\r\n                                    this.breadCrumbMenu.IS_DIV = false;\r\n                                    //var�groupModules�=�this.breadCrumbMenu;\r\n                                    localStorage.setItem('BreadCrumbMenus', JSON.stringify(this.breadCrumbMenu));\r\n                                    this.router.navigate(['atpar/changepassword'], navigationExtras);\r\n                                }\r\n                                else {\r\n                                    this.setDeviceTokenSession();\r\n                                    this.msgs = [];\r\n                                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                                    var txtvalue = <HTMLInputElement>document.getElementById(\"txtUserID\");\r\n                                    var txtpsw = <HTMLInputElement>document.getElementById(\"txtPassword\");\r\n                                    txtpsw.value = null;\r\n                                    txtvalue.focus();\r\n\r\n                                }\r\n                                break;\r\n                            case StatusType.Custom:\r\n                                this.setDeviceTokenSession();\r\n                                this.spinnerService.stop();\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'custom', summary: AtParConstants.GrowlTitle_Info, detail: this.statusMessage });\r\n                                break;\r\n                            default:\r\n                                this.setDeviceTokenSession();\r\n                                this.spinnerService.stop();\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: \"Login Failed\" });\r\n                                break;\r\n\r\n                        }\r\n                    });\r\n            }\r\n\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"DoLogin\");\r\n                console.log('GetAccessToken failed :' + ex.toString());\r\n            }\r\n\r\n            try {\r\n\r\n                this.izItergrate.DoIzendaConfig();\r\n                var tenant, username1, password1;\r\n\r\n                if (userID == 'ADMIN') {\r\n                    tenant = undefined;\r\n                    username1 = 'IzendaAdmin@system.com';\r\n                    password1 = 'Izenda@123';\r\n                }\r\n                else {\r\n                    tenant = 'AtParMT';\r\n                    username1 = userID;\r\n                    password1 = 'AtparReports@123';\r\n                }\r\n\r\n                var iztoken = this.authenticationservice.login(tenant, username1, password1)\r\n                    .subscribe(result => {\r\n\r\n                        if (result === true) {\r\n                            console.log('reports login successful');\r\n                        } else {\r\n                            console.log('reports login failed');\r\n                        }\r\n                    },\r\n                    error => {\r\n                        console.log(error);\r\n                    });\r\n\r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"DoLogin\");\r\n                console.log('reports login failed');\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"DoLogin\");\r\n            console.log('reports login failed :' + ex.toString());\r\n        }\r\n    }\r\n\r\n    async UpdateIzendaHosting(hostName: string) {\r\n        try {\r\n            await this.loginService.UpdateIzendaHosting(hostName).then((res: Response) => {\r\n                let data = res.json();\r\n\r\n            });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"UpdateIzendaHosting\");\r\n            console.log('UpdateIzendaHosting failed :' + ex.toString());\r\n        }\r\n    }\r\n\r\n    async GetSystemIds(data: string): Promise<AtParWebApiResponse<MT_ATPAR_SYSTEM_DB>> {\r\n\r\n        try {\r\n            this.atweb = new AtParWebApiResponse<MT_ATPAR_SYSTEM_DB>();\r\n            try {\r\n                this.spinnerService.start();\r\n                await this.loginService.GetSystemIDs(data)\r\n                    .then((res: Response) => {\r\n                        debugger;\r\n                        let data = res.json();\r\n                        this.atweb = data;\r\n                    }).catch(res => {\r\n                        debugger;\r\n                        alert('offline mode');\r\n                    });\r\n                return this.atweb;\r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"GetSystemIds\");\r\n                console.log('GetSystemIDs failed :' + ex.toString());\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"GetSystemIds\");\r\n            console.log('GetSystemIDs failed :' + ex.toString());\r\n        }\r\n\r\n    }\r\n\r\n    async ngOnInit() {\r\n\r\n        try {\r\n            debugger;\r\n            let samplResponse: string = '';\r\n            let strSSOUser: string = '';\r\n            await this.setDeviceTokenSession();\r\n            this.spinnerService.start();\r\n            var redirect;\r\n            this.route.queryParams.subscribe((params: Params) => {\r\n                this.message = params['statusMessage'];\r\n                if (this.message != '' && this.message != null) {\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: this.message });\r\n                }\r\n            });\r\n\r\n            this.route.queryParams.subscribe((params: Params) => {\r\n                redirect = params['redirected'];\r\n            });\r\n            if (HttpService.redirect == \"Y\") {\r\n                this.statusMessage = \"Session Expired\";\r\n                this.msgs = [];\r\n                this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n            }\r\n\r\n            await this.getLoginTemplateStyle();\r\n            await this.LoadData();\r\n\r\n            if (this.hdnSystemId.trim() == \"\" || this.hdnSystemId == \"\" || this.hdnSystemId == undefined) {\r\n                this.BindDropDown();\r\n            }\r\n            //await this.loginService.IsSSOEnabled()\r\n            //    .then((res: Response) => {\r\n            //        let data = res.json() as AtParWebApiResponse<number>;\r\n            //        switch (data.StatType) {\r\n            //            case StatusType.Success: {\r\n            //                this.statusCode = data.StatusCode;\r\n            //                this.statusType = data.StatType\r\n            //                this.isSSOEnabled = data.DataDictionary['isEnabled'];\r\n            //                this.strSSOVariable = data.DataDictionary['SSOVariable'];\r\n            //                this.strSSOCookie = data.DataDictionary['SSOCookie'];\r\n            //                this.strSSOLogout = data.DataDictionary['SSORedirect'];\r\n            //                break;\r\n            //            }\r\n            //            case StatusType.Error: {\r\n            //                this.msgs = [];\r\n            //                this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: \"Failed to get the SSO Check value\" });\r\n            //                break;\r\n            //            }\r\n            //            case StatusType.Warn: {\r\n            //                if (data.StatusCode == AtparStatusCodes.E_ATPARSERVICESTOPPED) {\r\n            //                    this.msgs = [];\r\n            //                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"AtPar application service is stopped, this should be running to communicate with server.\" });\r\n            //                }\r\n            //                this.msgs = [];\r\n            //                this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n            //                break;\r\n            //            }\r\n            //            case StatusType.Custom: {\r\n            //                this.msgs = [];\r\n            //                this.msgs.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n            //                break;\r\n            //            }\r\n            //        }\r\n            //        if (data.StatType != StatusType.Success) {\r\n            //            return;\r\n            //        }\r\n            //        if (this.isSSOEnabled == true) {\r\n\r\n            //            this.GetConnectionDetails(JSON.parse(localStorage.getItem(\"DeviceTokenEntry\")));\r\n            //            if (this.strSSOVariable != null || this.strSSOVariable != '' || this.strSSOVariable != undefined) {\r\n            //                this.route.queryParams.subscribe((params: Params) => {\r\n            //                    samplResponse = params['SAMLResponse'];\r\n\r\n            //                });\r\n            //                this.loginService.GetSAMLResponse(this.strSSOVariable)\r\n            //                    .then((res: Response) => {\r\n            //                        let data = res.json() as AtParWebApiResponse<number>;\r\n            //                        let inputLength = data.DataDictionary[\"inputLenth\"];\r\n\r\n            //                        if (inputLength != 0) {\r\n            //                            if (samplResponse != null) {\r\n            //                                if (samplResponse.length > 0) {\r\n\r\n            //                                    this.loginService.ValidateSamlResponse(this.strSSOVariable)\r\n            //                                        .then((res: Response) => {\r\n            //                                            let data = res.json() as AtParWebApiResponse<number>;\r\n            //                                            return;\r\n\r\n            //                                        });\r\n            //                                }\r\n            //                            }\r\n            //                        }\r\n            //                        strSSOUser = data.DataDictionary[\"strSSOUser\"];\r\n            //                        strSSOUser = strSSOUser.toUpperCase();\r\n            //                        localStorage.setItem(\"userId\", strSSOUser);\r\n            //                        this.gStrSSOUser = strSSOUser;\r\n\r\n\r\n            //                    });\r\n            //            }\r\n\r\n            //            this.SSOLogin(strSSOUser, this.isSSOEnabled);\r\n            //        }\r\n            //        else {\r\n            //            if (this.hdnSystemId.trim() == \"\" || this.hdnSystemId != \"\") {\r\n            //                this.trSystemId = false;\r\n            //            }\r\n            //            else {\r\n            //                this.trSystemId = true;\r\n            //            }\r\n            //            this.gStrSSOUser = '';\r\n\r\n            //        }\r\n\r\n            //    });\r\n            debugger;\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n            console.log('ngOnInit failed :' + ex.toString());\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async getLoginTemplateStyle() {\r\n        try {\r\n            let wheight: any;\r\n            let loginHeight: any;\r\n            let loginWidth: any;\r\n            let wWidth: any;\r\n            wheight = window.innerHeight;\r\n            wWidth = window.innerWidth;\r\n\r\n            let loginElement: HTMLElement = (<HTMLElement>document.getElementById('divlogin'));\r\n\r\n            loginHeight = loginElement.clientHeight;\r\n            loginWidth = loginElement.clientWidth;\r\n\r\n            loginElement.style.setProperty('margin', (((wheight / 100) * 45) - (loginHeight / 2)) + 'px ' + '0 0 ' + ((wWidth / 2) - (loginWidth / 2)) + 'px');\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'getLoginTemplateStyle');\r\n        }\r\n\r\n    }\r\n\r\n    setDeviceTokenSession() {\r\n\r\n        try {\r\n            this._deviceTokenEntry[TokenEntry_Enum.UserID] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.DeviceID] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.DateTime] = this.dateTime;\r\n            this._deviceTokenEntry[TokenEntry_Enum.ClientType] = ClientType.WEB.toFixed().toString();\r\n            this._deviceTokenEntry[TokenEntry_Enum.SystemId] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.AccessToken] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.IdleTime] = \"1000\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.DeptID] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.AppName] = EnumApps[EnumApps.Init].toString()\r\n            localStorage.setItem(\"DeviceTokenEntry\", JSON.stringify(this._deviceTokenEntry));\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"setDeviceTokenSession\");\r\n            console.log('setDeviceTokenSession failed :' + ex.toString());\r\n        }\r\n    }\r\n\r\n    public async LoadData() {\r\n\r\n        try {\r\n            var querySystemID;\r\n\r\n            this.route.queryParams.subscribe((params: Params) => {\r\n                querySystemID = params['systemid'];\r\n            });\r\n            if (querySystemID != null) {\r\n                if (querySystemID.trim() != \"\") {\r\n                    // Checks whether the systemid from the query string exists in the DB or not\r\n                    this.strSystemId = querySystemID.toUpperCase();\r\n                    await this.CheckSystemID(this.strSystemId);\r\n                }\r\n                else {\r\n                    this.hdnSystemId = \"\";\r\n                    this.trSystemId = false;\r\n                }\r\n            }\r\n            else {\r\n\r\n                this.atweb = await this.GetSystemIds(\"\");\r\n                this.systemData = this.atweb.DataList;\r\n                sessionStorage.setItem(\"lstSystemIDs\", JSON.stringify(this.systemData));\r\n                this.statusCode = this.atweb.StatusCode;\r\n                this.statusType = this.atweb.StatType;\r\n                this.statusMessage = this.atweb.StatusMessage;\r\n                switch (this.statusType) {\r\n                    case StatusType.Success: {\r\n                        if (this.systemData.length > 1) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            this.hdnSystemId = this.systemData[0].SYSTEM_ID;\r\n                            this.trSystemId = false;\r\n                            this._deviceTokenEntry[TokenEntry_Enum.SystemId] = this.hdnSystemId;\r\n\r\n                        }\r\n                        break;\r\n                    }\r\n                    case StatusType.Error:\r\n                        this.statusMessage = this.statusMessage;\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: this.statusMessage });\r\n                        break;\r\n                    case StatusType.Warn:\r\n                        this.statusMessage = this.statusMessage;\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                        break;\r\n                    case StatusType.Custom:\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'custom', summary: AtParConstants.GrowlTitle_Info, detail: this.statusMessage });\r\n                        break;\r\n                }\r\n\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"LoadData\");\r\n            console.log('LoadData failed :' + ex.toString());\r\n        }\r\n    }\r\n\r\n    async GetConnectionDetails(_deviceTokenEntry: string[]) {\r\n\r\n        try {\r\n            this.systemData = (JSON.parse(sessionStorage.getItem(\"lstSystemIDs\"))).filter((x) => x.SYSTEM_ID == _deviceTokenEntry[TokenEntry_Enum.SystemId]);\r\n            if (this.systemData != null) {\r\n                if (this.systemData.length > 0) {\r\n                    this.strServer = this.systemData[0].SERVER;\r\n                    this.strDatabase = this.systemData[0].DATASOURCE;\r\n                    this.strUserID = this.systemData[0].USERID;\r\n                    this.strPassword = this.systemData[0].PASSWORD;\r\n                }\r\n            }\r\n            this._dbConnectionString = \"data source=\" + this.strServer + \";database=\" + this.strDatabase + \";user id=\" + this.strUserID + \";password=\" + this.strPassword;\r\n            localStorage.setItem(\"LocalDbConncetionString\", this._dbConnectionString);\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"GetConnectionDetails\");\r\n            console.log('GetConnectionDetails failed :' + ex.toString());\r\n        }\r\n    }\r\n\r\n    async GetMenuList() {\r\n\r\n        try {\r\n            this.lstAppGroups = new List<MT_ATPAR_APP_GROUP>();\r\n            this.lstApps = new List<MT_ATPAR_APP>();\r\n            this.lstMenus = new List<Menus>();\r\n\r\n            await this.menulistService.getGroupMenuList(\r\n                this._deviceTokenEntry[TokenEntry_Enum.ProfileID],\r\n                this._deviceTokenEntry[TokenEntry_Enum.UserID]\r\n            )\r\n                .then((res: Response) => {\r\n                    try {\r\n                        let data = res.json() as AtParWebApiResponse<number>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.statusCode = data.StatusCode;\r\n                                this.statusType = data.StatType\r\n                                this.lstAppGroups = data.DataDictionary['lstAppGroups'];\r\n                                this.lstApps = data.DataDictionary['lstApps'];\r\n                                this.lstMenus = data.DataDictionary['lstMenus'];\r\n                                this.lstRepMenus = data.DataDictionary['lstReportMenus'];\r\n                                localStorage.setItem('MenuList', JSON.stringify(this.lstMenus));\r\n                                localStorage.setItem('AppGroups', JSON.stringify(this.lstAppGroups));\r\n                                localStorage.setItem('Apps', JSON.stringify(this.lstApps));\r\n                                localStorage.setItem('ReportMenus', JSON.stringify(this.lstRepMenus));\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            return;\r\n                        }\r\n\r\n                    } catch (ex) {\r\n                        this.clientErrorMsg(ex, \"GetMenuList\");\r\n                        console.log('getGroupMenuList failed :' + ex.toString());\r\n                    }\r\n\r\n                });\r\n            this.breadCrumbMenu.APP_NAME = \"Home\";\r\n            this.breadCrumbMenu.MENU_NAME = \"\";\r\n            await this.router.navigate(['atpar']);\r\n            this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu))\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"GetMenuList\");\r\n            console.log('getGroupMenuList failed :' + ex.toString());\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    private async BindDropDown() {\r\n\r\n        try {\r\n            this.systemData = JSON.parse(sessionStorage.getItem(\"lstSystemIDs\"));\r\n            this.dropdownData.push({ label: \"Select System ID\", value: \"Select System ID\" })\r\n            if (this.systemData != null) {\r\n                if (this.systemData.length > 1) {\r\n                    for (var i = 0; i < this.systemData.length; i++) {\r\n                        this.dropdownData.push({\r\n                            label: this.systemData[i].SYSTEM_NAME + \" (\" + this.systemData[i].SYSTEM_ID + \")\", value: this.systemData[i].SYSTEM_ID\r\n                        })\r\n                        this.trSystemId = true;\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    this.hdnSystemId = this.systemData[0].SYSTEM_ID;\r\n                    this.trSystemId = false;\r\n                }\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"BindDropDown\");\r\n            console.log('BindDropDown failed :' + ex.toString());\r\n        }\r\n    }\r\n\r\n    private async CheckSystemID(pSystemID: string) {\r\n\r\n        try {\r\n            this.atweb = await this.GetSystemIds(pSystemID)\r\n            this.systemData = this.atweb.DataList,\r\n                this.statusCode = this.atweb.StatusCode;\r\n\r\n            if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                var strFilter: string = \"\";\r\n                strFilter = pSystemID;\r\n                if (this.systemData != null) {\r\n                    if (this.systemData.length > 0) {\r\n                        this.systemRowData = this.systemData.filter(x => x.SYSTEM_ID.toUpperCase() == strFilter);\r\n                    }\r\n                }\r\n                if (this.systemRowData != null) {\r\n                    this.statusType = StatusType.Success;\r\n                }\r\n                else {\r\n                    this.statusType = StatusType.Warn;\r\n                }\r\n            }\r\n            else {\r\n                this.statusType = this.atweb.StatType;\r\n            }\r\n\r\n            switch (this.statusType) {\r\n                case StatusType.Success:\r\n                    this.hdnSystemId = this.strSystemId;\r\n                    this._deviceTokenEntry[TokenEntry_Enum.SystemId] = this.strSystemId;\r\n                    this.trSystemId = false;\r\n                    break;\r\n                case StatusType.Error:\r\n                    this.statusMessage = this.atweb.StatusMessage;\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: this.statusMessage });\r\n                    this.hdnSystemId = \"\";\r\n                    this.trSystemId = false;\r\n                    break;\r\n                case StatusType.Warn:\r\n                    this.statusMessage = this.atweb.StatusMessage;\r\n                    if (this.statusCode == AtparStatusCodes.E_NORECORDFOUND) {\r\n                        this.statusMessage = \"Not a valid system id.\";\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                        return;\r\n                    }\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                    this.hdnSystemId = \"\";\r\n                    this.trSystemId = false;\r\n                    break;\r\n                case StatusType.Custom:\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'custom', summary: AtParConstants.GrowlTitle_Info, detail: this.statusMessage });\r\n                    break;\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"CheckSystemID\");\r\n            console.log('CheckSystemID failed :' + ex.toString());\r\n        }\r\n\r\n    }\r\n\r\n    async onChange(event) {\r\n\r\n        try {\r\n            this._deviceTokenEntry[TokenEntry_Enum.SystemId] = this.selectedDB;\r\n            localStorage.setItem(\"DeviceTokenEntry\", JSON.stringify(this._deviceTokenEntry));\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"onChange\");\r\n            console.log('onChange failed :' + ex.toString());\r\n        }\r\n\r\n    }\r\n\r\n    clientErrorMsg(ex, funName) {\r\n        this.msgs = [];\r\n        this.atParConstant.catchClientError(this.msgs, this.spinnerService, ex.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    async SSOLogin(_strSSOUser: string, _IsSSOEnabled: boolean) {\r\n\r\n        try {\r\n            await this.loginService.IsValidUser(_strSSOUser)\r\n                .then((res: Response) => {\r\n                    let data: AtParWebApiResponse<any> = res.json();\r\n                    if (data.StatusCode == AtparStatusCodes.ATPAR_OK) {\r\n                        this.msgs = [];\r\n                        this.msgs.push({\r\n                            severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Not a Valid User\"\r\n                        });\r\n                        return;\r\n                    }\r\n                    if (data.DataVariable == true) {\r\n                        this._deviceTokenEntry[TokenEntry_Enum.UserID] = _strSSOUser;\r\n                        this._deviceTokenEntry[TokenEntry_Enum.DeviceID] = this.deviceID;\r\n                        this._deviceTokenEntry[TokenEntry_Enum.DateTime] = this.dateTime;;\r\n                        this._deviceTokenEntry[TokenEntry_Enum.ClientType] = ClientType.WEB.toString();\r\n\r\n                    }\r\n                    if (typeof this.hdnSystemId.trim() != 'undefined' && this.hdnSystemId) {\r\n                        this._deviceTokenEntry[TokenEntry_Enum.SystemId] = this.hdnSystemId;\r\n                    }\r\n                    localStorage.setItem(\"DeviceTokenEntry\", JSON.stringify(this._deviceTokenEntry));\r\n\r\n\r\n                    this.loginService.GetAccessToken(_strSSOUser, '', ClientType.WEB,\r\n                        this.dateTime, this.deviceID, '',\r\n                        this.pSSOByPass)\r\n                        .subscribe((response: Response) => {\r\n                            let data = response.json();\r\n                            this.accessTokenXML = data.DataVariable,\r\n                                this.statusCode = data.StatusCode;\r\n                            this.statusType = data.StatType;\r\n                            this.statusMessage = data.StatusMessage;\r\n\r\n                            switch (this.statusType) {\r\n                                case StatusType.Success:\r\n                                    this.GetMenuList();\r\n                                    break;\r\n                                case StatusType.Error:\r\n                                    this.setDeviceTokenSession();\r\n                                    this.spinnerService.stop();\r\n                                    this.msgs = [];\r\n                                    this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: this.statusMessage });\r\n                                    break;\r\n                                case StatusType.Warn:\r\n                                    this.spinnerService.stop();\r\n                                    if (this.statusCode == AtparStatusCodes.ATPAR_E_PASSWORDEXPIRED ||\r\n                                        this.statusCode == AtparStatusCodes.ATPAR_E_PASSWORDRESETREQ) {\r\n\r\n                                        let navigationExtras: NavigationExtras = {\r\n                                            queryParams: { 'userId': this.userId }\r\n                                        };\r\n                                        this.router.navigate(['atpar/changepassword'], navigationExtras);\r\n                                    }\r\n                                    else {\r\n                                        this.setDeviceTokenSession();\r\n                                        this.msgs = [];\r\n                                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                                        var txtvalue = <HTMLInputElement>document.getElementById(\"txtUserID\");\r\n                                        var txtpsw = <HTMLInputElement>document.getElementById(\"txtPassword\");\r\n                                        txtpsw.value = null;\r\n                                        txtvalue.focus();\r\n\r\n                                    }\r\n                                    break;\r\n                                case StatusType.Custom:\r\n                                    this.setDeviceTokenSession();\r\n                                    this.spinnerService.stop();\r\n                                    this.msgs = [];\r\n                                    this.msgs.push({ severity: 'custom', summary: AtParConstants.GrowlTitle_Info, detail: this.statusMessage });\r\n                                    break;\r\n                                default:\r\n                                    this.setDeviceTokenSession();\r\n                                    this.spinnerService.stop();\r\n                                    this.msgs = [];\r\n                                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Info, detail: \"Login Failed\" });\r\n                                    break;\r\n\r\n                            }\r\n                        });\r\n                });\r\n\r\n            return await AtparStatusCodes.ATPAR_OK;\r\n\r\n        }\r\n\r\n        catch (ex) {\r\n            return await AtparStatusCodes.E_SERVERERROR;\r\n        }\r\n\r\n    }\r\n\r\n    OnDestroy() {\r\n\r\n        this.model = null;\r\n        this.visibleUserID = null;\r\n        this.activeLblUserID = null;\r\n        this.activeLblPassword = null;\r\n        this.visiblePassword = null;\r\n        this.menus = null;\r\n        this.lstMenus = null;\r\n        this.userId = null;\r\n        this.password = null;\r\n        this.deviceID = null;\r\n        this.systemID = null;\r\n        this.pSSOByPass = null;\r\n        this.dateTime = null;\r\n        this.accessToken = null;\r\n        this.accessTokenXML = null;\r\n        this.systemData = null;\r\n        this.errorCode = null;\r\n        this.systemRowData = null;\r\n        this.strServer = null;\r\n        this.strDatabase = null;\r\n        this.strUserID = null;\r\n        this.strPassword = null;\r\n        this.trSystemId = null;\r\n        this.statusCode = -1;\r\n        this.isSSOEnabled = null;\r\n        this.isValidUser = null;\r\n        this.strSSOVariable = null;\r\n        this.strSSOCookie = null;\r\n        this.strSSOLogout = null;\r\n        this.strSystemId = null;\r\n        this.hdnSystemId = null;\r\n        this.strSSOUser = null;\r\n        this.gStrSSOUser = null;\r\n        this.ipAddress = null;\r\n        this.passHash = null;\r\n        this.decryptpassword = null;\r\n        this.roleIds = null;\r\n        this.atweb = null;\r\n        this.userToken = null;\r\n        this.selectedDB = null;\r\n        this.statusMessage = null;\r\n        this.statusType = null;\r\n        this.msgs = null;\r\n        this.spinnerService.stop();\r\n        this.spinnerService = null;\r\n        this._dbConnectionString = null;\r\n        this.dropdownData = null;\r\n        this._deviceTokenEntry = null;\r\n        this.lstApps = null;\r\n        this.lstAppGroups = null;\r\n        this.myForm = null;\r\n        this.ipData = null;\r\n    }\r\n\r\n\r\n    \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Login/login.component.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './index';\r\n\r\nexport const routes: Routes = [\r\n    { path: '', component: LoginComponent, data: {title:'Login'} },\r\n    { path: '/:psystemid', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class LoginRoutingModule {\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Login/login.routes.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Menus } from '../Menus/routepath';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpService } from '../../Shared/HttpService';\r\n//import { RoutersData } from '../Entities/RouterPath';\r\n\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class MenuServices {\r\n    constructor(private httpservice: HttpService) { }\r\n\r\n\r\n    getGroupMenuList(\r\n        profileID: string,\r\n        userID: string\r\n    ) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/User/GetGroupMenusList\",\r\n            params: {\r\n                \"ProfileID\": profileID,\r\n                \"UserID\": userID\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public handleError(error: Response) {\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/AtPar/Menus/MenusService.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './login.component';\nexport * from './login.routes';\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Login/index.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport * as Rx from 'rxjs/Rx'\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { MT_ATPAR_USER_PROFILE_APP_ACL_ORG } from '../Entities/MT_ATPAR_USER_PROFILE_APP_ACL_ORG';\r\nimport { MT_ATPAR_USER_PROFILE_APP_ACL } from '../Entities/MT_ATPAR_USER_PROFILE_APP_ACL';\r\nimport { MT_ATPAR_USER_ORG_GROUPS } from '../Entities/MT_ATPAR_USER_ORG_GROUPS';\r\nimport { MT_ATPAR_SYSTEM_DB } from '../Entities/MT_ATPAR_SYSTEM_DB';\r\nimport { VM_MT_ATPAR_USER_PROFILE } from '../Entities/VM_MT_ATPAR_USER_PROFILE';\r\n\r\n@Injectable()\r\nexport class loginService {\r\n\r\n    constructor(private httpservice: HttpService) { }\r\n    private headers = new Headers({ 'Content-Type': 'application/json' });\r\n\r\n    public GetAccessToken(userID, passHash, loginType,\r\n        dateTime, deviceID, accessToken,\r\n        SSOByPass) {\r\n\r\n        return this.httpservice.get({\r\n            \"apiMethod\": \"/api/Login/GetAccessToken\",\r\n            params: {\r\n                \"userID\": userID,\r\n                \"pPassword\": passHash,\r\n                \"loginType\": loginType,\r\n                \"dateTime\": dateTime,\r\n                \"deviceID\": deviceID,\r\n                \"accessToken\": accessToken,\r\n                \"SSOByPass\": SSOByPass\r\n            }\r\n        });\r\n    }\r\n\r\n    GetSystemIDs(data: string) {\r\n        if (navigator.onLine) {\r\n            return this.httpservice.getSync({\r\n                \"apiMethod\": \"/api/Common/GetSystemIDS\",\r\n                params: {\r\n                    \"systemID\": data\r\n                }\r\n            });\r\n        }\r\n            \r\n\r\n    }\r\n    GetAppRoleIDs(userID) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/User/GetAppRoleIDs\",\r\n            params: {\r\n                \"UserId\": userID\r\n            }\r\n        });\r\n    }\r\n\r\n    GetUserOrgGrpID(userID) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Common/GetUserOrgGrpID\",\r\n            params: {\r\n                \"userID\": userID\r\n            }\r\n        });\r\n\r\n    }\r\n    GetRecordsPerPage(userID) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/User/GetUser\",\r\n            params: {\r\n                \"userId\": userID\r\n            }\r\n        });\r\n\r\n    }\r\n    IsValidUser(userID) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Login/IsValidUser\",\r\n            params: {\r\n                \"userId\": userID\r\n            }\r\n        });\r\n\r\n    }\r\n    GetIpAddress() {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Login/GetIpAddress\",\r\n        });\r\n\r\n    }\r\n    IsSSOEnabled() {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Login/IsSSOEnabled\",\r\n        });\r\n\r\n    }\r\n    ValidateSamlResponse(SSOUserIDVariable) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Login/ValidateSamlResponse\",\r\n            params: {\r\n                \"SSOUserIDVariable\": SSOUserIDVariable\r\n            }\r\n        });\r\n\r\n    }\r\n    GetSAMLResponse(SSOVariable) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Login/GetSAMLResponse\",\r\n            params: {\r\n                \"SSOVariable\": SSOVariable\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    async UpdateIzendaHosting(hostName) {\r\n        return this.httpservice.update({\r\n            \"apiMethod\": \"/api/Login/UpdateHosting\",\r\n            params: {\r\n                \"HostName\": hostName\r\n            }\r\n        }).toPromise();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Login/login.service.ts","module.exports = \"<form class=\\\"form-horizontal login-form m-t-20\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" name=\\\"form\\\" (ngSubmit)=\\\"onSubmit(model.userID,model.password)\\\" #f=\\\"ngForm\\\" novalidate (keypress)=\\\"formKeyPressEvent($event)\\\">\\r\\n    <div class=\\\"accountbg\\\"></div>\\r\\n    <div class=\\\"wrapper-page\\\" id=\\\"divlogin\\\">\\r\\n        <div class=\\\"panel panel-color panel-primary panel-pages\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"\\\">\\r\\n                    \\r\\n                    <div class=\\\"col-xs-12\\\">\\r\\n                        <img [src]=\\\"mhsicon\\\" alt=\\\"\\\" class=\\\"img-responsive\\\" style=\\\"width:65%;margin:inherit;\\\">\\r\\n                        <h3 class=\\\"\\\">Sign In</h3>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"input-wrap\\\">\\r\\n                                    <label id=\\\"lblUserID\\\" for=\\\"userID\\\" *ngIf=\\\"f.submitted && userID.invalid && (model.userID=='' || model.userID==null || model.userID==undefined)\\\" class=\\\"input-disturbed\\\" [ngClass]=\\\"activeLblUserID\\\">User Name</label>\\r\\n                                    <label id=\\\"lblUserID\\\" for=\\\"userID\\\" *ngIf=\\\"!userID.invalid && (userID.dirty || userID.touched)\\\" class=\\\"input-disturbed\\\"  [ngClass]=\\\"activeLblUserID\\\">User Name</label>\\r\\n                                    <label id=\\\"lblUserID\\\" for=\\\"userID\\\" *ngIf=\\\"(!f.submitted || model.userID ) && userID.invalid\\\" [ngClass]=\\\"activeLblUserID\\\">User Name</label> \\r\\n                                    <input id=\\\"txtUserID\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userID\\\" (focus)=\\\"onFocusUserName()\\\" (click)=\\\"onFocusUserName()\\\" [(ngModel)]=\\\"model.userID\\\" #userID=\\\"ngModel\\\" required autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"input-wrap\\\">\\r\\n                                    <label id=\\\"lblPassword\\\" for=\\\"password\\\" *ngIf=\\\"f.submitted && password.invalid && (model.password=='' || model.password==null || model.password==undefined)\\\" class=\\\"input-disturbed\\\" [ngClass]=\\\"activeLblPassword\\\">Password</label>\\r\\n                                    <label id=\\\"lblPassword\\\" for=\\\"password\\\" *ngIf=\\\"!password.invalid && (password.dirty || password.touched)\\\" class=\\\"input-disturbed\\\"  [ngClass]=\\\"activeLblPassword\\\">Password</label>\\r\\n                                    <label id=\\\"lblPassword\\\" for=\\\"password\\\" *ngIf=\\\"(!f.submitted || model.password)&& password.invalid\\\" [ngClass]=\\\"activeLblPassword\\\">Password</label>\\r\\n                                    <input id=\\\"txtPassword\\\" (click)=\\\"onFocusPassword()\\\" (focus)=\\\"onFocusPassword()\\\" type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" required />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"input-wrap\\\">\\r\\n                                    <div *ngIf=\\\"trSystemId\\\">\\r\\n                                        <atpar-select [options]=\\\"dropdownData\\\" [(ngModel)]=\\\"selectedDB\\\" [id]=\\\"'ddlOrgGroup'\\\" [required]=\\\"true\\\" [ngModelOptions]=\\\"{standalone:true}\\\" (onChange)=\\\"onChange($event)\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      \\r\\n                        <div class=\\\"form-group text-center\\\">\\r\\n                            <div class=\\\"hidden-xs col-sm-8 col-md-8\\\">\\r\\n                                <a [routerLink]=\\\"['/forgot-password']\\\" class=\\\"text-muted\\\"><h5><i class=\\\"fa fa-lock\\\"></i> Forgot your password ?</h5></a>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12 col-sm-4 col-md-4\\\">\\r\\n                                <button id=\\\"btnLogin\\\" class=\\\"btn btn-primary btn-lg waves-effect waves-light\\\" [disabled]=\\\"loading\\\">Login &nbsp;<i class=\\\"fa fa-sign-in\\\"></i></button>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12 hidden-sm hidden-md hidden-lg\\\">\\r\\n                                <a [routerLink]=\\\"['/forgot-password']\\\" class=\\\"text-muted\\\"><h5><i class=\\\"fa fa-lock\\\"></i> Forgot your password ?</h5></a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                     \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <atpar-growl [value]=\\\"msgs\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n    </div>\\r\\n</form>\\r\\n<style>\\r\\n    .waves-effect {\\r\\n        z-index: 0 !important;\\r\\n    }\\r\\n\\r\\n    .waves-light {\\r\\n        z-index: 0 !important;\\r\\n    }\\r\\n</style>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Login/login.component.html\n// module id = 2025\n// module chunks = 0","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { LoginComponent } from './login.component';\r\nimport { LoginRoutingModule } from './login.routes';\r\nimport { SharedModule} from '../Shared/shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        LoginRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        SharedModule\r\n    ],\r\n\r\n    declarations: [\r\n        LoginComponent,\r\n    ],\r\n\r\n})\r\n\r\nexport class LoginModule {\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Login/login.module.ts"],"sourceRoot":""}