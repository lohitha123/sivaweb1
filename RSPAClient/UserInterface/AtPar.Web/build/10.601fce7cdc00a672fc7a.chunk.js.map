{"version":3,"sources":["webpack:///./src/app/Entities/TKIT_REQUESTOR.ts?8bff*","webpack:///./src/app/Entities/VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS.ts","webpack:///./src/app/TrackIT/tkit-allocate-location-groups.component.ts","webpack:///./src/app/TrackIT/tkit-charge-report.component.ts","webpack:///./src/app/TrackIT/tkit-check-in_check-out-services.ts","webpack:///./src/app/TrackIT/tkit-check-in_check-out.component.ts","webpack:///./src/app/TrackIT/tkit-check-out.component.ts","webpack:///./src/app/TrackIT/tkit-daily-activity.component.ts","webpack:///./src/app/TrackIT/tkit-daily-user-activity.component.ts","webpack:///./src/app/TrackIT/tkit-delivery-report.component.ts","webpack:///./src/app/TrackIT/tkit-destruction-report.component.ts","webpack:///./src/app/TrackIT/tkit-equipment-tracking-report.component.ts","webpack:///./src/app/TrackIT/tkit-inactivate-items.component.ts","webpack:///./src/app/TrackIT/tkit-item-master-report.component.ts","webpack:///./src/app/TrackIT/tkit-manage-departments.component.ts","webpack:///./src/app/TrackIT/tkit-manage-equipment-items.component.ts","webpack:///./src/app/TrackIT/tkit-manage-equipment-type.component.ts","webpack:///./src/app/TrackIT/tkit-manage-requestor-home.component.ts","webpack:///./src/app/TrackIT/tkit-manage-requestor-modify.component.ts","webpack:///./src/app/TrackIT/tkit-manage-requestor.component.ts","webpack:///./src/app/TrackIT/tkit-manage-requestor.services.ts","webpack:///./src/app/TrackIT/tkit-newitem-audit-report.component.ts","webpack:///./src/app/TrackIT/tkit-setup-reason-codes.component.ts","webpack:///./src/app/TrackIT/tkit-transaction-report.component.ts","webpack:///./src/app/TrackIT/trackit.component.ts","webpack:///./src/app/Entities/TKIT_DEPT.ts","webpack:///./src/app/Entities/TKIT_ITEM_INVENTORY.ts","webpack:///./src/app/Entities/TKIT_ITEM_MASTER.ts","webpack:///./src/app/Entities/TKIT_ITEM_TYPE.ts","webpack:///./src/app/Entities/TKIT_REASON_CODES.ts","webpack:///./src/app/Entities/VM_TKIT_ITEM_DETAILS.ts","webpack:///./src/app/TrackIT/tkit-delivery-report.service.ts","webpack:///./src/app/TrackIT/tkit-inactivate-items.service.ts","webpack:///./src/app/TrackIT/tkit-manage-departments.service.ts","webpack:///./src/app/TrackIT/tkit-manage-equipment-items.service.ts","webpack:///./src/app/TrackIT/tkit-manage-equipment-type.service.ts","webpack:///./src/app/TrackIT/tkit-setup-reason-codes.service.ts","webpack:///./src/app/TrackIT/trackit-routing.module.ts","webpack:///./src/app/TrackIT/trackit.module.ts","webpack:///./src/app/TrackIT/tkit-allocate-location-groups.component.html","webpack:///./src/app/TrackIT/tkit-charge-report.component.html","webpack:///./src/app/TrackIT/tkit-check-in_check-out.component.html","webpack:///./src/app/TrackIT/tkit-check-out.component.html","webpack:///./src/app/TrackIT/tkit-daily-activity.component.html","webpack:///./src/app/TrackIT/tkit-daily-user-activity.component.html","webpack:///./src/app/TrackIT/tkit-delivery-report.component.html","webpack:///./src/app/TrackIT/tkit-destruction-report.component.html","webpack:///./src/app/TrackIT/tkit-equipment-tracking-report.component.html","webpack:///./src/app/TrackIT/tkit-inactivate-items.component.html","webpack:///./src/app/TrackIT/tkit-item-master-report.component.html","webpack:///./src/app/TrackIT/tkit-manage-departments.component.html","webpack:///./src/app/TrackIT/tkit-manage-equipment-items.component.html","webpack:///./src/app/TrackIT/tkit-manage-equipment-type.component.html","webpack:///./src/app/TrackIT/tkit-manage-requestor-modify.component.html","webpack:///./src/app/TrackIT/tkit-manage-requestor.component.html","webpack:///./src/app/TrackIT/tkit-newitem-audit-report.component.html","webpack:///./src/app/TrackIT/tkit-setup-reason-codes.component.html","webpack:///./src/app/TrackIT/tkit-transaction-report.component.html","webpack:///./src/app/TrackIT/trackit.component.html"],"names":[],"mappings":"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","file":"10.601fce7cdc00a672fc7a.chunk.js","sourcesContent":["export class TKIT_REQUESTOR {\r\n    public ORG_GROUP_ID: string;\r\n    public REQUESTOR_ID: string;\r\n    public PASSWORD: string;\r\n    public NEWPASSWORD: string;\r\n    public CNFRMPASSWORD: string;\r\n    public FIRST_NAME: string;\r\n    public MIDDLE_INIT: string;\r\n    public LAST_NAME: string;\r\n    public PHONE: string;\r\n    public EMAIL: string;\r\n    public FAX: string;\r\n    public PAGER: string;\r\n    public LOCATION_ID: string;\r\n    public STATUS: string;\r\n    public checkStatus : boolean;\r\n    public RECORDS_PER_PAGE?: number;\r\n    public DEFAULT_REPORT_DURATION?: number;\r\n    public NO_OF_REQUESTS_FOR_SAME_EQ_ITM?: number;\r\n    public USERNAME: string;\r\n    public IMAGE_PATH: string;\r\n    public IMAGE: number[];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/TKIT_REQUESTOR.ts","export class VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS {\r\n    public ITEM_ID: string;\r\n    public SERIAL_NO: string;\r\n    public ITEM_DESCR: string;\r\n    public ITEM_QTY: number;\r\n    public VENDOR: string;\r\n    public EQP_INDICATOR: string;\r\n    public DELIVER_LOCATION: string;\r\n    public PROCEDURE_CODE: string;\r\n    public PATIENT_ID: string;\r\n    public PATIENT_LNAME: string;\r\n    public MANUFACTURER: string;\r\n    public ASSET_ID: string;\r\n    public color: string;\r\n    public checkinQty: number;\r\n    public itemQty: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS.ts","import { Component } from '@angular/core';\r\nimport { EnumApps } from '../Shared/AtParEnums';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./tkit-allocate-location-groups.component.html')\r\n})\r\n\r\nexport class AllocateLocationGroupsComponent {\r\n    trackITAppId: number = EnumApps.TrackIT;\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-allocate-location-groups.component.ts","import { Component } from '@angular/core';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./tkit-charge-report.component.html')\r\n})\r\n\r\nexport class ChargeReportComponent {\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-charge-report.component.ts","\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { TKIT_REQUESTOR } from '../../app/Entities/TKIT_REQUESTOR';\r\nimport { VM_TKIT_ITEM_DETAILS } from '../../app/Entities/VM_TKIT_ITEM_DETAILS';\r\nimport { RM_SHIP_TO_LOCACTION } from '../../app/Entities/RM_SHIP_TO_LOCACTION';\r\nimport { MT_ATPAR_PATIENT_CACHE } from '../../app/Entities/MT_ATPAR_PATIENT_CACHE';\r\nimport { TKIT_REQUESTOR_DEPT } from '../../app/Entities/TKIT_REQUESTOR_DEPT';\r\nimport { TKIT_DEPT } from '../../app/Entities/TKIT_DEPT';\r\n\r\n\r\n@Injectable()\r\nexport class CheckInCheckOutItemsServices {\r\n    public headers: Headers;\r\n    constructor(private httpservice: HttpService) {\r\n\r\n    }\r\n\r\n    getTypeIndicator(itemId) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CheckInCheckOutItems/GetTypeIndicator\",\r\n            params: {\r\n                \"itemId\": itemId\r\n\r\n            }\r\n        }).map(res => res.json()).catch(this.handleError);\r\n    }\r\n\r\n    checkEqItemAvailability(itemId, requestor) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CheckInCheckOutItems/CheckEqItemAvailability\",\r\n            params: {\r\n                \"itemId\": itemId,\r\n                \"requestor\": requestor\r\n\r\n            }\r\n        }).map(res => res.json()).catch(this.handleError);\r\n    }\r\n\r\n    checkItemAvailability(itemId, requestor, itemTypeIndicator) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CheckInCheckOutItems/CheckItemAvailability\",\r\n            params: {\r\n                \"itemId\": itemId,\r\n                \"requestor\": requestor,\r\n                \"itemTypeIndicator\": itemTypeIndicator\r\n\r\n            }\r\n        }).map(res => res.json()).catch(this.handleError);\r\n    }\r\n\r\n    checkSerialId(itemId, serialId) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CheckInCheckOutItems/CheckSerialId\",\r\n            params: {\r\n                \"itemId\": itemId,\r\n                \"serialId\": serialId\r\n\r\n            }\r\n        }).map(res => res.json()).catch(this.handleError);\r\n    }\r\n\r\n    getItemDetails(itemId, requestor, itemTypeIndicator, serialId) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CheckInCheckOutItems/GetItemDetails\",\r\n            params: {\r\n                \"itemId\": itemId,\r\n                \"requestor\": requestor,\r\n                \"itemTypeIndicator\": itemTypeIndicator,\r\n                \"serialId\": serialId\r\n\r\n            }\r\n        }).map(res => <VM_TKIT_ITEM_DETAILS>res.json()).catch(this.handleError);\r\n    }\r\n\r\n\r\n    getRequestors(inActiveCheck, deviceTokenEntry) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CheckInCheckOutItems/GetRequestors\",\r\n            params: {\r\n                \"inActiveCheck\": inActiveCheck,\r\n\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n\r\n            }\r\n        }).map(res => <TKIT_REQUESTOR[]>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    checkOutItems(lstCheckInOutItemDetails, requestedUserId, checkInOutMode, deviceTokenEntry) {\r\n      \r\n        return this.httpservice.update({\r\n            apiMethod: '/api/CheckInCheckOutItems/UpdateRequestorDetails',\r\n            formData: lstCheckInOutItemDetails,\r\n            params: {\r\n                \"requestedUserId\": requestedUserId, \r\n                \"checkInOutMode\": checkInOutMode,\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        }).map(res => res.json()).catch(this.handleError);\r\n\r\n    }\r\n\r\n    async  getOrgGroupParamValue(orgGpId, appId, fieldName) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/Common/GetOrgGroupParamValue\",\r\n            params: {\r\n                \"orgGroupID\": orgGpId,\r\n                \"appID\": appId,\r\n                \"orgParamName\": fieldName\r\n            }\r\n        });\r\n    }\r\n\r\n    getLocations(orgGrpId) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CheckInCheckOutItems/GetLocations\",\r\n            params: {\r\n                \"orgGrpId\": orgGrpId\r\n\r\n            }\r\n        }).map(res => <RM_SHIP_TO_LOCACTION[]>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    checkInOutItems(lstCheckInOutItemDetails, requestedUserId, checkInOutMode) {\r\n        return this.httpservice.update({\r\n            apiMethod: \"/api/CheckInCheckOutItems/CheckInOutItems\",\r\n            formData: lstCheckInOutItemDetails,\r\n            params: {\r\n                \"requestedUserId\": requestedUserId,\r\n                \"checkInOutMode\": checkInOutMode\r\n            }\r\n        });\r\n    }\r\n\r\n    getTKITDepts(deptID, status) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CheckInCheckOutItems/GetTKITDepts\",\r\n            params: {\r\n                \"deptID\": deptID,\r\n                \"status\": status\r\n            }\r\n        }).map(res => <TKIT_DEPT[]>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    getPatientList(deptID, status) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CreateRequest/GetPatientList\",\r\n        }).map(res => <MT_ATPAR_PATIENT_CACHE[]>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    getUserDepts() {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CheckInCheckOutItems/GetUserDepts\",\r\n        }).map(res => <TKIT_REQUESTOR_DEPT[]>res.json()).catch(this.handleError);\r\n    }\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-check-in_check-out-services.ts","import {\r\n    NgModule, OnInit, Component, ElementRef, AfterViewInit, AfterViewChecked, OnDestroy,\r\n    Input, Output, EventEmitter, Renderer, ContentChild, ViewChild, trigger, state, style,\r\n    transition, animate\r\n} from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators, FormsModule } from '@angular/forms';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { CheckInCheckOutItemsServices } from \"../../app/TrackIT/tkit-check-in_check-out-services\";\r\nimport { AtParConstants } from \"../Shared/AtParConstants\";\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { TokenEntry_Enum, ClientType, ModeEnum, StatusType, enum_TKIT_EQP_TYPE, enum_CHECKINOUT } from '../Shared/AtParEnums';\r\nimport { SelectItem, Message } from './../components/common/api';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { SpinnerSentEvent } from '../components/spinner/spinner.sent.event';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\r\nimport { AtParSharedDataService } from \"../Shared/AtParSharedDataService\";\r\nimport { AtParKeyValuePair } from '../../app/Entities/atparkeyvaluepair';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\nimport { TKIT_REQUESTOR } from \"../../app/Entities/TKIT_REQUESTOR\";\r\nimport { VM_TKIT_ITEM_DETAILS } from \"../../app/Entities/VM_TKIT_ITEM_DETAILS\";\r\nimport { VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS } from \"../../app/Entities/VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS\";\r\nimport { Employee } from '../components/datatable/employee';\r\nimport { PAR_MNGT_VENDOR } from \"../../app/Entities/PAR_MNGT_VENDOR\";\r\nimport { Response } from \"@angular/http\";\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n\r\n    template: require('./tkit-check-in_check-out.component.html'),\r\n    providers: [CheckInCheckOutItemsServices, AtParConstants, datatableservice],\r\n})\r\n\r\nexport class CheckIn_CheckOutComponent {\r\n    pop: boolean = false;\r\n    table: boolean = false;\r\n    page: boolean = true;\r\n    form: boolean = false;\r\n    editform: boolean = false;\r\n    sales: Employee[];\r\n    ven: any;\r\n    loading: boolean = true;\r\n    deviceIDStatus: number;\r\n    descStatus: number;\r\n    macAddressStatus: number;\r\n    date1: Date;\r\n    date2: Date;\r\n    minDateValue1: Date = new Date();\r\n    minDateValue2: Date;\r\n    public newItem = new PAR_MNGT_VENDOR();\r\n\r\n    checkOutItemsList: VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS[] = [];\r\n    public itemDetails: VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS;\r\n    breadCrumbMenu: Menus;\r\n    statusMesssage: string = \"\";\r\n    msgs: Message[] = [];\r\n    deviceTokenEntry: string[] = [];\r\n    requestorData: SelectItem[] = [];\r\n    requestorDataList: TKIT_REQUESTOR[] = [];\r\n    itemQuantity: number = 0;\r\n    itemIdSearch: string = \"\";\r\n    hasSerialId: boolean = false;\r\n    serialIdSearch: string = \"\";\r\n    itemTypeIndicator: string = \"\";\r\n    selectedRequestor: string = \"\";\r\n    checkoutMode: string = enum_CHECKINOUT[enum_CHECKINOUT.CIN].toString();\r\n    mode: any;\r\n    item: any;\r\n    isADD: boolean;\r\n    checkinQty: string;\r\n    isSerial: boolean = false;\r\n    isData: boolean = true;\r\n    isGo: boolean = true;\r\n    itemSearchID: string;\r\n    isDisabled: boolean = false;\r\n    cursor: string;\r\n    constructor(private checkInCheckOutItemsServices: CheckInCheckOutItemsServices,\r\n        private router: Router,\r\n        private spinnerService: SpinnerService,\r\n        private route: ActivatedRoute,\r\n        private atParConstant: AtParConstants,\r\n        private atParSharedDataService: AtParSharedDataService) {\r\n        this.breadCrumbMenu = new Menus();\r\n    }\r\n\r\n    async go() {\r\n        try {\r\n            this.pop = false;\r\n            await this.getTypeIndicator();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"go\");\r\n        }\r\n    }\r\n\r\n    async ngOnInit() {\r\n\r\n        try {\r\n            this.spinnerService.start();\r\n            this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n            this.msgs = [];\r\n            this.mode = enum_CHECKINOUT[enum_CHECKINOUT.COUT];\r\n            this.getRequestors();\r\n            this.spinnerService.stop();\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n\r\n    increaseQuantity() {\r\n        try {\r\n            if (this.itemDetails.checkinQty != 0 && this.itemDetails.checkinQty != null && this.itemDetails.checkinQty != undefined) {\r\n                this.itemDetails.checkinQty++;\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"increaseQuantity\");\r\n        }\r\n    }\r\n\r\n    decreaseQuantity() {\r\n        try {\r\n            if (this.itemDetails.checkinQty != 0 && this.itemDetails.checkinQty != null && this.itemDetails.checkinQty != undefined)\r\n                this.itemDetails.checkinQty--;\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"decreaseQuantity\");\r\n        }\r\n    }\r\n\r\n    async getTypeIndicator() {\r\n        let msg;\r\n        this.spinnerService.start();\r\n        try {\r\n\r\n\r\n            await this.checkInCheckOutItemsServices.getTypeIndicator(this.itemIdSearch)\r\n                .forEach(resp => {\r\n                    this.itemSearchID = this.itemIdSearch;\r\n                    if (resp.StatusCode == AtparStatusCodes.TKIT_E_SERIALINACTIVATED) {\r\n                        msg = \"item \" + this.itemIdSearch + \" is inactivated\";\r\n                        this.hasSerialId = false;\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: msg });\r\n                        this.itemIdSearch = '';\r\n                        this.spinnerService.stop();\r\n                        return;\r\n                    }\r\n                    else if (resp.StatusCode == AtparStatusCodes.E_NORECORDFOUND) {\r\n                        msg = \"item \" + this.itemIdSearch + \" does not exist\";\r\n                        this.hasSerialId = false;\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: msg });\r\n                        this.itemIdSearch = '';\r\n                        this.spinnerService.stop();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        switch (resp.StatType) {\r\n                            case StatusType.Success:\r\n                                this.msgs = [];\r\n                                this.itemTypeIndicator = resp.DataVariable;\r\n                                this.itemIdSearch = resp.Data;\r\n                                if (this.itemTypeIndicator != undefined && this.itemTypeIndicator != null && this.itemTypeIndicator != \"\") {\r\n                                    if (this.itemTypeIndicator == enum_TKIT_EQP_TYPE[enum_TKIT_EQP_TYPE.E].toString()) {\r\n                                        this.checkEqItemAvailability();\r\n                                    } else {\r\n                                        this.hasSerialId = false;\r\n                                        this.checkItemAvailability();\r\n                                    }\r\n                                }\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            case StatusType.Error:\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            case StatusType.Warn:\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getTypeIndicator\");\r\n        }\r\n    }\r\n\r\n    getRequestors() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.checkInCheckOutItemsServices.getRequestors(false, this.deviceTokenEntry)\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            this.requestorDataList = resp.DataList;\r\n                            this.requestorData = [];\r\n                            this.requestorData.push({ label: \"Select Requestor\", value: \"Select Requestor\" });\r\n                            for (var i = 0; i < this.requestorDataList.length; i++) {\r\n                                this.requestorData.push({ label: this.requestorDataList[i].FIRST_NAME + \" \" + this.requestorDataList[i].LAST_NAME + \" (\" + this.requestorDataList[i].REQUESTOR_ID + \")\", value: this.requestorDataList[i].REQUESTOR_ID });\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getTypeIndicator\");\r\n        }\r\n    }\r\n\r\n    async checkSerialId() {\r\n        try {\r\n            this.spinnerService.start();\r\n            let msg;\r\n            await this.checkInCheckOutItemsServices.checkSerialId(this.itemIdSearch, this.serialIdSearch)\r\n                .forEach(resp => {\r\n                    if (resp.StatusCode == AtparStatusCodes.TKIT_E_SERIALINACTIVATED) {\r\n                        msg = \"Serial# \" + this.serialIdSearch + \" is inactivated\";\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: msg });\r\n                        this.itemIdSearch = '';\r\n                        this.serialIdSearch = '';\r\n                        this.hasSerialId = false;\r\n                        return;\r\n                    }\r\n                    else if (resp.StatusCode == AtparStatusCodes.TKIT_E_SERIALNOTEXISTS) {\r\n                        msg = \"Serial# \" + this.serialIdSearch + \" does not exist\";\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: msg });\r\n                        this.itemIdSearch = '';\r\n                        this.serialIdSearch = '';\r\n                        this.hasSerialId = false;\r\n                        return;\r\n                    }\r\n                    else {\r\n                        switch (resp.StatType) {\r\n                            case StatusType.Success:\r\n                                this.msgs = [];\r\n                                var itemAvailability = resp.DataVariable;\r\n                                if (itemAvailability > 0) {\r\n                                    msg = \"Serial# \" + this.serialIdSearch + \" has already been checked in\";\r\n                                    this.msgs = [];\r\n                                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: msg });\r\n                                    this.itemIdSearch = '';\r\n                                    this.hasSerialId = false;\r\n                                }\r\n                                else {\r\n                                    this.getItemDetails();\r\n                                }\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            case StatusType.Error:\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            case StatusType.Warn:\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkSerialId\");\r\n        }\r\n    }\r\n\r\n    async serialIdCheck() {\r\n        try {\r\n            await this.checkSerialId();\r\n            await this.getItemDetails();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"serialIdCheck\");\r\n        }\r\n    }\r\n\r\n    async checkEqItemAvailability() {\r\n        try {\r\n            this.spinnerService.start();\r\n            let msg;\r\n            if (this.hasSerialId == true && this.itemIdSearch == this.itemSearchID) {\r\n                await this.checkSerialId();\r\n                return;\r\n            }\r\n            else {\r\n                await this.checkInCheckOutItemsServices.checkEqItemAvailability(this.itemIdSearch, this.selectedRequestor)\r\n                    .forEach(resp => {\r\n                        if (resp.StatusCode == AtparStatusCodes.TKIT_E_ITEMNOTALLOWED) {\r\n                            msg = \"Item \" + this.itemIdSearch + \" is not allowed for the selected user\";\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: msg });\r\n                            this.itemIdSearch = '';\r\n                            this.hasSerialId = false;\r\n                            return;\r\n                        }\r\n                        else if (resp.StatusCode == AtparStatusCodes.TKIT_E_ITEMNOTAVAILABLE) {\r\n                            msg = \"Item \" + this.itemIdSearch + + \" does not exist\";\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: msg });\r\n                            this.itemIdSearch = '';\r\n                            this.hasSerialId = false;\r\n                            return;\r\n                        }\r\n                        switch (resp.StatType) {\r\n                            case StatusType.Success:\r\n                                this.msgs = [];\r\n                                var itemAvailability = resp.DataVariable;\r\n                                if (itemAvailability > 0) {\r\n                                    this.pop = false;\r\n                                    msg = \"Item \" + this.itemIdSearch + \" has already been checked in\";\r\n                                    this.msgs = [];\r\n                                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: msg });\r\n                                    this.itemIdSearch = '';\r\n                                    this.serialIdSearch = '';\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    this.hasSerialId = true;\r\n                                }\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            case StatusType.Error:\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            case StatusType.Warn:\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkEqItemAvailability\");\r\n        }\r\n    }\r\n\r\n    async checkItemAvailability() {\r\n        let msg;\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.checkInCheckOutItemsServices.checkItemAvailability(this.itemIdSearch, this.selectedRequestor, this.itemTypeIndicator)\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            var itemAvailability = resp.DataVariable;\r\n                            if (itemAvailability > 0 && this.itemTypeIndicator == enum_TKIT_EQP_TYPE[enum_TKIT_EQP_TYPE.B].toString()) {\r\n                                this.hasSerialId = false;\r\n                                this.pop = false;\r\n                                msg = \"Item \" + this.itemIdSearch + \" has already been checked in\";\r\n                                this.msgs = [];\r\n                                this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: msg });\r\n                                this.itemIdSearch = '';\r\n                                this.serialIdSearch = '';\r\n\r\n                                return;\r\n                            }\r\n                            else {\r\n\r\n                                this.getItemDetails();\r\n                            }\r\n\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkItemAvailability\");\r\n        }\r\n    }\r\n\r\n    async getItemDetails() {\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.checkInCheckOutItemsServices.getItemDetails(this.itemIdSearch, this.selectedRequestor, this.itemTypeIndicator, this.serialIdSearch)\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.pop = true;\r\n                            this.msgs = [];\r\n                            this.item = resp.DataVariable;\r\n                            this.itemDetails = new VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS();\r\n                            this.itemDetails.ITEM_ID = this.item[0].ITEM_ID;\r\n                            console.log(\"itemid : \" + this.item[0].ITEM_ID);\r\n                            this.itemDetails.SERIAL_NO = this.item[0].SERIAL_NO;\r\n                            this.itemDetails.ITEM_DESCR = this.item[0].ITEM_DESCR;\r\n                            this.itemDetails.VENDOR = this.item[0].VENDOR;\r\n                            this.itemDetails.MANUFACTURER = this.item[0].MANUFACTURER;\r\n                            this.itemDetails.EQP_INDICATOR = this.itemTypeIndicator;\r\n                            if (this.itemTypeIndicator == enum_TKIT_EQP_TYPE[enum_TKIT_EQP_TYPE.E].toString()) {\r\n                                if (this.item[0].ITEM_QTY == 0) {\r\n                                    this.itemDetails.itemQty = \"Unavailable\";\r\n                                    this.itemDetails.checkinQty = 1;\r\n                                }\r\n                                this.isSerial = true;\r\n                                this.isDisabled = true;\r\n                                this.cursor = 'none';\r\n                                this.itemDetails.color = \"panel panel-blue no-shadow bdr-1\";\r\n                            }\r\n                            else if (this.itemTypeIndicator == enum_TKIT_EQP_TYPE[enum_TKIT_EQP_TYPE.B].toString()) {\r\n                                if (this.item[0].ITEM_QTY == 0) {\r\n                                    this.itemDetails.itemQty = \"Unavailable\";\r\n                                    this.itemDetails.checkinQty = 1;\r\n                                }\r\n                                this.itemDetails.color = \"panel panel-green no-shadow bdr-1\";\r\n                                this.isSerial = false;\r\n                                this.isDisabled = true;\r\n                                this.cursor = 'none';\r\n                            }\r\n                            else if (this.itemTypeIndicator == enum_TKIT_EQP_TYPE[enum_TKIT_EQP_TYPE.F].toString()) {\r\n                                this.itemDetails.itemQty = this.item[0].ITEM_QTY;\r\n                                this.itemDetails.color = \"panel panel-pink no-shadow bdr-1\";\r\n                                this.isSerial = false;\r\n                                this.isDisabled = false;\r\n                                this.cursor = 'pointer';\r\n                            }\r\n                            this.itemDetails.DELIVER_LOCATION = this.item[0].STORAGE_LOCATION;\r\n                            this.itemDetails.PROCEDURE_CODE = \"\";\r\n                            this.itemDetails.PATIENT_ID = \"\";\r\n                            this.itemDetails.PATIENT_LNAME = \"\";\r\n                            this.itemDetails.ASSET_ID = this.item[0].ASSET_ID;\r\n                            this.itemSearchID = '';\r\n                            this.serialIdSearch = '';\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getItemDetails\");\r\n        }\r\n    }\r\n\r\n    Add() {\r\n        try {\r\n            let filterItem = this.checkOutItemsList.filter(item => item.ITEM_ID == this.itemDetails.ITEM_ID);\r\n            if (filterItem.length == 0) {\r\n                this.itemDetails.ITEM_QTY = this.itemDetails.checkinQty;\r\n                this.checkOutItemsList.push(this.itemDetails);\r\n            }\r\n\r\n            this.isADD = true;\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"Add\");\r\n        }\r\n\r\n    }\r\n\r\n    async checkInOutItems() {\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.checkInCheckOutItemsServices.checkInOutItems(this.checkOutItemsList, this.selectedRequestor, this.checkoutMode)\r\n                .subscribe((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<number>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: \"Items checked in successfully.\" });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"CheckIn failed\" });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkInOutItems\");\r\n        }\r\n\r\n    }\r\n    async checkOutItems() {\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.checkInCheckOutItemsServices.checkOutItems(this.checkOutItemsList, this.selectedRequestor, this.checkoutMode, this.deviceTokenEntry)\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            console.log(JSON.stringify(resp));\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkOutItems\");\r\n        }\r\n    }\r\n\r\n    async  getItem() {\r\n        try {\r\n            if (this.mode = enum_CHECKINOUT[enum_CHECKINOUT.COUT]) {\r\n                if (this.itemIdSearch == undefined ||\r\n                    this.itemIdSearch == null ||\r\n                    this.itemIdSearch == \"\") {\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please enter itemId.\" });\r\n                    return;\r\n                }\r\n\r\n                if (this.selectedRequestor == undefined ||\r\n                    this.selectedRequestor == null ||\r\n                    this.selectedRequestor == \"\" ||\r\n                    this.selectedRequestor == \"Select Requestor\") {\r\n\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid Requestor.\" });\r\n                    return;\r\n                }\r\n            }\r\n            await this.getTypeIndicator();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getItem\");\r\n        }\r\n    }\r\n\r\n    async onCloseItemClick(item, event) {\r\n        try {\r\n            this.checkOutItemsList = this.checkOutItemsList.filter(fItem => fItem.ITEM_ID != item.ITEM_ID);\r\n            if (this.checkOutItemsList.length == 0) {\r\n                this.isADD = false;\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"onCloseItemClick\");\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.msgs = [];\r\n        this.atParConstant.catchClientError(this.msgs, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-check-in_check-out.component.ts","import {\r\n    NgModule, OnInit, Component, ElementRef, AfterViewInit, AfterViewChecked, OnDestroy,\r\n    Input, Output, EventEmitter, Renderer, ContentChild, ViewChild, trigger, state, style,\r\n    transition, animate\r\n} from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\n\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators, FormsModule } from '@angular/forms';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { CheckInCheckOutItemsServices } from \"../../app/TrackIT/tkit-check-in_check-out-services\";\r\nimport { ConfirmationService } from '../components/common/api';\r\nimport { AtParConstants } from \"../Shared/AtParConstants\";\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { TokenEntry_Enum, ClientType, ModeEnum, EnumApps, StatusType, enum_TKIT_EQP_TYPE, enum_CHECKINOUT } from '../Shared/AtParEnums';\r\nimport { SelectItem, Message } from './../components/common/api';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { SpinnerSentEvent } from '../components/spinner/spinner.sent.event';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\r\nimport { AtParSharedDataService } from \"../Shared/AtParSharedDataService\";\r\nimport { AtParKeyValuePair } from '../../app/Entities/atparkeyvaluepair';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\nimport { TKIT_REQUESTOR } from \"../../app/Entities/TKIT_REQUESTOR\";\r\nimport { VM_TKIT_ITEM_DETAILS } from '../../app/Entities/VM_TKIT_ITEM_DETAILS';\r\nimport { VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS } from '../../app/Entities/VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS';\r\nimport { RM_SHIP_TO_LOCACTION } from '../../app/Entities/RM_SHIP_TO_LOCACTION';\r\nimport { MT_ATPAR_ORG_GROUP_PARAMETERS } from '../../app/Entities/mt_atpar_org_group_parameters';\r\n\r\n\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n\r\n@Component({\r\n    template: require('./tkit-check-out.component.html'),\r\n    providers: [CheckInCheckOutItemsServices, AtParConstants, ConfirmationService],\r\n})\r\n\r\nexport class CheckOutComponent {\r\n\r\n    checkOutItemsList: VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS[] = [];\r\n    public itemDetails: VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS;\r\n    breadCrumbMenu: Menus;\r\n    \r\n    msgs: Message[] = [];\r\n    deviceTokenEntry: string[] = [];\r\n    requestorData: SelectItem[] = [];\r\n    requestorDataList: TKIT_REQUESTOR[] = [];\r\n    lstOrgParms: MT_ATPAR_ORG_GROUP_PARAMETERS[];\r\n   \r\n    itemQuantity: number = 0;\r\n\r\n    itemIdSearch: string = \"\";\r\n    hasSerialId: boolean = false;\r\n    pop: boolean = false;\r\n    isAdd: boolean = false;\r\n\r\n    statusMesssage: string = \"\";\r\n    serialIdSearch: string = \"\";\r\n    itemTypeIndicator: string = \"\";\r\n    selectedRequestor: string = \"\";\r\n    checkoutMode: string = \"\";\r\n    selectedDeliveryLoc: string = \"\";\r\n    strPatientCharge: string = \"\";\r\n\r\n    ddlDeliveryLoc: any;\r\n    mode: any;\r\n\r\n    \r\n\r\n    constructor(private checkInCheckOutItemsServices: CheckInCheckOutItemsServices,\r\n        private router: Router,\r\n        private httpService: HttpService,\r\n        private spinnerService: SpinnerService,\r\n        private route: ActivatedRoute,\r\n        private atParConstant: AtParConstants,\r\n        private atParSharedDataService: AtParSharedDataService,\r\n        private confirmationService: ConfirmationService) {\r\n        this.breadCrumbMenu = new Menus();\r\n    }\r\n\r\n    async ngOnInit() {\r\n\r\n        try {\r\n            this.spinnerService.start();\r\n            this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n            this.msgs = [];\r\n            this.mode = enum_CHECKINOUT[enum_CHECKINOUT.COUT];\r\n            await this.loadOrgGroupParams();\r\n            this.getRequestors();\r\n            this.spinnerService.stop();\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n\r\n    increaseQuantity() {\r\n        this.itemQuantity += 1;\r\n\r\n    }\r\n\r\n    decreaseQuantity() {\r\n        if (this.itemQuantity != 0)\r\n            this.itemQuantity += 1;\r\n\r\n    }\r\n\r\n    async getTypeIndicator() {\r\n        try {\r\n            this.msgs = [];\r\n            this.spinnerService.start();\r\n            await this.checkInCheckOutItemsServices.getTypeIndicator(this.itemIdSearch)\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            this.itemTypeIndicator = resp.DataVariable;\r\n                            this.itemIdSearch = resp.Data;\r\n                            this.spinnerService.stop();\r\n                            if (this.itemTypeIndicator != undefined && this.itemTypeIndicator != null && this.itemTypeIndicator != \"\") {\r\n                                if (this.itemTypeIndicator == enum_TKIT_EQP_TYPE[enum_TKIT_EQP_TYPE.E].toString()) {\r\n                                    this.checkEqItemAvailability();\r\n                                } else {\r\n                                    this.checkItemAvailability();\r\n                                }\r\n                            }\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"getTypeIndicator\");\r\n        }\r\n    }\r\n\r\n    getRequestors() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.checkInCheckOutItemsServices.getRequestors(false, this.deviceTokenEntry)\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            this.requestorDataList = resp.DataList;\r\n                            this.requestorData = [];\r\n                            this.requestorData.push({ label: \"Select Requestor\", value: \"Select Requestor\" });\r\n                            for (var i = 0; i < this.requestorDataList.length; i++) {\r\n                                this.requestorData.push({ label: this.requestorDataList[i].FIRST_NAME + \" \" + this.requestorDataList[i].LAST_NAME + \" (\" + this.requestorDataList[i].REQUESTOR_ID + \")\", value: this.requestorDataList[i].REQUESTOR_ID });\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"getRequestors\");\r\n        }\r\n    }\r\n\r\n    getLocations() {\r\n        try {\r\n            this.spinnerService.start();\r\n\r\n            this.checkInCheckOutItemsServices.getLocations(this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID].toString())\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            if (resp.DataList != null && resp.DataList.length > 0) {\r\n                                this.ddlDeliveryLoc = [];\r\n                               // this.ddlDeliveryLoc.push({ label: \"Select DeliveryLoc\", value: \"Select DeliveryLoc\" });\r\n                                for (var i = 0; i < this.requestorDataList.length; i++) {\r\n                                    this.ddlDeliveryLoc.push({ label: resp.DataList[i].LOCATION_ID, value: resp.DataList[i].LOCATION_ID });\r\n                                }\r\n                            }                           \r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"getRequestors\");\r\n        }\r\n    }\r\n\r\n    checkSerialId() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.checkInCheckOutItemsServices.checkSerialId(this.itemIdSearch, this.itemIdSearch)\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            this.hasSerialId = true;\r\n                            this.getTypeIndicator();\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkSerialId\");\r\n        }\r\n    }\r\n\r\n    serialIdCheck() {\r\n        this.checkSerialId();\r\n        this.getItemDetails();\r\n    }\r\n\r\n    checkEqItemAvailability() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.checkInCheckOutItemsServices.checkEqItemAvailability(this.itemIdSearch, this.selectedRequestor)\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            var itemAvailability = resp.DataVariable;\r\n                            if (itemAvailability > 0) {\r\n                                this.hasSerialId = true;\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkEqItemAvailability\");\r\n        }\r\n    }\r\n\r\n    checkItemAvailability() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.checkInCheckOutItemsServices.checkItemAvailability(this.itemIdSearch, this.selectedRequestor, this.itemTypeIndicator)\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            var itemAvailability = resp.DataVariable;\r\n                            if (itemAvailability > 0) {\r\n                                this.hasSerialId = false;\r\n                                this.serialIdSearch = \"\";\r\n                                this.getItemDetails();\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkItemAvailability\");\r\n        }\r\n    }\r\n\r\n    async getItemDetails() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.checkInCheckOutItemsServices.getItemDetails(this.itemIdSearch, this.selectedRequestor, this.itemTypeIndicator, this.serialIdSearch)\r\n                .forEach(async resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            let item = resp.DataVariable;\r\n                            if (item != null && item.length > 0) {\r\n                               await this.getLocations();\r\n                                this.itemDetails = new VM_TKIT_CHECK_IN_OUT_ITEM_DETAILS();\r\n                                this.itemDetails.ITEM_ID = item[0].ITEM_ID;\r\n                                this.itemDetails.SERIAL_NO = item[0].SERIAL_NO;\r\n                                this.itemDetails.ITEM_DESCR = item[0].ITEM_DESCR;\r\n                                this.itemDetails.ITEM_QTY = item[0].ITEM_QTY;\r\n                                this.itemDetails.VENDOR = item[0].VENDOR;\r\n                                this.itemDetails.MANUFACTURER = item[0].MANUFACTURER;\r\n                                this.itemDetails.EQP_INDICATOR = this.itemTypeIndicator;\r\n                                this.itemDetails.DELIVER_LOCATION = item[0].STORAGE_LOCATION;\r\n                                this.itemDetails.PROCEDURE_CODE = \"\";\r\n                                this.itemDetails.PATIENT_ID = \"\";\r\n                                this.itemDetails.PATIENT_LNAME = \"\";\r\n                                this.pop = true;\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"getItemDetails\");\r\n        }\r\n    }\r\n\r\n    Add() {\r\n        try {\r\n            let filterItem = this.checkOutItemsList.filter(item => item.ITEM_ID == this.itemDetails.ITEM_ID);\r\n            if (filterItem.length == 0) {\r\n                this.checkOutItemsList.push(this.itemDetails);\r\n            }\r\n            this.isAdd = true;\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"Add\");\r\n        }\r\n\r\n    }\r\n\r\n    checkOutItems() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.checkInCheckOutItemsServices.checkOutItems(this.checkOutItemsList, this.selectedRequestor, this.checkoutMode, this.deviceTokenEntry)\r\n                .forEach(resp => {\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            console.log(JSON.stringify(resp));\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkOutItems\");\r\n        }\r\n    }\r\n\r\n    async getItem() {\r\n        try {\r\n            this.msgs = [];\r\n            if (this.mode = enum_CHECKINOUT[enum_CHECKINOUT.COUT]) {\r\n                if (this.itemIdSearch == undefined ||\r\n                    this.itemIdSearch == null ||\r\n                    this.itemIdSearch == \"\") {\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please enter itemId.\" });\r\n                    return;\r\n                }\r\n\r\n                if (this.selectedRequestor == undefined ||\r\n                    this.selectedRequestor == null ||\r\n                    this.selectedRequestor == \"\" ||\r\n                    this.selectedRequestor == \"Select Requestor\") {\r\n\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid Requestor.\" });\r\n                    return;\r\n                }\r\n            }\r\n            await this.getTypeIndicator();\r\n            this.getItemDetails();\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"getItem\");\r\n        }\r\n    }\r\n\r\n    onClickPatient() {\r\n\r\n    }\r\n\r\n   async loadOrgGroupParams() {\r\n        try {\r\n            this.lstOrgParms = [];\r\n            this.spinnerService.start();\r\n            this.checkInCheckOutItemsServices.getOrgGroupParamValue(this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID].toString(), EnumApps.TrackIT.toString(), \"PATIENT_CHARGE\")\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<string>;\r\n                  \r\n                    switch (data.StatType) {\r\n                        case StatusType.Success:\r\n                            this.msgs = [];\r\n                            this.strPatientCharge = (data.DataVariable != null) ? data.DataVariable.toString() : \"\";                                                    \r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                    }\r\n                });\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"getRequestors\");\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.msgs = [];\r\n        this.atParConstant.catchClientError(this.msgs, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-check-out.component.ts","\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { StatusType, TokenEntry_Enum, EnumApps, MailPriority } from '../Shared/AtParEnums';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { Message } from '../components/common/api';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { SSL_CONFIG_DETAILS } from '../Entities/SSL_CONFIG_DETAILS';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\nimport { MT_TKIT_DAILYACTIVITY_DETAILS } from '../../app/Entities/MT_TKIT_DAILYACTIVITY_DETAILS';\r\nimport { saveAs } from 'file-saver';\r\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\r\nimport { LeftBarAnimationService } from '../Home/leftbar-animation.service';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n  \r\n    template: require('./tkit-daily-activity.component.html'),\r\n    providers: [AtParCommonService, AtParConstants]\r\n})\r\n\r\nexport class DailyActivityComponent implements OnInit {\r\n    /*Varaible Declaration*/\r\n    breadCrumbMenu: Menus;\r\n    SelectedDate: string;\r\n    lstDailyActivityDetails: MT_TKIT_DAILYACTIVITY_DETAILS[] = [];\r\n    lstFilterData: MT_TKIT_DAILYACTIVITY_DETAILS[] = [];\r\n    rowsPerPage: string = \"\";\r\n    ipAddress: string = \"\";\r\n    gstrProtocal: string = \"\";\r\n    gstrPortNo: string = \"\";\r\n    gstrServerName; string = \"\";\r\n    deviceTokenEntry: string[] = [];\r\n    isVisible: boolean = false;\r\n    isMailDialog: boolean = false;\r\n    tdExports: boolean = false;\r\n    growlMessage: Message[] = [];\r\n    toMailAddr: string = \"\";\r\n    statusCode: number = -1;\r\n\r\n    /**\r\n    * Constructor    \r\n    * @param AtParCommonService\r\n    * @param httpService\r\n    * @param spinnerService\r\n    * @param AtParConstants\r\n    */\r\n    constructor(\r\n        private leftBarAnimateService: LeftBarAnimationService,\r\n        private httpService: HttpService,\r\n        private commonService: AtParCommonService,\r\n        private spinnerService: SpinnerService,\r\n        private router: Router,\r\n        private atParConstant: AtParConstants,\r\n        private route: ActivatedRoute\r\n       \r\n    ) {\r\n\r\n        try {\r\n            this.spinnerService.start();\r\n            this.breadCrumbMenu = new Menus();\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'constructor');\r\n        }\r\n        this.spinnerService.stop();\r\n    }\r\n\r\n    /**\r\n    * This finction is for  bind data to the datatable when page loading\r\n    */\r\n    async  ngOnInit() {\r\n        this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n        this.rowsPerPage = this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n\r\n        try {\r\n            this.spinnerService.start();\r\n            var date = new Date;            \r\n            this.SelectedDate = this.convertDateFormate(date);\r\n            await this.btnGo_Click();\r\n           \r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, 'OnInit');\r\n        }\r\n        \r\n    }\r\n       \r\n    /**\r\n    * This method is calling when click on Go button    \r\n    */\r\n    async  btnGo_Click() {\r\n      \r\n            this.growlMessage = [];\r\n            let lstData: MT_TKIT_DAILYACTIVITY_DETAILS[] = []      \r\n            this.growlMessage = [];\r\n            this.spinnerService.start();  \r\n                 \r\n          try\r\n            {    \r\n            await this.httpService.getSync({\r\n                        apiMethod: \"/api/DailyActivityReport/GetTKITDailyUserActivityRep\",\r\n                        params: {\r\n                            \"pToDate\": this.convertDateFormate(this.SelectedDate)\r\n                        }\r\n                }).catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                  let res2=  res.json() as AtParWebApiResponse<MT_TKIT_DAILYACTIVITY_DETAILS>;                                                                                                           \r\n                    this.spinnerService.stop();\r\n                    this.statusCode = res2.StatusCode;\r\n                if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                    this.isVisible = true;\r\n                    this.tdExports = true;\r\n                    lstData = res2.DataDictionary[\"pDsDailyActRep\"][\"Table1\"];                    \r\n                    if (lstData.length > 0) {\r\n                        this.lstDailyActivityDetails = lstData;\r\n                    }\r\n\r\n                }\r\n\r\n                else if (this.statusCode == AtparStatusCodes.E_NORECORDFOUND) {\r\n                    this.tdExports = false;\r\n                    this.isVisible = false;\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res2.StatusMessage });\r\n                    return;\r\n                }\r\n                else {\r\n                    this.tdExports = false;\r\n                    this.isVisible = false;\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res2.StatusMessage });\r\n                    return;\r\n                }\r\n\r\n            });           \r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"btnGo_Click\");\r\n\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n\r\n    }\r\n    \r\n    /**\r\n    * This method is calling when user click on Details link in the datatable and after clicking navigating to pointOfuse Daily User Activity Report screen\r\n    */\r\n    async onDetailsClick(item: MT_TKIT_DAILYACTIVITY_DETAILS) {               \r\n\r\n        try {\r\n            let appId: number = 0;            \r\n            appId = EnumApps.TrackIT;\r\n            let lastName: string = \"\";\r\n            let userArray: any[] = [];\r\n            userArray = item.USERNAME.split(\" \", 3);\r\n            lastName= userArray[2].trim().split(\"(\", 1);\r\n            let navigationExtras: NavigationExtras = {\r\n                queryParams: {\r\n                    \"p1value\": appId,\r\n                    \"p2value\": item.UID,\r\n                    \"p4value\": this.convertDateFormate(this.SelectedDate),\r\n                    \"p5value\": userArray[0],\r\n                    \"p6value\": lastName,\r\n                    \"p7value\": userArray[1],\r\n                    \"p3value\": this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID]                         \r\n                }\r\n            };\r\n\r\n            this.breadCrumbMenu.MENU_NAME = \"Daily Activity\";\r\n            this.breadCrumbMenu.ROUTE = 'trackit/dailyactivity';\r\n            this.breadCrumbMenu.SUB_MENU_NAME = '';\r\n            this.breadCrumbMenu.GROUP_NAME = 'Reports & Dashboards';\r\n            this.breadCrumbMenu.APP_NAME = 'TrackIT';\r\n            this.breadCrumbMenu.IS_DIV = false;\r\n            localStorage.setItem('localBreadCrumb', JSON.stringify(this.breadCrumbMenu));\r\n\r\n            var menuItems = JSON.parse(localStorage.getItem('MenuList'));\r\n            for (var i = 0; i < menuItems.length; i++) {\r\n                if ((menuItems[i] as Menus).ROUTE == 'trackit/dailyactivity') {\r\n                    await this.leftBarAnimateService.emitChangeReportaActiveMenu((menuItems[i] as Menus).MENU_NAME.trim());\r\n                    break;\r\n                }\r\n            }\r\n              await this.router.navigate(['atpar/reports/customreport/166499B2-65E6-436E-A497-313C56731F71'], navigationExtras);           \r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex,\"onDetailsClick\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is used for change date format to mm/dd/yyyy\r\n    */\r\n    convertDateFormate(strDate) {\r\n        var date = new Date(strDate),\r\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n            day = (\"0\" + date.getDate()).slice(-2);\r\n        return [mnth, day , date.getFullYear()].join(\"/\");\r\n    }    \r\n\r\n    async onChargesFilterData(data) {\r\n        try {\r\n            this.lstFilterData = data;\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex,\"onChargesFilterData\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is calling when user click on Mail Icon \r\n     * @param event\r\n     */\r\n    async onSendMailIconClick(event) {\r\n        try {\r\n            this.growlMessage = [];\r\n            this.isMailDialog = true;\r\n            this.toMailAddr = \"\";\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'onSendMailIconClick');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is calling when user userclick on submit button after enter mailid\r\n     * @param event\r\n     */\r\n    async onSendMailClick(event) {\r\n        try {\r\n            this.growlMessage = [];\r\n            if (this.toMailAddr == \"\" || this.toMailAddr == undefined) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Enter Email Address to Send' });\r\n                return;\r\n            }\r\n            var val = this.validateEmail(this.toMailAddr);\r\n            if (!val) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Enter Valid Email Address to Send' });\r\n                return;\r\n            }\r\n            this.spinnerService.start();\r\n            this.isMailDialog = false;\r\n            let html: string = await this.ExportReportDetails('Mail');\r\n            let toAddr: string = \"\";\r\n\r\n            if (html != \"\" && html != null) {\r\n                await this.commonService.sendEmail(this.deviceTokenEntry[TokenEntry_Enum.SystemId], 'TrackIT Daily Activity Report', JSON.stringify(html), this.toMailAddr, MailPriority.Normal.toString(), \"\")\r\n                    .then((res: Response) => {\r\n                        let data = res.json() as AtParWebApiResponse<number>;\r\n                        this.statusCode = data.StatusCode;\r\n                    });\r\n\r\n                if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                    this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Mail has been sent' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_FROM_ADDRESS) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'From Address is Missing! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_TO_ADDRESS) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Please Enter valid Email Address to Send' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_SUBJECT) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Subject is Missing! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_BODY) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Body is Missing! Please contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_SMTP_SERVER_MISSING) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Email Server not configured! Please contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_SEND_FAILED) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Mail Not Sent. Please Try Again' });\r\n                }\r\n                else {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Error while sending mail' });\r\n                }\r\n            }\r\n\r\n            this.toMailAddr = \"\";\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'onSendMailClick');\r\n        }\r\n        finally {\r\n\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is used for validating Email\r\n    * @param event\r\n    */\r\n    validateEmail(email) {\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    /**\r\n     * This method is calling when user click on print Icon\r\n     * @param event\r\n     */\r\n    async onPrintClick(event) {\r\n        try {\r\n            this.growlMessage = [];\r\n            event.stopImmediatePropagation();\r\n            this.spinnerService.start();\r\n            var html = await this.ExportReportDetails('Print');\r\n            if (html != \"\" && html != null) {\r\n\r\n                var mywindow = window.open(\"\", 'PRINT', 'height=600,width=600');\r\n                if (mywindow != null && mywindow != undefined) {\r\n                    mywindow.document.write('<html><head><title>' + 'TracIT - Daily Activity Report' + '</title>');\r\n                    mywindow.document.write('</head><body >');\r\n                    mywindow.document.write(html);\r\n                    mywindow.document.write('</body></html>');\r\n\r\n                    mywindow.document.close(); // necessary for IE >= 10\r\n                    mywindow.focus(); // necessary for IE >= 10*/\r\n\r\n                    mywindow.print();\r\n                    mywindow.close();\r\n                    return true;\r\n                } else {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please set allow pop-ups for this site in your browser' });\r\n                }\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'onPrintClick');\r\n            return false;\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is calling when user click on Excel Icon\r\n     * @param event\r\n     */\r\n    async onExportToExcelClick(event) {\r\n        try {\r\n            event.stopImmediatePropagation();\r\n            this.growlMessage = [];\r\n            this.spinnerService.start();\r\n            let html: string = await this.ExportReportDetails('Excel');\r\n            if (html != \"\" && html != null) {\r\n                let blob = new Blob([html], {\r\n                    type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\r\n                });\r\n                saveAs(blob, \"mt_tkit_daily_activity_rep\");\r\n            }\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'onExportToExcelClick');\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is for export  datatable data in different formats\r\n     * @param event\r\n     */\r\n    async ExportReportDetails(reqType: string) {\r\n        let htmlBuilder: string = \"\";\r\n        try {\r\n\r\n            this.statusCode = -1;\r\n            this.growlMessage = [];\r\n            let sbMailText: string;\r\n            let _strFrmDt: string;\r\n            let _strToDt: string;\r\n            let imgserverPath: string = \"\";\r\n            await this.commonService.getServerIP()\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    var data = res.json() as AtParWebApiResponse<string>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.ipAddress = data.DataVariable.toString();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (data.StatType != StatusType.Success) {\r\n                        htmlBuilder = \"\";\r\n                        return htmlBuilder;\r\n                    }\r\n                });\r\n\r\n            await this.commonService.getSSLConfigDetails()\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    this.growlMessage = [];\r\n                    var data = res.json() as AtParWebApiResponse<SSL_CONFIG_DETAILS>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.gstrProtocal = data.Data.PROTOCOL.toString();\r\n                            this.gstrServerName = data.Data.SERVER_NAME.toString();\r\n                            this.gstrPortNo = data.Data.PORT_NO.toString();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (data.StatType != StatusType.Success) {\r\n                        htmlBuilder = \"\";\r\n                        return htmlBuilder;\r\n                    }\r\n\r\n                });\r\n\r\n            imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/atpar/web/images/';\r\n\r\n            let title: string = '\"\"' + \"AtparVersion 2.8\" + '\"\"';\r\n\r\n            htmlBuilder += \"<Table align=left width=90% cellpadding=0 cellspacing = 0 vAlign=top>\";\r\n\r\n\r\n            if (reqType == 'Print') {\r\n                htmlBuilder += \"<tr width='100%'><td colspan=2 bgcolor='#fe9836' align=left  width='100%' height='80px' nowrap><img height='63px' src=\" + imgserverPath + \"logo.jpg></td></tr>\"\r\n                htmlBuilder += \"<tr><TD height=27  vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" + \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE: 8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></font></td>\"\r\n                htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                htmlBuilder += \"<tr><td colspan=5 align=left><span class=c2>TrackIT Daily Activity Report for the date :<b>\" + this.convertDateFormate(this.SelectedDate) + \"</b></span></td><td align=right valign=top>&nbsp<tr><td></td></tr>\";\r\n                htmlBuilder += \"<A  href=\" + \"\" + \"javascript:printWindow()\" + \"\" + \"><img src=\" + imgserverPath + \"print.jpg></A>\"\r\n            }\r\n\r\n            else if (reqType == 'Excel') {\r\n                htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg title=\" + title + \"><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                htmlBuilder += \"<TR><TD height=27  vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" + \"\" + \"COLOR: #8b4513;FONT-FAMILY: verdana;FONT-SIZE: 8pt\" + \"\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=100% border=0><tr><td></td></tr>\"\r\n                htmlBuilder += \"<tr><td colspan=5 align=left><span class=c2>TrackIT Daily Activity Report for the date : <b>\" + this.convertDateFormate(this.SelectedDate) + \"</b></span></td><td align=right valign=top>&nbsp<tr><td></td></tr>\";\r\n                htmlBuilder += \"<tr><td colspan=12 align= left><span class=c2></span > </td><td align=right valign=top>&nbsp;\"\r\n\r\n            }\r\n\r\n            else {\r\n                htmlBuilder += \"<tr width='100%' ><td colspan=2 bgcolor='#fe9836' align=left  width='100%' height='80px' nowrap><img height='63px' src=\" + imgserverPath + \"logo.jpg></td></tr>\"\r\n                htmlBuilder += \"<tr><TD height=27  vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" + \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE: 8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></font></td>\"\r\n                htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=100% border=0><tr><td></td></tr>\"\r\n                htmlBuilder += \"<tr><td colspan=5 align=left><span class=c2>TrackIT Daily Activity Report for the date :<b>\" + this.convertDateFormate(this.SelectedDate) + \"</b></span></td><td align=right valign=top>&nbsp<tr><td></td></tr>\";\r\n                htmlBuilder += \"<tr><td colspan=12 align= left><span class=c2></span > </td><td align=right valign=top>&nbsp;\"\r\n            }\r\n\r\n            htmlBuilder += \"</td></tr><tr height=20></tr></table></td></tr><tr><td colspan=2> \"\r\n                + \"<table align=center width=100% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1>\"\r\n                + \"<tr bgcolor=#d3d3d3>\"\r\n                + \"<td align=center  nowrap><span class=c3><b>User</b></span></td>\"\r\n                + \"<td align=center  nowrap><span class=c3><b>No of Locations Delivered To</b></span></td>\"\r\n                + \"<td align=center  nowrap><span class=c3><b>CompartmenNo of Items Deliveredt</b></span></td>\"\r\n                + \"<td align=center  nowrap><span class=c3><b>Avg. time taken for an item (Secs)</b></span></td>\"               \r\n                + \"</tr>\";\r\n\r\n            this.lstDailyActivityDetails.forEach(headers => {\r\n                htmlBuilder += \"<tr>\"\r\n                htmlBuilder += \"<td align=center nowrap><span class=c3>\" + headers.USERNAME + \"</span></td>\"\r\n                htmlBuilder += \"<td align=center nowrap><span class=c3>\" + headers.NO_LOCATIONS_DELIVERED + \"</span></td>\"\r\n                htmlBuilder += \"<td align=center nowrap><span class=c3>\" + headers.NO_ITEMS_DELIVERED + \"</span></td>\"\r\n                htmlBuilder += \"<td align=center nowrap><span class=c3>\" + headers.AVG_DELIVER_TIME + \"</span></td>\"             \r\n                htmlBuilder += \"</tr>\";\r\n            });\r\n                                          \r\n            htmlBuilder += \"</table></Table>\";\r\n            return htmlBuilder;\r\n        }\r\n        catch (ex) {;\r\n            this.clientErrorMsg(ex, 'ExportReportDetails');\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when user close mail dailogbox\r\n    * @param event\r\n    */\r\n    closeMailPopup() {\r\n        this.growlMessage = [];\r\n    }\r\n\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    /**\r\n     * This method is for clearing all the variables\r\n     * @param event\r\n     */\r\n    ngOnDestroy() {\r\n        this.deviceTokenEntry = null;\r\n        this.lstDailyActivityDetails = null;\r\n        this.lstFilterData = null;       \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-daily-activity.component.ts","import { Component } from '@angular/core';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./tkit-daily-user-activity.component.html')\r\n})\r\n\r\nexport class DailyUserActivityComponent {\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-daily-user-activity.component.ts","\r\nimport { Component } from '@angular/core';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { Employee } from '../components/datatable/employee';\r\nimport { PAR_MNGT_VENDOR } from \"../../app/Entities/PAR_MNGT_VENDOR\";\r\nimport { Http, Response, Jsonp, RequestOptions, Headers, } from '@angular/http';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { MT_ATPAR_ORG_GROUP_BUNITS } from '../../app/Entities/MT_ATPAR_ORG_GROUP_BUNITS';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { TokenEntry_Enum, ClientType, BusinessType } from '../Shared/AtParEnums';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { SelectItem, Message } from './../components/common/api';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\n\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\n\r\nimport { saveAs } from 'file-saver';\r\nimport { VM_TKIT_DEPT } from '../../app/Entities/VM_TKIT_DEPT';\r\nimport { SSL_CONFIG_DETAILS } from '../Entities/SSL_CONFIG_DETAILS';\r\n\r\nimport { DeliveryReportService } from './tkit-delivery-report.service';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { List, Enumerable } from 'linqts';\r\nimport { asEnumerable } from 'linq-es5';\r\nimport { StatusType, EnumApps, EventType, MailPriority } from '../Shared/AtParEnums';\r\n\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./tkit-delivery-report.component.html'),\r\n    providers: [HttpService, AtParCommonService, AtParConstants, DeliveryReportService, datatableservice]\r\n    \r\n})\r\n\r\nexport class DeliveryReportComponent {\r\n\r\n    deviceTokenEntry: string[] = [];\r\n    recordsPerPageSize: number;\r\n    growlMessage: Message[] = [];\r\n    order: string = \"\";\r\n \r\n   \r\n    showGrid: boolean = false;\r\n    showexport: boolean = false;\r\n\r\n   \r\n    lstStatus: SelectItem[] = [];\r\n    lstDeptDetails: SelectItem[];\r\n    tkitDeptDetails: VM_TKIT_DEPT[];\r\n    lstDeliverdBy: any[] = [];\r\n    lstRequestor: any[] = [];\r\n    deliverHeaders: any[] = [];\r\n    deliverDetails: any[] = [];\r\n    \r\n\r\n\r\n    lstUsers: any[] = [];\r\n    selectedUser: string = \"\";\r\n    selectedOrgGroupID: string = \"\"; \r\n    selectedStatus: string = \"\";\r\n    selectedRequestor: string = \"\";   \r\n\r\n    statusCode: number = -1;\r\n    noOfRecords: number = 0;\r\n    defDateRange: number = 0;\r\n    deliverDetailRows: number = 0;\r\n\r\n    fromDate: Date;\r\n    toDate: Date;\r\n    currentDate: Date;\r\n\r\n    tdExports: boolean = true;\r\n    plus: boolean = true;\r\n     pop: boolean = false;\r\n\r\n    gstrProtocal: string;\r\n    gstrServerName: string;\r\n    gstrPortNo: string;\r\n    ipAddress: string;\r\n    txtEventsMail: string;\r\n    isMailDialog: boolean = false;\r\n    toMailAddr: string = '';\r\n    \r\n\r\n  \r\n    request: string = \"\";\r\n    recipient: string = \"\";\r\n    userId: string = \"\";\r\n    selectedDeptID: string = \"\";\r\n    itemId: string = \"\";\r\n    vendorName: string = \"\";\r\n    descr: string = \"\";\r\n    location: string = \"\";\r\n    \r\n    \r\n    constructor(private httpService: HttpService, private _http: Http,\r\n        private spinnerService: SpinnerService,\r\n        private commonService: AtParCommonService,\r\n        private atParConstant: AtParConstants,\r\n        private deliveryReportService: DeliveryReportService,\r\n\r\n    ) {\r\n\r\n    }\r\n\r\n    async  ngOnInit() {\r\n\r\n        this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n        this.recordsPerPageSize = + this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n      \r\n\r\n        this.lstStatus.push({ label: \"Select One\", value: \"STATUS\" }, { label: \"ALL\", value: \"ALL\" }, { label: \"Open\", value: \"0\" }, { label: \"Cancelled\", value: \"13\" }, { label: \"PickUp\", value: \"20\" }, { label: \"Load\", value: \"30\" }, { label: \"UnLoad\", value: \"40\" }, { label: \"Deliver\", value: \"50\" }, { label: \"Take\", value: \"55\" }, { label: \"Return\", value: \"60\" });\r\n        this.selectedStatus = this.lstStatus[0].value;\r\n               \r\n        await this.getMyPreferences();\r\n        await this.getHeirarchyUsersList();\r\n        await this.PopulateDepartments();\r\n        await this.PopulateRequestors();\r\n\r\n        this.currentDate = new Date();\r\n        this.toDate = new Date();\r\n        this.fromDate = new Date();\r\n        if (this.defDateRange.toString() != '' && this.defDateRange != null) {\r\n            this.fromDate = await this.addDays(this.fromDate, -this.defDateRange);\r\n        }\r\n    }\r\n\r\n    async getMyPreferences() {\r\n\r\n        try {\r\n            await this.commonService.getMyPreferences('DEFAULT_REPORT_DURATION', this.deviceTokenEntry)\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<number>;\r\n                    this.statusCode = data.StatusCode;\r\n                    if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                        this.defDateRange = parseInt(data.DataVariable.toString());\r\n                    }\r\n                });\r\n            if (this.statusCode != AtparStatusCodes.ATPAR_OK) {\r\n                return AtparStatusCodes.E_SERVERERROR;\r\n            }\r\n\r\n        } catch (ex) {\r\n            return AtparStatusCodes.E_SERVERERROR;\r\n        }\r\n\r\n\r\n        return AtparStatusCodes.ATPAR_OK;\r\n    }\r\n\r\n    convertDateFormate(strDate) {\r\n        var date = new Date(strDate),\r\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n            day = (\"0\" + date.getDate()).slice(-2);\r\n        return [mnth, day , date.getFullYear()].join(\"/\");\r\n    }\r\n\r\n    confirm() {\r\n        try {\r\n            this.growlMessage = [];\r\n            // var rowData: any;\r\n            var compareDates = new Date(this.toDate);\r\n            var currentDate = new Date();\r\n            if (compareDates.getTime() > currentDate.getTime()) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Todate must be less than or equal to current date \" });\r\n                return;\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async addDays(theDate, days) {\r\n        return new Date(theDate.getTime() + days * 24 * 60 * 60 * 1000);\r\n    }\r\n\r\n\r\n    validateSearchFields() {\r\n\r\n        this.pop = false;\r\n        this.showGrid = false;\r\n        this.showexport = false;\r\n\r\n        this.growlMessage = [];\r\n\r\n        try {\r\n            this.growlMessage = [];\r\n\r\n           \r\n\r\n            if (this.fromDate == null || this.fromDate.toString() == '' || this.toDate == null || this.toDate.toString() == '') {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please select a valid date range' });\r\n                return false;\r\n            }\r\n\r\n            if (Date.parse(this.fromDate.toString()) && Date.parse(this.toDate.toString())) {\r\n                if (Date.parse(this.convertDateFormate(this.toDate)) > Date.parse(this.convertDateFormate(this.currentDate))) {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"To Date should be less than or equal to Today's Date\" });\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (Date.parse(this.convertDateFormate(this.fromDate)) > Date.parse(this.convertDateFormate(this.toDate))) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"From Date should be less than To Date\" });\r\n                return false;\r\n            }\r\n\r\n\r\n            return true;\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async  PopulateDepartments() {\r\n        try {\r\n\r\n            this.lstDeptDetails = [];\r\n            this.lstDeptDetails.push({ label: \"All\", value: \"ALL\" });\r\n            this.selectedDeptID = this.lstDeptDetails[0].value;\r\n            this.spinnerService.start();\r\n            await this.deliveryReportService.getTrackITDetpartments(\"\", \"A\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n                      this.tkitDeptDetails = data.DataList;\r\n                 \r\n                    this.statusCode = data.statusCode;\r\n\r\n                   \r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                        this.tkitDeptDetails = [];\r\n                     \r\n                                this.tkitDeptDetails = data.DataDictionary[\"pDsTkitDepts\"].Table1;\r\n                             \r\n                                if (this.tkitDeptDetails != null && this.tkitDeptDetails != undefined) {\r\n\r\n                                    for (let i = 0; i < this.tkitDeptDetails.length; i++) {\r\n                                        this.lstDeptDetails.push({\r\n\r\n                                            label: this.tkitDeptDetails[i].DESCRIPTION + \" (\" + this.tkitDeptDetails[i].DEPT_ID + \")\",\r\n\r\n                                            value: this.tkitDeptDetails[i].DEPT_ID\r\n\r\n\r\n                                        })\r\n\r\n                                       \r\n                                    }\r\n\r\n                                }\r\n                                this.spinnerService.stop();\r\n\r\n\r\n                               \r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                    }\r\n                });\r\n                  \r\n\r\n              \r\n\r\n\r\n        } catch (ex) {\r\n\r\n            this.spinnerService.stop();\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n    async  PopulateRequestors() {\r\n      \r\n        try {\r\n            await this.deliveryReportService.getRequestors(\"True\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n            //await this.deliveryReportService.getRequestors(\"True\").then((result: Response) => {\r\n                    let data = res.json();\r\n                this.growlMessage = [];\r\n                this.lstRequestor = [];\r\n                this.lstRequestor.push({ label: \"Select Requestor\", value: \"Select Requestor\" });\r\n             //   this.selectedRequestor = 'Select Requestor';\r\n                this.selectedRequestor = this.lstRequestor[0].value; \r\n                switch (data.StatType) {\r\n                    case StatusType.Success: {\r\n                      \r\n                        for (var i = 0; i < data.DataDictionary[\"pDsTkitRequestors\"].Table1.length; i++) {\r\n                            this.lstRequestor.push({ label: data.DataDictionary[\"pDsTkitRequestors\"].Table1[i].FIRST_NAME + data.DataDictionary[\"pDsTkitRequestors\"].Table1[i].LAST_NAME + \" (\" + data.DataDictionary[\"pDsTkitRequestors\"].Table1[i].REQUESTOR_ID +\")\" , value: data.DataDictionary[\"pDsTkitRequestors\"].Table1[i].REQUESTOR_ID })\r\n                        }\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Custom: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async getDeliveryDetails() {\r\n        var Fdate;\r\n        var Tdate;\r\n        this.showGrid = false;\r\n        this.showexport = false;\r\n        try {\r\n\r\n            if (this.validateSearchFields() == false) {\r\n\r\n                return;\r\n            }\r\n           \r\n                Fdate = this.convertDateFormate(this.fromDate.toDateString());\r\n                Tdate = this.convertDateFormate(this.toDate.toDateString());\r\n            \r\n\r\n\r\n       \r\n            let DefDateTime: Date;\r\n            let StausDateTime: Date;\r\n           \r\n            this.deliverHeaders = [];\r\n            this.deliverDetails = [];\r\n           \r\n            this.showexport = false;\r\n\r\n          \r\n\r\n            if (this.userId == null || this.userId == undefined || this.userId==\"ALL\") {\r\n                this.userId = '';\r\n            }\r\n\r\n            if (this.selectedStatus == null || this.selectedStatus == undefined || this.selectedStatus ==\"STATUS\") {\r\n                this.selectedStatus = '';\r\n            }\r\n\r\n            if (this.selectedRequestor == null || this.selectedRequestor == undefined || this.selectedRequestor == \"Select Requestor\") {\r\n                this.selectedRequestor = '';\r\n            }\r\n\r\n        \r\n            await this.deliveryReportService.getTkITDeliverReport(Fdate, Tdate, this.request, this.recipient, this.userId, this.selectedDeptID, this.itemId, this.vendorName, this.descr, this.location,\r\n                this.selectedRequestor, this.selectedStatus)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    //console.log(data);\r\n                    //console.log(data.StatType);\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success:\r\n                            {\r\n                                this.showGrid = true;\r\n                                this.spinnerService.stop();\r\n                                this.deliverHeaders = [];\r\n                                this.deliverHeaders = data.DataDictionary[\"pDsDeliverRep\"][\"EVENTHEADER\"];\r\n                                this.deliverDetails = data.DataDictionary[\"pDsDeliverRep\"][\"EVENTDETAILS\"];\r\n                                                              \r\n                                this.deliverHeaders.forEach(header => {\r\n                                    let details = this.deliverDetails.filter(detail => detail.TRANSACTION_ID == header.TRANS_ID);\r\n                                    this.showexport = true;\r\n                                    header.DETAILS = details;\r\n                                    if (header.STATUS == \"0\") {\r\n                                        header.STATUS = \"Open\"\r\n                                    }\r\n                                    else if (header.STATUS == \"20\") {\r\n                                        header.STATUS = \"Pickup\"\r\n                                    }\r\n                                    else if (header.STATUS == \"30\") {\r\n                                        header.STATUS = \"Load\"\r\n                                    }\r\n                                    else if (header.STATUS == \"40\") {\r\n                                        header.STATUS = \"UnLoad\"\r\n                                    }\r\n                                    else if (header.STATUS == \"50\") {\r\n                                        header.STATUS = \"Deliver\"\r\n                                    }\r\n                                    else if (header.STATUS == \"55\") {\r\n                                        header.STATUS = \"Take\"\r\n                                    }\r\n                                    else if (header.STATUS == \"60\") {\r\n                                        header.STATUS = \"Returns\"\r\n                                    }\r\n                                                                     \r\n                                });\r\n\r\n                               \r\n                                if (this.recordsPerPageSize == 0) {\r\n                                    this.deliverDetailRows = this.deliverHeaders.length;\r\n                                } else {\r\n                                    this.deliverDetailRows = this.recordsPerPageSize;\r\n                                }\r\n\r\n                               \r\n                                break;\r\n\r\n                            }\r\n                        case StatusType.Warn:\r\n                            {\r\n\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.spinnerService.stop();\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async onExportToExcelClick(event) {\r\n        try {\r\n            event.stopImmediatePropagation();\r\n            this.spinnerService.start();\r\n            let html: string = await this.exportReportDetails('Excel');\r\n            \r\n            let blob = new Blob([html], {\r\n                type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\r\n            });\r\n            saveAs(blob, \"DeliveryReport.xls\");\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n   async exportReportDetails(reqType: string) {\r\n        let htmlBuilder: string = '';\r\n        try {\r\n            this.statusCode = -1;\r\n            this.growlMessage = [];\r\n            let sbMailText: string;\r\n            let _strFrmDt: string;\r\n            let _strToDt: string;\r\n\r\n\r\n            let imgserverPath: string = '';\r\n\r\n            await this.commonService.getServerIP()\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    var data = res.json() as AtParWebApiResponse<string>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.ipAddress = data.DataVariable.toString();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (data.StatType != StatusType.Success) {\r\n                        htmlBuilder = '';\r\n                        return htmlBuilder;\r\n                    }\r\n                });\r\n\r\n\r\n            await this.commonService.getSSLConfigDetails()\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    this.growlMessage = [];\r\n                    var data = res.json() as AtParWebApiResponse<SSL_CONFIG_DETAILS>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.gstrProtocal = data.Data.PROTOCOL.toString();\r\n                            this.gstrServerName = data.Data.SERVER_NAME.toString();\r\n                            this.gstrPortNo = data.Data.PORT_NO.toString();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (data.StatType != StatusType.Success) {\r\n                        htmlBuilder = '';\r\n                        return htmlBuilder;\r\n                    }\r\n\r\n                });\r\n\r\n            imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/atpar/web/images/';\r\n\r\n\r\n\r\n\r\n\r\n            let title: string = '\"\"' + \"AtparVersion 3.0\" + '\"\"';\r\n\r\n\r\n            if (1 == 1) {\r\n\r\n\r\n                htmlBuilder = \"<Table align=left width=90% cellpadding=0 cellspacing = 0 vAlign=top>\";\r\n\r\n                if (reqType == 'Print') {\r\n                    htmlBuilder += \"<TR width='100%'><td   colspan=2 align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg title=Atpar Version 2.4.4><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td><td align=left  width='85%' height=63 nowrap><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                        + \"<TR><TD height=27  vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" + \"\" + \"COLOR: #8b4513;FONT-FAMILY: verdana;FONT-SIZE: 8pt\" + \"\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                        + \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                        + \"<tr><td colspan=5 align=left><span class=c2><b> Delivery Report From \" + this.convertDateFormate(this.fromDate) + \" to \" + this.convertDateFormate(this.toDate) + \"</b></span></td><td align=right valign=top>&nbsp;\";\r\n\r\n                    htmlBuilder += \"<A  href=\" + \"\" + \"javascript:printWindow()\" + \"\" + \"><img src=\" + imgserverPath + \"print.jpg></A>\";\r\n                } else {\r\n                    if (reqType == 'Mail') {\r\n                        htmlBuilder += \"<TR height=63><TD align=left colspan=2><IMG height=63 width=18% src=cid:logo title=Atpar 3><img src=cid:topbg width=82% height=63></TD></TR>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<TR height=63><TD align=left colspan=2><IMG height=63 width=18% src=\" + imgserverPath + \"logo.jpg title=Atpar 3><img src=\" + imgserverPath + \"topbg.jpg width=82% height=63></TD></TR>\";\r\n                    }\r\n                    htmlBuilder += \"<TR><TD height=27  vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" + \"\" + \"COLOR: #8b4513;FONT-FAMILY: verdana;FONT-SIZE: 8pt\" + \"\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                        + \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                        + \"<tr><td colspan=3 align=left><span class=c2><b> Tkit Delivery Report between  \" + this.convertDateFormate(this.fromDate) + \" and \" + this.convertDateFormate(this.toDate) + \" </b></span></td><td align=right valign=top>&nbsp;\";\r\n                }\r\n\r\n                htmlBuilder += \"</td></tr><tr height=20></tr></table></td></tr><tr><td colspan=2> \"\r\n                    + \"<table align=center width=100% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1>\"\r\n                    + \"<tr bgcolor=#d3d3d3>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Request# - Desc</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Location</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Vendor Name</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Requestor</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Status</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>DepartmentID</td>\"\r\n                    + \"</tr>\";\r\n\r\n                let sigimgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/AtPar/AtParWebApi/Uploaded/';\r\n\r\n                await this.deliverHeaders.forEach(header => {\r\n                    htmlBuilder += \"<tr bgcolor=#d3d3d3>\";\r\n                    htmlBuilder += \"<td  nowrap>&nbsp;\" + header.ORDER_NO + \" - \" + header.REPORT_DATA_8 + \"&nbsp;</td>\";\r\n                    if (header.LOCATION == '' || header.LOCATION == null) {\r\n                        htmlBuilder += \"<td  nowrap>&nbsp</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td  nowrap>&nbsp;\" + header.LOCATION + \"&nbsp;</td>\";\r\n                    }\r\n                    if (header.VENDOR_NAME == '' || header.VENDOR_NAME == null) {\r\n                        htmlBuilder += \"<td  nowrap>&nbsp</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td  nowrap>&nbsp;\" + header.VENDOR_NAME + \"&nbsp;</td>\";\r\n                    }\r\n                    if (header.DELIVERED_TO == '' || header.DELIVERED_TO == null) {\r\n                        htmlBuilder += \"<td  nowrap>&nbsp</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td  nowrap>&nbsp;\" + header.DELIVERED_TO + \"&nbsp;</td>\";\r\n                    }\r\n                    if (header.STATUS == '' || header.STATUS == null) {\r\n                        htmlBuilder += \"<td  nowrap>&nbsp</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td  nowrap>&nbsp;\" + header.STATUS + \"&nbsp;</td>\";\r\n                    }\r\n\r\n                    if (header.REPORT_DATA_25 == '' || header.REPORT_DATA_25 == null) {\r\n                        htmlBuilder += \"<td  nowrap>&nbsp</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td  nowrap>&nbsp;\" + header.REPORT_DATA_25 + \"&nbsp;</td>\";\r\n                    }  \r\n                      \r\n                    htmlBuilder += \"</tr>\";\r\n                      if (header.DETAILS.length > 0) {\r\n                      \r\n                        htmlBuilder += \"<tr>\"\r\n                            + \"<td colspan=7>\"\r\n                            + \"<table align=center width=90% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1>\"\r\n                            + \"<tr bgcolor=#E0E0E0>\"\r\n                            + \"<td align=center nowrap width=15%><span class=c3><b>Event</b></span></td>\"\r\n                            + \"<td align=center nowrap width=8%><span class=c3><b> Event Date(mm/dd/yyyy) </b></span></td>\"\r\n                            + \"<td align=center nowrap width=10%><span class=c3><b>User</b></span></td>\"\r\n                            + \"<td align=center nowrap width=12%><span class=c3><b>Recepient</b></span></td>\"\r\n                            + \"<td align=center nowrap width=12%><span class=c3><b>Signature</b></span></td>\"\r\n                            + \"</tr>\";\r\n                        header.DETAILS.forEach(detail => {\r\n                            htmlBuilder += \"<tr>\"\r\n                                + \"<td align=left nowrap ><span class=c3>\" + detail.EVENT_STATUS_MESSAGE + \"</span></td>\"\r\n                                + \"<td align=left nowrap><span class=c3>\" + detail.UPDATE_DATE + \"</span></td>\";\r\n\r\n                            if (detail.USERNAME == '' || detail.USERNAME == null) {\r\n                                htmlBuilder += \"<td nowrap>&nbsp</td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>\" + detail.USERNAME + \"</span></td>\";\r\n                            }  \r\n\r\n\r\n                            if (detail.RECEPIENT == '' || detail.RECEPIENT == null) {\r\n                                htmlBuilder += \"<td nowrap>&nbsp</td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>\" + detail.RECEPIENT + \"</span></td>\";\r\n                            }  \r\n                               \r\n                               \r\n                              \r\n                            if (detail.STATUS_MESSAGE == \"Deliver\") {\r\n                                htmlBuilder += \"<td align=left nowrap ><img  src=\" + sigimgserverPath + header.TRANSACTION_ID + \".jpg ></td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=right ><span class=c3></span></td>\";\r\n                            }\r\n\r\n\r\n\r\n                            htmlBuilder += \"</tr>\";\r\n\r\n                        });\r\n\r\n\r\n\r\n                        htmlBuilder += \"</table>\";\r\n                       \r\n                    }\r\n\r\n                    \r\n\r\n                });\r\n\r\n                htmlBuilder += \"</table></Table>\";\r\n\r\n            }\r\n\r\n            return await htmlBuilder;\r\n\r\n\r\n        }\r\n        catch (ex) {\r\n            htmlBuilder = '';\r\n            return htmlBuilder;\r\n        }\r\n    }\r\n\r\n      async onSendMailIconClick(event) {\r\n          try {\r\n              this.isMailDialog = true;\r\n              this.toMailAddr = '';\r\n          } catch (ex) {\r\n              this.clientErrorMsg(ex);\r\n          }\r\n      }\r\n\r\n      async onSendMailClick(event) {\r\n          try {\r\n              this.spinnerService.start();\r\n              let html: string = await this.exportReportDetails('Mail');\r\n              let toAddr: string = '';\r\n              this.growlMessage = [];\r\n              this.isMailDialog = false;\r\n\r\n              if (html != '' && html != null) {\r\n                  await this.commonService.sendEmbeddedEmail(this.deviceTokenEntry[TokenEntry_Enum.SystemId], 'Track IT Deliver Report', JSON.stringify(html), this.toMailAddr, '', 'false', MailPriority.Normal.toString(), '')\r\n                      .catch(this.httpService.handleError)\r\n                      .then((res: Response) => {\r\n                          let data = res.json() as AtParWebApiResponse<number>;\r\n                          this.statusCode = data.StatusCode;\r\n                      });\r\n\r\n                  if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                      this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Mail has been sent' });\r\n                  }\r\n                  else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_FROM_ADDRESS) {\r\n                      this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'From Address is Missing! Please Contact Administrator' });\r\n                  }\r\n                  else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_TO_ADDRESS) {\r\n                      this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Please Enter To Email Address' });\r\n                  }\r\n                  else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_SUBJECT) {\r\n                      this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Subject is Missing! Please Contact Administrator' });\r\n                  }\r\n                  else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_BODY) {\r\n                      this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Body is Missing! Please contact Administrator' });\r\n                  }\r\n                  else if (this.statusCode == AtparStatusCodes.EMAIL_SMTP_SERVER_MISSING) {\r\n                      this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Email Server not configured! Please contact Administrator' });\r\n                  }\r\n                  else if (this.statusCode == AtparStatusCodes.EMAIL_SEND_FAILED) {\r\n                      this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Mail Not Sent. Please Try Again' });\r\n                  }\r\n                  else {\r\n                      this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Error while sending mail' });\r\n                  }\r\n              }\r\n              this.toMailAddr = '';\r\n\r\n          } catch (ex) {\r\n              this.clientErrorMsg(ex);\r\n          }\r\n          finally {\r\n\r\n              this.spinnerService.stop();\r\n          }\r\n      }\r\n\r\n      async onPrintClick(event) {\r\n        \r\n\r\n          try {\r\n              event.stopImmediatePropagation();\r\n              this.spinnerService.start();\r\n              var html = await this.exportReportDetails('Print');\r\n              if (html != '' && html != null) {\r\n\r\n                  var mywindow = window.open('', 'PRINT', 'height=600,width=600');\r\n                  if (mywindow != null && mywindow != undefined) {\r\n                      mywindow.document.write('<html><head><title>' + 'TrackIT - Delivery Report' + '</title>');\r\n                      mywindow.document.write('</head><body >');\r\n                      mywindow.document.write(html);\r\n                      mywindow.document.write('</body></html>');\r\n\r\n                      mywindow.document.close(); // necessary for IE >= 10\r\n                      mywindow.focus(); // necessary for IE >= 10*/\r\n\r\n                      mywindow.print();\r\n                      mywindow.close();\r\n\r\n                      return true;\r\n                  } else {\r\n                      this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please set allow pop-ups for this site in your browser' });\r\n                  }\r\n              }\r\n          } catch (ex) {\r\n              this.clientErrorMsg(ex);\r\n              return false;\r\n          }\r\n          finally {\r\n              this.spinnerService.stop();\r\n          }\r\n      }\r\n\r\n    async getHeirarchyUsersList() {\r\n        try {\r\n            await this.deliveryReportService.getHeirarchyUsersList(EnumApps.TrackIT, this.deviceTokenEntry[TokenEntry_Enum.UserID], this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).then((result: Response) => {\r\n                let res = result.json() as AtParWebApiResponse<any>;\r\n                this.growlMessage = [];\r\n                this.lstUsers = [];\r\n                this.lstUsers.push({ label: 'ALL', value: 'ALL' });\r\n                this.userId = this.lstUsers[0].value\r\n                switch (res.StatType) {\r\n                    case StatusType.Success: {\r\n                        for (var i = 0; i < res.DataDictionary[\"pDSUserList\"].Table1.length; i++) {\r\n                            this.lstUsers.push({ label: res.DataDictionary[\"pDSUserList\"].Table1[i].FULLNAME, value: res.DataDictionary[\"pDSUserList\"].Table1[i].USER_ID })\r\n                        }\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Custom: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg) {\r\n        this.growlMessage = [];\r\n        this.spinnerService.stop();\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString());\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.deviceTokenEntry = null;      \r\n        this.lstUsers = null;        \r\n        this.growlMessage = null;\r\n        this.lstStatus = null;\r\n        this.lstDeptDetails = null;\r\n        this.tkitDeptDetails = null;\r\n        this.lstDeliverdBy = null;\r\n        this.lstRequestor = null;\r\n        this.deliverHeaders = null;\r\n        this.deliverDetails = null;\r\n       \r\n    }\r\n\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-delivery-report.component.ts","import { Component } from '@angular/core';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./tkit-destruction-report.component.html')\r\n})\r\n\r\nexport class DestructionReportComponent {\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-destruction-report.component.ts","import { Component } from '@angular/core';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./tkit-equipment-tracking-report.component.html')\r\n})\r\n\r\nexport class EquipmentTrackingReportComponent {\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-equipment-tracking-report.component.ts","import { Component } from '@angular/core';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { VM_TKIT_INACTIVE_ITEMS } from '../../app/Entities/VM_TKIT_INACTIVE_ITEMS';\r\nimport { TKIT_ITEM_MASTER } from '../../app/Entities/TKIT_ITEM_MASTER';\r\nimport { TrackITInactiveItemsService } from '../../app/TrackIT/tkit-inactivate-items.service';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { TokenEntry_Enum, ClientType, StatusType, BusinessType } from '../Shared/AtParEnums';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { SelectItem, Message } from './../components/common/api';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { List, Enumerable } from 'linqts';\r\nimport { asEnumerable } from 'linq-es5';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n\r\n    template: require('./tkit-inactivate-items.component.html'),\r\n    providers: [TrackITInactiveItemsService, HttpService, AtParCommonService, AtParConstants]\r\n})\r\nexport class InactivateItemsComponent {\r\n    lstDBData: VM_TKIT_INACTIVE_ITEMS[];\r\n    lstgridfilterData: VM_TKIT_INACTIVE_ITEMS[];\r\n    deviceTokenEntry: string[] = [];\r\n    selectedIndicator: string = \"\";\r\n    indicatorType: SelectItem[];\r\n    lstCheckedItem: Array<VM_TKIT_INACTIVE_ITEMS>;\r\n    dataCheckedSorting: VM_TKIT_INACTIVE_ITEMS[] = [];\r\n    dataUncheckedSorting: Array<VM_TKIT_INACTIVE_ITEMS>;\r\n    sortedcheckedrec: VM_TKIT_INACTIVE_ITEMS[];\r\n    sorteduncheckedrec: VM_TKIT_INACTIVE_ITEMS[];\r\n    startIndex: number;\r\n    EndIndex: number;\r\n    isVisible: boolean = false;\r\n    growlMessage: Message[] = [];\r\n    lstLocations: VM_TKIT_INACTIVE_ITEMS[] = [];\r\n    lstFilteredLocation: any;\r\n    blnsortbycolumn: boolean = true;\r\n    custom: string = \"custom\";\r\n    pazeSize: number;\r\n    destructionDate: any;\r\n    preField: string;\r\n    itemMasterData: TKIT_ITEM_MASTER[] = [];\r\n    public constructor(\r\n        private trackITInactiveItemsService: TrackITInactiveItemsService,\r\n        private spinnerService: SpinnerService,\r\n        public atParCommonService: AtParCommonService,\r\n        private httpService: HttpService,\r\n        private atParConstant: AtParConstants\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.spinnerService.start();\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n        this.lstCheckedItem = new Array<VM_TKIT_INACTIVE_ITEMS>();\r\n        this.dataCheckedSorting = new Array<VM_TKIT_INACTIVE_ITEMS>();\r\n        this.dataUncheckedSorting = new Array<VM_TKIT_INACTIVE_ITEMS>();\r\n        this.lstFilteredLocation = new Array<VM_TKIT_INACTIVE_ITEMS>();\r\n        this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n        this.indicatorType = [];\r\n        this.indicatorType.push({ label: 'Select Indicator', value: '' });\r\n        this.indicatorType.push({ label: 'BOX', value: 'B' });\r\n        this.indicatorType.push({ label: 'EQUIPMENT', value: 'E' });\r\n        this.indicatorType.push({ label: 'FURNITURE', value: 'F' });\r\n        this.pazeSize = +this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n        this.destructionDate = this.formatDate(new Date().toString());\r\n        console.log(this.destructionDate);\r\n                                  \r\n        this.spinnerService.stop();\r\n    }\r\n\r\n    formatDate(date: string): string {\r\n        \r\n        var today = new Date(date);\r\n        var dd: any = today.getDate();\r\n        var mm: any = today.getMonth() + 1; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n\r\n       return mm + '/' + dd + '/' + yyyy;\r\n\r\n    }\r\n\r\n    selectedRow(values: any, event) {\r\n\r\n        if (event == true) {\r\n            values.CHK_VALUE = 1;\r\n            values.checkvalue == true;\r\n        }\r\n        else {\r\n            values.CHK_VALUE = 0;\r\n            values.checkvalue == false;\r\n        }\r\n\r\n        for (var i = 0; i < this.lstCheckedItem.length; i++) {\r\n            if (this.lstCheckedItem[i].ITEM_ID === values.ITEM_ID) {\r\n                var index = this.lstCheckedItem.indexOf(this.lstCheckedItem[i], 0)\r\n                this.lstCheckedItem.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        this.lstCheckedItem.push(values);\r\n    }\r\n    filterdata(event) {\r\n        this.lstgridfilterData = [];\r\n        this.lstgridfilterData = new Array<VM_TKIT_INACTIVE_ITEMS>();\r\n        this.lstgridfilterData = event;\r\n    }\r\n\r\n\r\n    checkAll() {\r\n        this.lstCheckedItem = [];\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n\r\n        if (this.lstgridfilterData != null && this.lstgridfilterData != undefined && this.lstgridfilterData.length > 0) {\r\n\r\n            if (this.EndIndex > this.lstgridfilterData.length) {\r\n                this.EndIndex = this.lstgridfilterData.length;\r\n            }\r\n\r\n            for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                this.lstgridfilterData[i].checkvalue = true;\r\n                this.lstgridfilterData[i].ITEM_INACTIVATED = true;\r\n                this.lstgridfilterData[i].CHK_VALUE = 1;\r\n                this.lstCheckedItem.push(this.lstgridfilterData[i]);\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            if (this.EndIndex > this.lstDBData.length) {\r\n                this.EndIndex = this.lstDBData.length;\r\n            }\r\n\r\n            for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                this.lstDBData[i].checkvalue = true;\r\n                this.lstDBData[i].ITEM_INACTIVATED = true;\r\n                this.lstDBData[i].CHK_VALUE = 1;\r\n                this.lstCheckedItem.push(this.lstDBData[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    unCheckAll() {\r\n        this.lstCheckedItem = [];\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n        if (this.lstgridfilterData != null && this.lstgridfilterData != undefined && this.lstgridfilterData.length > 0) {\r\n\r\n            if (this.EndIndex > this.lstgridfilterData.length) {\r\n                this.EndIndex = this.lstgridfilterData.length;\r\n            }\r\n\r\n            for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                this.lstgridfilterData[i].checkvalue = false;\r\n                this.lstgridfilterData[i].ITEM_INACTIVATED = false;\r\n                this.lstgridfilterData[i].CHK_VALUE = 0;\r\n                this.lstCheckedItem.push(this.lstgridfilterData[i]);\r\n            }\r\n        }\r\n        else {\r\n            if (this.EndIndex > this.lstDBData.length) {\r\n                this.EndIndex = this.lstDBData.length;\r\n            }\r\n\r\n            for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                this.lstDBData[i].checkvalue = false;\r\n                this.lstDBData[i].ITEM_INACTIVATED = false;\r\n                this.lstDBData[i].CHK_VALUE = 0;\r\n                this.lstCheckedItem.push(this.lstDBData[i]);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    customSort(event, field) {\r\n        this.preField = \"\";\r\n        var element = event;\r\n        if (this.preField == element.field) {\r\n            if (element.order == 1) {\r\n                element.order = -1;\r\n            } else {\r\n                element.order = 1;\r\n            }\r\n            // element.order = !element.order;\r\n\r\n        } else {\r\n            element.order = 1;\r\n        }\r\n        this.preField = element.field;\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n        let result = null;\r\n        let order: boolean;\r\n\r\n        try {\r\n            this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] == null && b[element.field] != null)\r\n                    result = -1;\r\n                else if (a[element.field] != null && b[element.field] == null)\r\n                    result = 1;\r\n                else if (a[element.field] == null && b[element.field] == null)\r\n                    result = 0;\r\n                else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                    result = a[element.field].localeCompare(b[element.field]);\r\n                else\r\n                    result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                return (element.order * result);\r\n            });\r\n\r\n            this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] == null && b[element.field] != null)\r\n                    result = -1;\r\n                else if (a[element.field] != null && b[element.field] == null)\r\n                    result = 1;\r\n                else if (a[element.field] == null && b[element.field] == null)\r\n                    result = 0;\r\n                else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                    result = a[element.field].localeCompare(b[element.field]);\r\n                else\r\n                    result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                return (element.order * result);\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"customSort\");\r\n        }\r\n\r\n        this.lstDBData = [];\r\n        this.lstDBData = this.sortedcheckedrec.concat(this.sorteduncheckedrec);\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n    }\r\n\r\n    \r\n    getItemsToInActivate() {\r\n        this.isVisible = false;\r\n        var destructionDate = new Date(this.destructionDate).toLocaleString().replace(/[^A-Za-z 0-9 \\.,\\?\"\"!@#\\$%\\^&\\*\\(\\)-_=\\+;:<>\\/\\\\\\|\\}\\{\\[\\]`~]*/g, '');                            \r\n        this.destructionDate = destructionDate.replace(',','') ;\r\n\r\n        if (this.selectedIndicator === \"Select Indicator\" || this.selectedIndicator === undefined || this.selectedIndicator == \"\") {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Select the Indicator' });\r\n            return false;\r\n        }\r\n        if (this.destructionDate === null || this.destructionDate === undefined || this.destructionDate == \"\") {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Select the Destruction Date' });\r\n            return false;\r\n        }\r\n        try {\r\n            this.spinnerService.start();\r\n\r\n            this.trackITInactiveItemsService.getItemsToInActivate(this.selectedIndicator, this.destructionDate, this.deviceTokenEntry)\r\n                .subscribe((response) => {\r\n                    this.growlMessage = [];\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstDBData = response.DataList;\r\n                            this.isVisible = true;\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            this.isVisible = false;\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            this.isVisible = false;\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            this.isVisible = false;\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"inactivate items\");\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    validateDestructionDate(){\r\n        this.spinnerService.start();\r\n        var reGoodDate = /^(?:(0[1-9]|1[012])[\\/.](0[1-9]|[12][0-9]|3[01])[\\/.](19|20)[0-9]{2})$/;\r\n        var res = reGoodDate.test(this.destructionDate);\r\n        if(!res) {\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Date format should be : mm/dd/yyyy.\"});\r\n            this.spinnerService.stop();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this.lstDBData = [];\r\n        this.lstgridfilterData = [];\r\n        this.deviceTokenEntry = [];\r\n        this.selectedIndicator = \"\";\r\n        this.indicatorType = null;\r\n        this.lstCheckedItem = [];\r\n        this.dataCheckedSorting  = [];\r\n        this.dataUncheckedSorting  = [];\r\n        this.sortedcheckedrec  = [];\r\n        this.sorteduncheckedrec = [];\r\n        this.startIndex = -1;\r\n        this.EndIndex =  -1;\r\n        this.isVisible = false;\r\n        this.growlMessage = [];\r\n        this.lstLocations = [];\r\n        this.lstFilteredLocation  = [];\r\n        this.blnsortbycolumn = false;\r\n        this.custom = \"\";\r\n        this.pazeSize = 0;\r\n        this.destructionDate = \"\";\r\n        this.preField = \"\";\r\n        this.itemMasterData = [];\r\n    }\r\n    inactivateItems() {\r\n        this.growlMessage = [];\r\n        this.spinnerService.start();\r\n        this.itemMasterData = [];\r\n        var checkedItems = this.lstCheckedItem.filter(x => x.CHK_VALUE == 1);\r\n        var itemDetail : TKIT_ITEM_MASTER;\r\n        for(var item =0; item< checkedItems.length;item++) {\r\n            itemDetail = new TKIT_ITEM_MASTER();\r\n            itemDetail.ITEM_ID = checkedItems[item].ITEM_ID;\r\n            itemDetail.ITEM_DESCR = checkedItems[item].ITEM_DESCR;\r\n            itemDetail.ITEM_TYPE = checkedItems[item].ITEM_TYPE;\r\n            itemDetail.CHK_VALUE = checkedItems[item].CHK_VALUE;\r\n            itemDetail.ITEM_INACTIVATED = checkedItems[item].ITEM_INACTIVATED;\r\n            itemDetail.DESTRUCTION_DATE = checkedItems[item].DESTRUCTION_DATE;\r\n            itemDetail.COMMENTS = checkedItems[item].COMMENTS;\r\n            this.itemMasterData.push(itemDetail);\r\n        } \r\n        if(this.itemMasterData == undefined || this.itemMasterData == null || this.itemMasterData.length == 0) {\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"No Item has been selected\"});\r\n            this.spinnerService.stop();\r\n            return;\r\n        }\r\n            try {\r\n                this.spinnerService.start();\r\n    \r\n                this.trackITInactiveItemsService.inactivateItems(this.itemMasterData, this.deviceTokenEntry)\r\n                    .subscribe((response) => {\r\n                        this.growlMessage = [];\r\n                        switch (response.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.itemMasterData = [];\r\n                                this.lstCheckedItem = [];\r\n                                this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: \"Items Status Updated\" });\r\n                                this.isVisible = false;\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                                this.spinnerService.stop();\r\n                                this.isVisible = false;\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n    \r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                                this.spinnerService.stop();\r\n                                this.isVisible = false;\r\n                                break;\r\n                            }\r\n                        }\r\n    \r\n    \r\n                    });\r\n    \r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"inactivate items\");\r\n            }\r\n        }\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-inactivate-items.component.ts","import { Component } from '@angular/core';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./tkit-item-master-report.component.html')\r\n})\r\n\r\nexport class ItemMasterReportComponent {\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-item-master-report.component.ts","import { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { Employee } from '../components/datatable/employee';\r\nimport { TKIT_DEPT } from \"../Entities/TKIT_DEPT\";\r\nimport { ManageDepartmentsService } from './tkit-manage-departments.service';\r\nimport { TokenEntry_Enum, EnumApps, ModeEnum, YesNo_Enum, StatusType, } from '../Shared/AtParEnums'\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtparStatusCodes, } from '../Shared/AtParStatusCodes';\r\nimport { Http, Response } from '@angular/http';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { Message } from './../components/common/api';\r\nimport { MT_ATPAR_SECURITY_AUDIT } from '../Entities/MT_ATPAR_SECURITY_AUDIT';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\nimport { LeftBarAnimationService } from '../Home/leftbar-animation.service';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { SelectItem } from '../components/common/api';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n    template: require('./tkit-manage-departments.component.html'),\r\n    providers: [datatableservice, ManageDepartmentsService, HttpService, AtParCommonService, AtParConstants]\r\n})\r\n\r\nexport class ManageDepartmentsComponent {\r\n    @ViewChild(DataTable) dataTableComponent: DataTable;\r\n    departmentIDSearch: string = \"\";\r\n    showAddButton: boolean = true;\r\n    mode: string;\r\n    pop: boolean = false;\r\n    table: boolean = true;\r\n    form: boolean = false;\r\n    editform: boolean = false;\r\n    sales: Employee[];\r\n    ven: any;\r\n    Title: string = \"\";\r\n    bindSymbal: string = \"\";\r\n    loading: boolean = true;\r\n    departmentIDStatus: number;\r\n    descStatus: number;\r\n    date1: Date;\r\n    date2: Date;\r\n    minDateValue1: Date = new Date();\r\n    minDateValue2: Date;\r\n    showTextBox: boolean = false;\r\n    showLable: boolean = false;\r\n    departmentID: string = \"\";\r\n    public newItem = new TKIT_DEPT();\r\n    growlMessage: Message[] = [];\r\n    _deviceTokenEntry: string[] = [];\r\n    lstDepts: TKIT_DEPT[];\r\n    mainlstGridData: TKIT_DEPT[];\r\n    ddlStatusType: any[] = [];\r\n    pageSize: number;\r\n    menuCode: string;\r\n    appID: string;\r\n    auditSatus: string = \"\";\r\n    changeDeptStatus: string;\r\n    checkvalue: boolean = false;\r\n    lstOrgGroups: SelectItem[] = [];\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    blnShowOrgGroupDD: boolean = false;\r\n    orgGrpId: string = \"\";\r\n    selectedOrgGroupId: string = \"\";\r\n    orgGroupIDForDBUpdate: string;\r\n    ddlOrgIDStatus: number;\r\n    statusType: string;\r\n    breadCrumbMenu: Menus;\r\n\r\n    constructor(public dataservice: datatableservice,\r\n        private mngDeptService: ManageDepartmentsService,\r\n        private httpService: HttpService,\r\n        private spinnerService: SpinnerService,\r\n        private commonService: AtParCommonService,\r\n        private atParConstant: AtParConstants,\r\n        private leftBarAnimationService: LeftBarAnimationService) {\r\n        this.breadCrumbMenu = new Menus();\r\n        this.ven = new Employee();\r\n        this.departmentID = \"dept1\";\r\n        this._deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n    }\r\n\r\n\r\n    adddepartment() {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = 'Add Department';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        this.showTextBox = true;\r\n        this.showLable = false;\r\n        this.form = true;\r\n        this.editform = false;\r\n        this.table = false;\r\n        this.pop = false;\r\n        this.Title = \"Save\";\r\n        this.bindSymbal = \"floppy-o\";\r\n        this.showAddButton = false;\r\n        this.mode = ModeEnum[ModeEnum.Add].toString();\r\n        this.departmentIDStatus = null;\r\n        this.descStatus = null;\r\n        this.ddlOrgIDStatus = null;\r\n        this.newItem = new TKIT_DEPT();\r\n        this.departmentIDSearch = \"\";\r\n        this.selectedOrgGroupId = \"\";\r\n        this.bindOrgGroups();\r\n        this.loading = true;\r\n        //this.blnShowOrgGroupLabel = false;\r\n        // this.blnShowOrgGroupDD = true;\r\n    }\r\n\r\n    tbl() {\r\n        this.form = false;\r\n        this.editform = false;\r\n        this.table = false;\r\n        this.pop = false;\r\n        this.table = true;\r\n    }\r\n\r\n    edit(data) {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = 'Edit Department';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        this.showTextBox = false;\r\n        this.showLable = true;\r\n        this.form = true;\r\n        this.table = false;\r\n        this.showAddButton = false;\r\n        this.Title = \"Update\";\r\n        this.bindSymbal = \"check\";\r\n        this.newItem = data;\r\n        this.mode = ModeEnum[ModeEnum.Edit].toString();\r\n        this.loading = false;\r\n        this.departmentIDSearch = \"\";\r\n        this.blnShowOrgGroupLabel = true;\r\n        this.blnShowOrgGroupDD = false;\r\n        this.orgGrpId = data.ORG_GROUP_ID\r\n    }\r\n\r\n    save() {\r\n        this.editform = false;\r\n    }\r\n\r\n    close() {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = '';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        this.form = false;\r\n        this.table = true;\r\n        this.pop = true;\r\n        this.editform = false;\r\n        this.table = false;\r\n        this.showAddButton = true;\r\n        this.newItem = new TKIT_DEPT();\r\n        this.departmentIDSearch = \"\";\r\n        this.growlMessage = [];\r\n    }\r\n\r\n    clientErrorMsg(strExMsg) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString());\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.table = false;\r\n        this.showAddButton = true;\r\n        this.ddlStatusType.push({ label: 'All', value: \"\" });\r\n        this.ddlStatusType.push({ label: 'Active', value: true });\r\n        this.ddlStatusType.push({ label: 'Inactive', value: false });\r\n        this.pageSize = + this._deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n        this.menuCode = localStorage.getItem(\"menuCode\") != null ? localStorage.getItem(\"menuCode\") : 'mt_tkit_manage_depts.aspx';\r\n        this.appID = (EnumApps.TrackIT).toString();\r\n        this.mainlstGridData = new Array<TKIT_DEPT>();\r\n        this.checkAuditAllowed();\r\n        this.statusType = null;\r\n        //this.bindOrgGroups();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.departmentIDSearch = null;\r\n        this.mode = null;\r\n        this.Title = null;\r\n        this.bindSymbal = null;\r\n        this.departmentIDStatus = null;\r\n        this.descStatus = null;\r\n        this.departmentID = null;\r\n        this.newItem = null;\r\n        this.growlMessage = null;\r\n        this._deviceTokenEntry = null;\r\n        this.lstDepts = null;\r\n        this.ddlStatusType = null;\r\n        this.pageSize = null;\r\n        this.menuCode = null;\r\n        this.appID = null;\r\n        this.auditSatus = null;\r\n        this.changeDeptStatus = null;\r\n    }\r\n\r\n    async bindOrgGroups() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.growlMessage = [];\r\n            this.lstOrgGroups = [];\r\n            await this.commonService.getUserOrgGroups(this._deviceTokenEntry[TokenEntry_Enum.UserID], this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.spinnerService.stop();\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n                            // this.blnStatusMsg = false;\r\n\r\n                            if (this.orgGroupData.length == 1) {\r\n                                this.blnShowOrgGroupDD = false;\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.orgGrpId = this.orgGroupData[0].ORG_GROUP_ID + ' - ' + this.orgGroupData[0].ORG_GROUP_NAME;\r\n                                break;\r\n\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.blnShowOrgGroupDD = true;\r\n                                this.blnShowOrgGroupLabel = false;\r\n                                this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" })\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID !== \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + ' - ' + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: AtParConstants.ClientErrorMessage });\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n    // Add and Update button validations\r\n    bindModelDataChange(event: any) {\r\n        try {\r\n\r\n            if (\"txtDeptID\" == event.TextBoxID.toString()) {\r\n                this.departmentIDStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtDesc\" == event.TextBoxID.toString()) {\r\n                this.descStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (this.Title == \"Update\") {\r\n                this.departmentIDStatus = 0;\r\n            }\r\n            this.ddlOrgIDChanged();\r\n            if (this.mode == ModeEnum[ModeEnum.Add].toString()) {\r\n                if (this.departmentIDStatus == 0 && this.descStatus == 0 && this.ddlOrgIDStatus == 0) {\r\n                    this.loading = false;\r\n                }\r\n                else {\r\n                    this.loading = true;\r\n                }\r\n            }\r\n\r\n            if (this.mode == ModeEnum[ModeEnum.Edit].toString()) {\r\n                if (this.descStatus == 0) {\r\n                    this.loading = false;\r\n                }\r\n                else {\r\n                    this.loading = true;\r\n                }\r\n            }\r\n\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n    }\r\n\r\n    async BindGrid() {\r\n\r\n        //if (this.table == true) {\r\n        //    this.dataTableComponent.reset();\r\n        //    this.statusType = null;\r\n        //}\r\n\r\n        this.mainlstGridData = [];\r\n        this.lstDepts = [];\r\n        this.statusType = \"\";\r\n\r\n        try {\r\n            this.table = false;\r\n            if (this.mode == \"Edit\") {\r\n                this.showAddButton = true;\r\n            }\r\n\r\n            this.spinnerService.start();\r\n            if (this.departmentIDSearch == null || this.departmentIDSearch == undefined || this.departmentIDSearch === \"\") {\r\n                this.departmentIDSearch = \"\";\r\n            }\r\n\r\n            await this.mngDeptService.getDepartments(this.departmentIDSearch, \"\", this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID])\r\n                .catch(this.httpService.handleError)\r\n                .then((resp: Response) => {\r\n                    let webresp = resp.json() as AtParWebApiResponse<TKIT_DEPT>\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.growlMessage = [];\r\n                            this.mainlstGridData = [];\r\n                            this.lstDepts = [];\r\n                            this.lstDepts = webresp.DataList;\r\n                            for (let i = 0; i <= this.lstDepts.length - 1; i++) {\r\n                                if (this.lstDepts[i].STATUS == \"A\") {\r\n                                    this.lstDepts[i].checkvalue = true;\r\n                                }\r\n                                else {\r\n                                    this.lstDepts[i].checkvalue = false;\r\n                                }\r\n                                this.mainlstGridData.push(this.lstDepts[i]);\r\n                            }\r\n\r\n\r\n                            this.table = true;\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.table = false;\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: \"warn\", summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.table = false;\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: \"info\", summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.table = false;\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: \"error\", summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n    }\r\n\r\n    async changeStatus(dept) {\r\n        let status: any;\r\n        if (dept.checkvalue == true) {\r\n            \r\n            status = \"A\";\r\n        }\r\n        else {\r\n            status = \"I\";\r\n            \r\n        }\r\n\r\n        this.growlMessage = [];\r\n        this.spinnerService.start();\r\n        try {\r\n            var webresp = new AtParWebApiResponse<TKIT_DEPT>();\r\n            await this.mngDeptService.saveDepartment(dept.DEPT_ID, dept.DESCRIPTION, status, ModeEnum[ModeEnum.Edit].toString(), dept.ORG_GROUP_ID, this._deviceTokenEntry[TokenEntry_Enum.UserID])\r\n                .catch(this.httpService.handleError).then(async (resp: Response) => {\r\n                    webresp = resp.json() as AtParWebApiResponse<TKIT_DEPT>\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n                        case StatusType.Success:\r\n                            //  await this.BindGrid();\r\n                            this.growlMessage = [];\r\n                            let msg = AtParConstants.Updated_Status_Msg.replace(\"1%\", 'Department').replace(\"2%\", dept.DEPT_ID);\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n\r\n\r\n                            let filterData: any = [];\r\n                            this.lstDepts = [];\r\n                            let matchedrecord = this.mainlstGridData.filter(x => x.DEPT_ID == dept.DEPT_ID)\r\n                            matchedrecord[0].checkvalue = dept.checkvalue;\r\n                            matchedrecord[0].STATUS = status;\r\n                            \r\n                            if (this.statusType.toString() == \"false\") {\r\n                                filterData = this.mainlstGridData.filter(x => x.checkvalue == false)\r\n                            } else if (this.statusType.toString() == \"true\") {\r\n                                filterData = this.mainlstGridData.filter(x => x.checkvalue == true)\r\n                            } else {\r\n                                filterData = this.mainlstGridData\r\n                            }\r\n                            if (filterData != null) {\r\n                                for (let x = 0; x < filterData.length; x++) {\r\n                                    let lstManagedeptDetails = new TKIT_DEPT();\r\n                                    lstManagedeptDetails.ORG_GROUP_ID = filterData[x].ORG_GROUP_ID;\r\n                                    lstManagedeptDetails.DESCRIPTION = filterData[x].DESCRIPTION;\r\n                                    lstManagedeptDetails.DEPT_ID = filterData[x].DEPT_ID;\r\n\r\n                                    lstManagedeptDetails.UPDATE_DATE = filterData[x].UPDATE_DATE;\r\n                                    lstManagedeptDetails.UPDATE_USER_ID = filterData[x].UPDATE_USER_ID;\r\n                                    if (filterData[x].STATUS == \"A\") {\r\n                                        filterData[x].checkvalue = true;\r\n\r\n                                    }\r\n                                    else {\r\n                                        filterData[x].checkvalue = false;\r\n                                    }\r\n                                    lstManagedeptDetails.STATUS = filterData[x].STATUS;\r\n                                    lstManagedeptDetails.checkvalue = filterData[x].checkvalue;\r\n                                    this.lstDepts.push(lstManagedeptDetails);\r\n                                }\r\n                            }\r\n\r\n\r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.BindGrid();\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.BindGrid();\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n\r\n                            break;\r\n                    }\r\n\r\n                    this.spinnerService.stop();\r\n                });\r\n\r\n        }\r\n\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n\r\n    }\r\n\r\n    private async checkAuditAllowed() {\r\n\r\n        this.growlMessage = [];\r\n        try {\r\n            this.spinnerService.start();\r\n            let webresp = new AtParWebApiResponse<string>();\r\n            await this.commonService.getAuditAllowed(this.appID, this.menuCode)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    webresp = res.json() as AtParWebApiResponse<string>\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n\r\n                        case StatusType.Success: {\r\n                            this.auditSatus = webresp.Data;\r\n                            break\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n    }\r\n\r\n    public saveOrUpdateDepartment() {\r\n        this.showAddButton = false;\r\n        this.table = false;\r\n        this.growlMessage = [];\r\n\r\n        //this.newItem.STATUS = \"A\";\r\n\r\n        if (this.Title == \"Save\") {\r\n            this.mode = ModeEnum[ModeEnum.Add].toString();\r\n        }\r\n        else {\r\n            this.mode = ModeEnum[ModeEnum.Edit].toString();\r\n        }\r\n\r\n        try {\r\n            let webresp = new AtParWebApiResponse<TKIT_DEPT>();\r\n            this.spinnerService.start();\r\n\r\n            if (this.blnShowOrgGroupLabel == true) {\r\n                this.orgGroupIDForDBUpdate = this.orgGrpId.split(\"-\")[0];\r\n            }\r\n            else {\r\n                this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n                if (this.selectedOrgGroupId == \"\" || this.selectedOrgGroupId == \"Select One\" || this.selectedOrgGroupId == undefined) {\r\n                    this.table = false;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Org Group ID\" });\r\n                    this.spinnerService.stop();\r\n                    return false;\r\n                }\r\n            }\r\n            this.mngDeptService.saveDepartment(this.newItem.DEPT_ID, this.newItem.DESCRIPTION, this.newItem.STATUS, this.mode, this.orgGroupIDForDBUpdate, this._deviceTokenEntry[TokenEntry_Enum.UserID])\r\n                .catch(this.httpService.handleError).then((resp: Response) => {\r\n                    webresp = resp.json() as AtParWebApiResponse<TKIT_DEPT>\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.growlMessage = [];\r\n                            if (this.mode == ModeEnum[ModeEnum.Add].toString()) {\r\n\r\n                                let msg = AtParConstants.Created_Msg.replace(\"1%\", 'Department').replace(\"2%\", this.newItem.DEPT_ID);\r\n                                this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n\r\n                                this.loading = true;\r\n                                this.newItem = new TKIT_DEPT();\r\n                                this.departmentIDStatus = null;\r\n                                this.descStatus = null;\r\n                                this.ddlOrgIDStatus = null;\r\n                                this.selectedOrgGroupId = null;\r\n                                if (this.blnShowOrgGroupDD) {\r\n                                    (<HTMLInputElement>document.getElementById('txtddllstOrgGroups')).focus();\r\n                                }\r\n                                else {\r\n                                    (<HTMLInputElement>document.getElementById('txtDeptID')).focus();\r\n                                }\r\n\r\n\r\n                            }\r\n                            else {\r\n                                let msg = AtParConstants.Updated_Msg.replace(\"1%\", 'Department').replace(\"2%\", this.newItem.DEPT_ID);\r\n                                this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n                                (<HTMLInputElement>document.getElementById('txtDesc')).focus();\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n    }\r\n\r\n    ddlOrgIDChanged() {\r\n        if (this.newItem.DEPT_ID == undefined || this.newItem.DEPT_ID == null) {\r\n            this.newItem.DEPT_ID = \"\";\r\n        }\r\n        if (this.newItem.DESCRIPTION == undefined || this.newItem.DESCRIPTION == null) {\r\n            this.newItem.DESCRIPTION = \"\";\r\n        }\r\n        if (this.blnShowOrgGroupDD) {\r\n            if (this.selectedOrgGroupId == \"Select One\" || this.selectedOrgGroupId == undefined || this.selectedOrgGroupId == null || this.selectedOrgGroupId == \"\") {\r\n                this.ddlOrgIDStatus = 1;\r\n            }\r\n            else {\r\n                this.ddlOrgIDStatus = 0;\r\n            }\r\n        }\r\n        if (this.Title == \"Update\" || this.blnShowOrgGroupLabel) {\r\n            this.ddlOrgIDStatus = 0;\r\n        }\r\n        if (this.departmentIDStatus == 0 && this.descStatus == 0 && this.ddlOrgIDStatus == 0 && this.newItem.DEPT_ID != \"\" && this.newItem.DESCRIPTION != \"\") {\r\n            this.loading = false;\r\n        }\r\n        else {\r\n            this.loading = true;\r\n        }\r\n\r\n    }\r\n\r\n    async dataFilter(evtdata, filed, filterMatchMode) {\r\n        let filterData;\r\n        this.growlMessage = [];\r\n\r\n        this.lstDepts.length = 0;\r\n\r\n        if (this.statusType.toString() == \"true\") {\r\n            filterData = this.mainlstGridData.filter(x => x.checkvalue == true)\r\n        } else if (this.statusType.toString() == \"false\") {\r\n            filterData = this.mainlstGridData.filter(x => x.checkvalue == false)\r\n        } else {\r\n            filterData = this.mainlstGridData\r\n        }\r\n        if (filterData != null) {\r\n            for (let x = 0; x < filterData.length; x++) {\r\n                let lstManageDepartment = new TKIT_DEPT();\r\n                lstManageDepartment.ORG_GROUP_ID = filterData[x].ORG_GROUP_ID;\r\n                lstManageDepartment.DEPT_ID = filterData[x].DEPT_ID;\r\n                lstManageDepartment.DESCRIPTION = filterData[x].DESCRIPTION;\r\n\r\n                lstManageDepartment.UPDATE_DATE = filterData[x].UPDATE_DATE;\r\n                lstManageDepartment.UPDATE_USER_ID = filterData[x].UPDATE_USER_ID;\r\n                lstManageDepartment.STATUS = filterData[x].STATUS;\r\n                lstManageDepartment.checkvalue = filterData[x].checkvalue;\r\n\r\n                this.lstDepts.push(lstManageDepartment);\r\n            }\r\n\r\n        }\r\n    }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-manage-departments.component.ts","\r\nimport { Component } from '@angular/core';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { Employee } from '../components/datatable/employee';\r\nimport { PAR_MNGT_VENDOR } from \"../../app/Entities/PAR_MNGT_VENDOR\";\r\nimport { Http, Response, Jsonp, RequestOptions, Headers, } from '@angular/http';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { MT_ATPAR_ORG_GROUP_BUNITS } from '../../app/Entities/MT_ATPAR_ORG_GROUP_BUNITS';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { TokenEntry_Enum, ClientType, BusinessType } from '../Shared/AtParEnums';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { SelectItem, Message } from './../components/common/api';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\n\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\n\r\nimport { TKIT_ITEM_MASTER } from '../../app/Entities/TKIT_ITEM_MASTER';\r\nimport { TKIT_ITEM_TYPE } from '../../app/Entities/TKIT_ITEM_TYPE';\r\n\r\nimport { VM_TKIT_ITEM_MASTER } from '../../app/Entities/VM_TKIT_ITEM_MASTER';\r\n\r\nimport { VM_TKIT_ITEM_DETAILS } from '../../app/Entities/VM_TKIT_ITEM_DETAILS';\r\n\r\nimport { VM_TKIT_ITEM_DEPT } from '../../app/Entities/VM_TKIT_ITEM_DEPT';\r\nimport { TKIT_ITEM_INVENTORY } from '../../app/Entities/TKIT_ITEM_INVENTORY';\r\n\r\nimport { ManageEquipmentItemsService } from './tkit-manage-equipment-items.service';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { List, Enumerable } from 'linqts';\r\nimport { asEnumerable } from 'linq-es5';\r\nimport { StatusType, EnumApps, EventType } from '../Shared/AtParEnums';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\n@Component({\r\n    template: require('./tkit-manage-equipment-items.component.html'),\r\n\r\n    providers: [HttpService, AtParCommonService, AtParConstants, ManageEquipmentItemsService, datatableservice]\r\n})\r\n\r\nexport class ManageEquipmentItemsComponent {\r\n \r\n    page: boolean = true;\r\n    showLotSerialFields: boolean = false;\r\n    showCommentsGrid: boolean = false;\r\n    \r\n    date1: Date;\r\n    date2: Date;\r\n    minDateValue1: Date = new Date();\r\n    minDateValue2: Date;\r\n\r\n    showQuantityLabel: boolean = false;\r\n    pazeSize: number;\r\n    deviceTokenEntry: string[] = [];\r\n\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n    vendorData: PAR_MNGT_VENDOR[];\r\n    tkitItemMasterDetails: TKIT_ITEM_MASTER[];\r\n    lstFilteredItems: any = [];\r\n    tkitItmEquipmentType: TKIT_ITEM_TYPE[];\r\n    tkitEquipmentItemDetails: any[];\r\n    tkitEquipmentItemDetailsList: VM_TKIT_ITEM_DETAILS[];\r\n    tkitEqItmLotSerail: any = [];\r\n    tkitEqItmLotSerailList: TKIT_ITEM_INVENTORY[];\r\n    tkitItemDetials: VM_TKIT_ITEM_MASTER[];\r\n    lstgridfilterData: VM_TKIT_ITEM_DETAILS[];\r\n    tkitDeptDetails: VM_TKIT_ITEM_DEPT[];\r\n\r\n    tkitItemTypeDetials: any = [];\r\n    typeIndicator: string;\r\n\r\n    orgGrpID: string = \"\";\r\n    orgGrpIDData: string = \"\";\r\n    selectedOrgGroupId: string;\r\n    selectedEquipmentType: string;\r\n    selectedItemAsset: string;\r\n    selectedItemID: string;\r\n\r\n    selectedDeptIDs: string[] = [];\r\n    selectedOwnerType: string;\r\n    lstOrgGroups: SelectItem[];\r\n\r\n    lstEquipmentTypes: SelectItem[];\r\n    lstItemDetails: SelectItem[];\r\n    lstDeptDetails: SelectItem[];\r\n    lstOwnerType: SelectItem[];\r\n    lstOwnerDetails: SelectItem[];\r\n    lstVendorDetails: SelectItem[];\r\n\r\n    onitemidvaluechanged: boolean = false;\r\n    growlMessage: Message[] = [];\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    blnShowOrgGroupDD: boolean = false;\r\n\r\n    lstItems: any = [];\r\n    showgrid: boolean = false;\r\n    startIndex: number;\r\n    EndIndex: number;\r\n    blnsortbycolumn: boolean = true;\r\n    custom: string = \"custom\";\r\n    selectedEqType: string;\r\n    dataCheckedSorting: VM_TKIT_ITEM_DETAILS[] = [];\r\n    dataUncheckedSorting: Array<VM_TKIT_ITEM_DETAILS>;\r\n    sortedcheckedrec: VM_TKIT_ITEM_DETAILS[];\r\n    sorteduncheckedrec: VM_TKIT_ITEM_DETAILS[];\r\n\r\n    showitemdetailsFields: boolean = false;\r\n    showlotserialsgrid: boolean = false;\r\n\r\n    newItem = new VM_TKIT_ITEM_DETAILS();\r\n    newItemLotSerial = new TKIT_ITEM_INVENTORY();\r\n\r\n\r\n\r\n    validationITEM_ID: number;\r\n    validationITEM_DESCR: number;\r\n    validationMANUFACTURER: number;\r\n    validationVENDOR: number;\r\n    validationDESTRUCTION_DATE: number;\r\n    validationDESCRIPTION: number;\r\n    validationSTORAGE_LOCATION: number;\r\n    validationITEM_QTY: number;\r\n\r\n    validationOWNER: number;\r\n    validationDEPT_ID: number;\r\n    validationSERIAL_NO: number;\r\n\r\n    validationLOT_NO: number;\r\n    validationUSER_FIELD_1: number;\r\n    validationASSET_ID: number;\r\n\r\n\r\n    showImageColumn: boolean = true;\r\n    showMfrColumn: boolean = true;\r\n    showVendorColumn: boolean = true;\r\n    showDescriptionColumn: boolean = true;\r\n    showQuantityColumn: boolean = false;\r\n    showDestructionColumn: boolean = true;\r\n    showDepartmentsColumn: boolean = true;\r\n\r\n    showAddSerailbutton: boolean = false;\r\n\r\n\r\n\r\n    selectedDeptDetails: string[] = [];\r\n\r\n    userSelectedFile: string = '';\r\n    disableButton: boolean = true;\r\n    disablelotserailButton: boolean = true;\r\n\r\n    addnewitembutton: boolean = false;\r\n    searchFlag: boolean = false;\r\n    gobutton: boolean = false;\r\n\r\n    editItemDetailsFlag: boolean = false;\r\n    addItemDetailsFlag: boolean = false;\r\n    editLotSerialFlag: boolean = false;\r\n    addLotSerailFlag: boolean = false;\r\n    updateLotSerialFlag: boolean = false;\r\n\r\n\r\n    selectedLotSerialRow: TKIT_ITEM_INVENTORY;\r\n    showImage: boolean = false\r\n\r\n    additemflag: boolean = false;\r\n    edititemflag: boolean = false;\r\n\r\n    addserailflag: boolean = false;\r\n    editserailflag: boolean = false;\r\n\r\n    imgBasePath: string = '';\r\n    enteredDescription: string = '';\r\n    assetfieldpart2: boolean = false;\r\n\r\n    selectedVendor: string;\r\n    selectedOwner: string;\r\n    breadCrumbMenu: Menus;\r\n\r\n    constructor(public dataservice: datatableservice,\r\n        private atParCommonService: AtParCommonService,\r\n        private spinnerService: SpinnerService,\r\n        private atParConstant: AtParConstants,\r\n        private manageEquipmentItemsService: ManageEquipmentItemsService,\r\n        private httpService: HttpService,\r\n        private http: Http\r\n    ) {\r\n        this.breadCrumbMenu = new Menus();\r\n    }\r\n\r\n\r\n\r\n\r\n    async  ngOnInit() {\r\n        this.spinnerService.start();\r\n        this.growlMessage = [];\r\n        this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n        this.pazeSize = +this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n        this.newItem = new VM_TKIT_ITEM_DETAILS();\r\n\r\n        this.InitializationProperties();\r\n\r\n        this.dataCheckedSorting = new Array<VM_TKIT_ITEM_DETAILS>();\r\n        this.dataUncheckedSorting = new Array<VM_TKIT_ITEM_DETAILS>();\r\n        //for org group data\r\n        await this.bindUserOrgGroups();\r\n        await this.GetSearchItems();\r\n        await this.PopulateTypesDropDown();\r\n        await this.PopulateItemsDropDown();\r\n\r\n        var nowDate = new Date();\r\n        this.date2 = new Date();\r\n\r\n        this.imgBasePath = window.location.protocol + \"//\" + window.location.hostname + '/AtPar/Web/Uploaded/';\r\n    }\r\n\r\n\r\n    InitializationProperties() {\r\n        this.newItem = new VM_TKIT_ITEM_DETAILS();\r\n        this.newItem.ORG_GROUP_ID = '';\r\n        this.newItem.ITEM_ID = '';\r\n        this.newItem.DESCRIPTION = '';\r\n        this.newItem.IMAGE = '';\r\n        this.newItem.CHK_VALUE = +'';\r\n        this.newItem.COMMENTS = '';\r\n        this.newItem.CREATEUSERNAME = '';\r\n        this.newItem.CREATE_DATE = new Date();\r\n        this.newItem.DEPT_ID = '';\r\n        this.newItem.OWNER = '';\r\n        this.newItem.ITEM_INACTIVATED = false;\r\n        this.newItem.VENDOR = '';\r\n        this.newItem.MANUFACTURER = '';\r\n        this.newItem.ITEM_DESCR = '';\r\n        this.newItem.DESTRUCTION_DATE = new Date();\r\n        this.newItem.ITEM_QTY = +'';\r\n        this.newItem.ITEM_TYPE = '';\r\n        this.newItem.OWNER_TYPE = '';\r\n        this.newItem.STORAGE_LOCATION = '';\r\n        this.newItem.UPDATEUSERNAME = '';\r\n        this.newItem.UPDATE_DATE = new Date();\r\n        this.newItem.Disable = false;\r\n\r\n\r\n        this.newItemLotSerial = new TKIT_ITEM_INVENTORY();\r\n        this.newItemLotSerial.AVAILABILITY = false;\r\n        this.newItemLotSerial.CHECKIN_DATE = new Date();\r\n        this.newItemLotSerial.ITEM_ID = '';\r\n        this.newItemLotSerial.ITEM_QTY = +'';\r\n        this.newItemLotSerial.ITEM_TYPE = '';\r\n        this.newItemLotSerial.LOT_NO = '';\r\n        this.newItemLotSerial.ORG_GROUP_ID = '';\r\n        this.newItemLotSerial.OWNER = '';\r\n        this.newItemLotSerial.OWNER_TYPE = '';\r\n        this.newItemLotSerial.ROW_INDEX = +'';\r\n        this.newItemLotSerial.SERIAL_NO = '';\r\n        this.newItemLotSerial.SERVICE_DT_TIME = new Date();\r\n        this.newItemLotSerial.STATUS = false;\r\n        this.newItemLotSerial.STORAGE_LOCATION = '';\r\n        this.newItemLotSerial.UPDATE_DATE = new Date();\r\n        this.newItemLotSerial.USER_FIELD_1 = '';\r\n        this.newItemLotSerial.USER_FIELD_2 = '';\r\n        this.newItemLotSerial.ASSET_ID = '';\r\n        // this.newItemLotSerial.\r\n\r\n        this.populateOwnerTypeDD();\r\n\r\n    }\r\n\r\n    async  bindUserOrgGroups() {\r\n\r\n\r\n        try {\r\n\r\n            this.spinnerService.start();\r\n            await this.atParCommonService.getUserOrgGroups(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n\r\n                            if (this.orgGroupData.length == 1) {\r\n\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.orgGrpIDData = this.orgGroupData[0].ORG_GROUP_ID + \" - \" + this.orgGroupData[0].ORG_GROUP_NAME;\r\n                                this.orgGrpID = this.orgGroupData[0].ORG_GROUP_ID;\r\n                                this.selectedOrgGroupId = this.orgGroupData[0].ORG_GROUP_ID;\r\n\r\n                                this.spinnerService.stop();\r\n                                this.populateData();\r\n                                break;\r\n\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.blnShowOrgGroupDD = true;\r\n                                this.blnShowOrgGroupLabel = false;\r\n\r\n                                this.lstOrgGroups = [];\r\n                                this.lstOrgGroups.push({ label: \"Select OrgGrpID\", value: \"Select OrgGrpID\" })\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID !== \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + \" - \" + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n                                this.spinnerService.stop();\r\n                                break;\r\n\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n\r\n    }\r\n\r\n    async ddlOrgGrpIdChanged() {\r\n\r\n        if (this.selectedOrgGroupId == null || this.selectedOrgGroupId == undefined || this.selectedOrgGroupId == \"Select OrgGrpID\") {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid OrgGrpId\" });\r\n            return;\r\n        }\r\n        else {\r\n            // this.populateData();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    async GetSearchItems() {\r\n\r\n        try {\r\n\r\n            this.spinnerService.start();\r\n            await this.manageEquipmentItemsService.GetMasterItems().\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstFilteredItems = data.DataList;\r\n                            this.tkitEquipmentItemDetails = [];\r\n                            this.tkitEquipmentItemDetails = data.DataList;\r\n\r\n                            if (this.searchFlag) {\r\n                                this.DisplayItemDetailsGrid();\r\n                            }\r\n\r\n                            this.spinnerService.stop();\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n\r\n    }\r\n\r\n    async PopulateTypesDropDown() {\r\n        //equipment type \r\n\r\n\r\n        try {\r\n\r\n            var itemindicator;// GetEqTypes\r\n\r\n            this.spinnerService.start();\r\n            await this.manageEquipmentItemsService.GetEquipmentTypes(\"\", this.orgGrpID).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.tkitItmEquipmentType = data.DataList;\r\n\r\n                            if (this.tkitItmEquipmentType != null && this.tkitItmEquipmentType != undefined) {\r\n\r\n                                this.lstEquipmentTypes = [];\r\n                                this.lstEquipmentTypes.push({ label: \"Select Equipment\", value: \"Select Equipment\" })\r\n\r\n                                for (let i = 0; i < data.DataList.length; i++) {\r\n                                    this.lstEquipmentTypes.push({\r\n                                        label: data.DataList[i].ITEM_TYPE_DESCR + \" \" + \"(\" + data.DataList[i].ITEM_TYPE + \")\",\r\n\r\n                                        value: data.DataList[i].ITEM_TYPE\r\n                                    })\r\n                                }\r\n\r\n                                // this.PopulateItemsDropDown();\r\n                                this.spinnerService.stop();\r\n\r\n                                break;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n\r\n    }\r\n\r\n    async  PopulateItemsDropDown() {\r\n        //items dropdown\r\n        // GetItemsForSelectedType\r\n\r\n\r\n        this.lstItemDetails = [];\r\n        this.lstItemDetails.push({ label: \"Select Item\", value: \"Select Item\" })\r\n\r\n        if (this.selectedEquipmentType != null && this.selectedEquipmentType != undefined && this.selectedEquipmentType != '' && this.selectedEquipmentType != 'Select Equipment') {\r\n\r\n\r\n            try {\r\n\r\n                this.spinnerService.start();\r\n                await this.manageEquipmentItemsService.GetItemsForSelectedEqType(this.selectedEquipmentType, \"\").\r\n                    catch(this.httpService.handleError).then((res: Response) => {\r\n                        let data = res.json();\r\n                        this.growlMessage = [];\r\n\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.tkitItemDetials = [];\r\n                                this.tkitItemDetials = data.DataVariable.m_Item2;\r\n                                this.selectedEqType = '';\r\n                                this.selectedEqType = data.DataVariable.m_Item1;\r\n\r\n                                if (this.tkitItemDetials != null && this.tkitItemDetials != undefined) {\r\n\r\n                                    for (let i = 0; i < data.DataVariable.m_Item2.length; i++) {\r\n                                        this.lstItemDetails.push({\r\n\r\n                                            label: data.DataVariable.m_Item2[i].DESCRIPTION,\r\n\r\n                                            value: data.DataVariable.m_Item2[i].ITEM_ID\r\n                                        })\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                    this.spinnerService.stop();\r\n\r\n\r\n                                    break;\r\n                                }\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n\r\n\r\n            } catch (ex) {\r\n                this.clientErrorMsg(ex);\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    async GetEquipmentItemDetails() {\r\n\r\n        this.spinnerService.start();\r\n        try {\r\n\r\n\r\n            if (this.selectedItemID == null || this.selectedItemID == undefined || this.selectedItemID == '' || this.selectedItemID == 'Select Item') {\r\n                this.selectedItemID = '';\r\n            }\r\n\r\n            await this.PopulateDepartments();\r\n\r\n            if (this.selectedEqType == \"E\")\r\n            {\r\n                await this.GetVendorDetials();\r\n\r\n            }\r\n\r\n            //  this.spinnerService.start();\r\n\r\n            await this.manageEquipmentItemsService.GetTypeItems(this.selectedEquipmentType, this.selectedItemID).then((res: Response) => {\r\n                let data = res.json();\r\n                this.growlMessage = [];\r\n\r\n                switch (data.StatType) {\r\n                    case StatusType.Success: {\r\n                        this.tkitEquipmentItemDetails = [];\r\n                        this.tkitEqItmLotSerail = [];\r\n                        this.typeIndicator = data.DataVariable.m_Item1;\r\n                        this.tkitEquipmentItemDetails = data.DataVariable.m_Item2;\r\n                        this.tkitEqItmLotSerail = data.DataVariable.m_Item3;\r\n\r\n\r\n\r\n                        if (this.editItemDetailsFlag == true) {\r\n                            // this.bindtkitEquipmentItemDetails();\r\n                            this.selectedEqType = data.DataVariable.m_Item1;\r\n\r\n                            if (data.DataVariable.m_Item1 == \"E\") {\r\n                                this.showlotserialsgrid = true;\r\n                                this.showAddSerailbutton = true;\r\n                            }\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n\r\n                        if (this.addnewitembutton == false) {\r\n                            // this.bindtkitEquipmentItemDetails();\r\n                        }\r\n\r\n\r\n                        this.bindtkitEquipmentItemDetails();\r\n                        this.spinnerService.stop();\r\n\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Custom: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n\r\n    }\r\n\r\n    async ddlEquipmentTypeChanged() {\r\n\r\n        this.enteredDescription = '';\r\n        this.showLotSerialFields = false;\r\n        this.showgrid = false;\r\n        this.showitemdetailsFields = false;\r\n        this.showlotserialsgrid = false;\r\n\r\n        this.selectedItemID = \"\";\r\n        this.lstItemDetails = [];\r\n        this.showCommentsGrid = false;\r\n        this.selectedItemAsset = '';\r\n        this.tkitEquipmentItemDetails = [];\r\n        //clear the items drop down\r\n        this.tkitItemDetials = [];\r\n        this.selectedEqType = \"\";\r\n\r\n\r\n        this.PopulateItemsDropDown();\r\n\r\n    }\r\n\r\n    async ddlItemIDsChanged() {\r\n\r\n    }\r\n\r\n    populateData() {\r\n        this.GetSearchItems();\r\n        // this.showgrid = true;\r\n    }\r\n\r\n    async fillItemsAuto(event) {\r\n\r\n        this.lstFilteredItems = [];\r\n\r\n\r\n        let query = event.query;\r\n        if (this.blnShowOrgGroupLabel == true) {\r\n            this.selectedOrgGroupId = this.orgGrpID;\r\n\r\n        }\r\n        else {\r\n            this.selectedOrgGroupId = this.selectedOrgGroupId;\r\n        }\r\n\r\n        if (this.selectedOrgGroupId == undefined || this.selectedOrgGroupId == \"Select OrgGrpID\") {\r\n\r\n            this.growlMessage = [];\r\n\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select OrgGroupID\" });\r\n            return;\r\n        }\r\n        try {\r\n            await this.manageEquipmentItemsService.GetMasterItems().\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    this.spinnerService.stop();\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstItems = data.DataList;\r\n                            this.lstFilteredItems = this.filterBusinessUnits(query, this.lstItems);\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            if (data.StatusCode != AtparStatusCodes.ATPAR_E_ASSIGN_ORGBUS) {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    DisplayItemDetailsGrid() {\r\n        //need to dispaly the data of search matched records in the grid.\r\n\r\n        if (this.selectedItemAsset != null && this.selectedItemAsset != undefined && this.selectedItemAsset != \"\") {\r\n\r\n\r\n            this.tkitEquipmentItemDetailsList = [];\r\n\r\n                for (let k = 0; k < this.tkitEquipmentItemDetails.length; k++) {\r\n\r\n\r\n                    this.tkitEquipmentItemDetailsList.push(this.tkitEquipmentItemDetails[k]);\r\n                }\r\n           \r\n\r\n            if (this.tkitEquipmentItemDetailsList.length > 0) {\r\n                this.showCommentsGrid = true;\r\n            }\r\n            else {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"No Data Found\" });\r\n                return;\r\n            }\r\n\r\n\r\n        }\r\n        else {\r\n            this.showgrid = false;\r\n        }\r\n    }\r\n\r\n    filterBusinessUnits(query, businessunits: any[]): any[] {\r\n\r\n        let filtered : any[] = [];\r\n\r\n        if (query == \"%\") {\r\n            for (let i = 0; i < businessunits.length; i++) {\r\n                let Bunitvalue = businessunits[i];\r\n\r\n                filtered.push(Bunitvalue.ITEM_ID + \" \" + \"(\" + Bunitvalue.ITEM_DESCR + \")\");\r\n            }\r\n\r\n        } else {\r\n            if (query.length >= 1) {\r\n                for (let i = 0; i < businessunits.length; i++) {\r\n                    let Bunitvalue = businessunits[i];\r\n                    Bunitvalue = Bunitvalue.ITEM_ID + \" \" + \"(\" + Bunitvalue.ITEM_DESCR + \")\";\r\n                    if (Bunitvalue.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n                        filtered.push(Bunitvalue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return filtered;\r\n    }\r\n\r\n    async  PopulateDepartments() {\r\n        try {\r\n\r\n            this.lstDeptDetails = [];\r\n            this.spinnerService.start();\r\n            await this.manageEquipmentItemsService.GetItemDepartments(this.selectedItemID, this.selectedOrgGroupId).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.tkitDeptDetails = [];\r\n                            this.tkitDeptDetails = data.DataList;\r\n\r\n                            if (this.tkitDeptDetails != null && this.tkitDeptDetails != undefined) {\r\n\r\n                                this.selectedDeptIDs = [];\r\n\r\n                                for (let i = 0; i < data.DataList.length; i++) {\r\n\r\n\r\n                                    this.lstDeptDetails.push({\r\n\r\n                                        label: data.DataList[i].DESCRIPTION + \" - \" + data.DataList[i].DEPT_ID,\r\n\r\n                                        value: data.DataList[i].DEPT_ID\r\n\r\n\r\n                                    })\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                            this.populateOwnerDD();\r\n\r\n                            this.spinnerService.stop();\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    ddlDeptIDChanged() {\r\n\r\n\r\n        this.newItem.DEPT_ID = '';\r\n\r\n        let id: string = '';\r\n        if (this.selectedDeptIDs != null && this.selectedDeptIDs != undefined && this.selectedDeptIDs != []) {\r\n            if (this.selectedDeptIDs.length > 0) {\r\n                id = this.selectedDeptIDs.join();\r\n            }\r\n        }\r\n\r\n        else {\r\n            this.selectedDeptIDs = [];\r\n            id = '';\r\n        }\r\n    }\r\n\r\n    btnGo_Click() {\r\n\r\n\r\n        this.selectedDeptDetails = [];\r\n        this.selectedDeptIDs = [];\r\n\r\n        this.selectedItemAsset = '';\r\n        this.enteredDescription = '';\r\n\r\n        if (this.selectedOrgGroupId == null || this.selectedOrgGroupId == undefined || this.selectedOrgGroupId == '' || this.selectedOrgGroupId == \"Select OrgGrpID\") {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select OrgGroupID\" });\r\n            return;\r\n        }\r\n\r\n        this.addnewitembutton = false;\r\n        this.gobutton = true;\r\n        this.growlMessage = [];\r\n        if (this.selectedEqType == null || this.selectedEqType == undefined || this.selectedEqType == '') {\r\n            this.selectedItemAsset = \"\";\r\n            this.showgrid = false;\r\n\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid Equipment\" });\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.selectedItemID == null || this.selectedItemID == undefined || this.selectedItemID == '' || this.selectedItemID == 'Select Item') {\r\n            this.selectedItemID = '';\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid Item ID\" });\r\n            return;\r\n\r\n        }\r\n\r\n        this.GetEquipmentItemDetails();\r\n\r\n    }\r\n\r\n    bindtkitEquipmentItemDetails() {\r\n\r\n        this.selectedDeptDetails = [];\r\n        this.selectedDeptIDs = [];\r\n        this.InitializationProperties();\r\n        this.tkitEquipmentItemDetailsList = [];\r\n        this.dataCheckedSorting = [];\r\n        this.dataUncheckedSorting = [];\r\n        this.tkitEqItmLotSerailList = [];\r\n\r\n        for (let k = 0; k < this.tkitEquipmentItemDetails.length; k++) {\r\n\r\n\r\n            this.tkitEquipmentItemDetailsList.push(this.tkitEquipmentItemDetails[k]);\r\n        }\r\n\r\n        if (this.tkitEqItmLotSerail != null && this.tkitEqItmLotSerail != undefined && this.tkitEqItmLotSerail.length != 0) {\r\n            for (let j = 0; j < this.tkitEqItmLotSerail.length; j++) {\r\n\r\n                this.tkitEqItmLotSerail[j].ORG_GROUP_ID = this.selectedOrgGroupId;\r\n                this.newItemLotSerial.ITEM_TYPE = this.selectedEquipmentType;\r\n                this.tkitEqItmLotSerailList.push(this.tkitEqItmLotSerail[j]);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i <= this.tkitEquipmentItemDetailsList.length - 1; i++) {\r\n\r\n            if (this.tkitEquipmentItemDetailsList[i].IMAGE != null && this.tkitEquipmentItemDetailsList[i].IMAGE != undefined && this.tkitEquipmentItemDetailsList[i].IMAGE != '') {\r\n                this.tkitEquipmentItemDetailsList[i].showImage = true;\r\n            }\r\n            this.tkitEquipmentItemDetails[i].IMAGE_PATH = this.imgBasePath + this.tkitEquipmentItemDetails[i].IMAGE;\r\n            this.userSelectedFile = this.tkitEquipmentItemDetails[i].IMAGE;\r\n\r\n            if (this.tkitEquipmentItemDetailsList[i].CHK_VALUE == 1) {\r\n                this.dataCheckedSorting.push(this.tkitEquipmentItemDetailsList[i]);\r\n            }\r\n            else {\r\n                this.dataUncheckedSorting.push(this.tkitEquipmentItemDetailsList[i]);\r\n            }\r\n\r\n\r\n            if (this.selectedEqType == \"B\") {\r\n                this.showImageColumn = false;\r\n                this.showMfrColumn = false;\r\n                this.showQuantityColumn = false;\r\n                this.showQuantityLabel= false;\r\n                this.showVendorColumn = false;\r\n                this.showDepartmentsColumn = true;\r\n                this.showDestructionColumn = true;\r\n                this.showAddSerailbutton = false;\r\n                this.showlotserialsgrid = false;\r\n            }\r\n            else if (this.selectedEqType == \"E\") {\r\n\r\n                if (this.tkitEqItmLotSerailList.length > 0) {\r\n                    this.showlotserialsgrid = true; //for item lot/serial details\r\n                }\r\n                this.showAddSerailbutton = true; //for displaying the add serials button\r\n                this.showImageColumn = true;\r\n                this.showMfrColumn = true;\r\n               this. showQuantityLabel = true;\r\n\r\n                this.showVendorColumn = true;\r\n                this.showQuantityColumn = false;\r\n                this.showDestructionColumn = false;\r\n                this.showDepartmentsColumn = true;\r\n            }\r\n            else if (this.selectedEqType == \"F\") {\r\n\r\n                this.showImageColumn = true;\r\n                this.showMfrColumn = true;\r\n                this.showQuantityLabel = false;\r\n                this.showAddSerailbutton = false;\r\n                this.showVendorColumn = true;\r\n                this.showQuantityColumn = true;\r\n                this.showDestructionColumn = true;\r\n                this.showlotserialsgrid = false;\r\n                this.showDepartmentsColumn = false;\r\n\r\n            }\r\n\r\n            // this.show\r\n        }\r\n\r\n        this.showitemdetailsFields = true;\r\n\r\n        this.editItemDetailsFlag = true;\r\n        this.newItem.DEPT_ID = '';\r\n        this.newItem = this.tkitEquipmentItemDetailsList[0];\r\n        this.newItem.Disable = true;\r\n\r\n        if (this.newItem.DEPT_ID != null && this.newItem.DEPT_ID != undefined && this.newItem.DEPT_ID != '')\r\n        var deptiddata = this.newItem.DEPT_ID.trim();\r\n\r\n        if (this.newItem.IMAGE != null && this.newItem.IMAGE != undefined && this.newItem.IMAGE != '')\r\n            this.userSelectedFile = this.newItem.IMAGE;\r\n\r\n        if (this.newItem.DEPT_ID != null && this.newItem.DEPT_ID != undefined && this.newItem.DEPT_ID != '') {\r\n\r\n            if (deptiddata.indexOf(',') > 0) {\r\n                for (let x = 0; x < deptiddata.split(',').length; x++) {\r\n                    this.selectedDeptDetails.push(deptiddata.split(',')[x].trim());\r\n                }\r\n            } else {\r\n                this.selectedDeptDetails.push(this.newItem.DEPT_ID);\r\n            }\r\n\r\n\r\n\r\n        }\r\n   \r\n        this.selectedDeptIDs = this.selectedDeptDetails;\r\n\r\n        this.selectedOwnerType = this.newItem.OWNER_TYPE;\r\n        this.selectedVendor = this.newItem.VENDOR;\r\n        this.selectedOwner = this.newItem.OWNER;\r\n        this.disableButton = false;\r\n        this.spinnerService.stop();\r\n        this.validationITEM_ID = 0;\r\n        this.validationITEM_QTY = 0;\r\n        this.validationDESCRIPTION = 0;\r\n        this.validationSTORAGE_LOCATION = 0;\r\n        this.edititemflag = true;\r\n        this.additemflag = false;\r\n        this.page = false;\r\n    }\r\n\r\n    selectedLotSerialAvailability(values: any, event) {\r\n        try {\r\n            if (event == true) {\r\n                values.STATUS = true;\r\n            }\r\n            else {\r\n                values.STATUS = false;\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    ddlOwnerChanged() {\r\n        this.newItem.OWNER = this.selectedOwner;\r\n    }\r\n\r\n    checkAll() {\r\n\r\n        try {\r\n\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n            if (this.lstgridfilterData != null && this.lstgridfilterData != undefined && this.lstgridfilterData.length > 0) {\r\n                if (this.EndIndex > this.lstgridfilterData.length) {\r\n                    this.EndIndex = this.lstgridfilterData.length;\r\n                }\r\n\r\n                for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                    this.lstgridfilterData[i].CHK_VALUE = 1;\r\n                }\r\n            }\r\n            else {\r\n                if (this.EndIndex > this.tkitEquipmentItemDetailsList.length) {\r\n                    this.EndIndex = this.tkitEquipmentItemDetailsList.length;\r\n                }\r\n\r\n                for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                    this.tkitEquipmentItemDetailsList[i].CHK_VALUE = 1;\r\n\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    filterdata(event) {\r\n        try {\r\n            this.lstgridfilterData = [];\r\n            this.lstgridfilterData = new Array<VM_TKIT_ITEM_DETAILS>();\r\n            this.lstgridfilterData = event;\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    unCheckAll() {\r\n        try {\r\n\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n            if (this.lstgridfilterData != null && this.lstgridfilterData != undefined && this.lstgridfilterData.length > 0) {\r\n                if (this.EndIndex > this.lstgridfilterData.length) {\r\n                    this.EndIndex = this.lstgridfilterData.length;\r\n                }\r\n\r\n                for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                    //  this.lstgridfilterData[i].checkvalue = false;\r\n                    this.lstgridfilterData[i].CHK_VALUE = 0;\r\n\r\n                }\r\n            }\r\n            else {\r\n                if (this.EndIndex > this.tkitEquipmentItemDetailsList.length) {\r\n                    this.EndIndex = this.tkitEquipmentItemDetailsList.length;\r\n                }\r\n\r\n                for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                    //  this.tkitEquipmentItemDetailsList[i].checkvalue = false;\r\n                    this.tkitEquipmentItemDetailsList[i].CHK_VALUE = 0;\r\n\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    selectedRow(values: any, event) {\r\n        try {\r\n            if (event == true) {\r\n                values.CHK_VALUE = 1;\r\n            }\r\n            else {\r\n                values.CHK_VALUE = 0;\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    customSort(event) {\r\n        try {\r\n            var element = event;\r\n            this.tkitEquipmentItemDetailsList = [];\r\n            this.blnsortbycolumn = !this.blnsortbycolumn;\r\n            this.sortedcheckedrec = [];\r\n            this.sorteduncheckedrec = [];\r\n\r\n            this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] < b[element.field])\r\n                    return -1;\r\n                if (a[element.field] > b[element.field])\r\n                    return 1;\r\n                return 0;\r\n            });\r\n\r\n            this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] < b[element.field])\r\n                    return -1;\r\n                if (a[element.field] > b[element.field])\r\n                    return 1;\r\n                return 0;\r\n            });\r\n\r\n            if (this.blnsortbycolumn == false) {\r\n                this.tkitEquipmentItemDetailsList = [];\r\n                this.tkitEquipmentItemDetailsList = this.sortedcheckedrec.reverse().concat(this.sorteduncheckedrec.reverse());\r\n            }\r\n            else {\r\n                this.tkitEquipmentItemDetailsList = [];\r\n                this.tkitEquipmentItemDetailsList = this.sortedcheckedrec.concat(this.sorteduncheckedrec);\r\n            }\r\n\r\n            this.sortedcheckedrec = [];\r\n            this.sorteduncheckedrec = [];\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async search() {\r\n\r\n        this.searchFlag = true;\r\n        this.addnewitembutton = false;\r\n        this.gobutton = true;\r\n        this.showgrid = false;\r\n        this.showitemdetailsFields = false;\r\n        this.showlotserialsgrid = false;\r\n        this.selectedItemID = '';\r\n        this.selectedEqType = '';\r\n        this.newItem = new VM_TKIT_ITEM_DETAILS();\r\n        this.showAddSerailbutton = false;\r\n        this.showLotSerialFields = false;\r\n        this.selectedEquipmentType = '';\r\n\r\n\r\n        this.growlMessage = [];\r\n        this.tkitEquipmentItemDetails = [];\r\n        this.tkitEquipmentItemDetailsList = [];\r\n        this.showCommentsGrid = false;\r\n\r\n        if (this.selectedItemAsset == null || this.selectedItemAsset == undefined || this.selectedItemAsset == '') {\r\n            this.showgrid = false;\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please enter search string\" });\r\n            return;\r\n        }\r\n        else {\r\n\r\n            // it will call the both PopulateTypesDropDown(),PopulateItemsDropDown()\r\n            await this.PopulateTypesDropDown();\r\n            await this.PopulateItemsDropDown();\r\n\r\n         //   if (this.enteredDescription != null && this.enteredDescription != undefined && this.enteredDescription != '') {\r\n\r\n\r\n                await this.GetSearchItemDetails();\r\n            //}\r\n            //else {\r\n            //    await this.GetSearchItems();\r\n            //}\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async GetSearchItemDetails() {\r\n        try {\r\n\r\n            this.spinnerService.start();\r\n\r\n            var itemidvalue = this.selectedItemAsset.split('(')[0].trim();\r\n\r\n\r\n            await this.manageEquipmentItemsService.GetMasterItemsdetails(itemidvalue, this.enteredDescription).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstFilteredItems = data.DataList;\r\n                            this.tkitEquipmentItemDetails = [];\r\n                            this.tkitEquipmentItemDetails = data.DataList;\r\n\r\n                            if (this.searchFlag) {\r\n                                this.DisplayItemDetailsGrid();\r\n                            }\r\n\r\n                            this.spinnerService.stop();\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.showCommentsGrid = false;\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.showCommentsGrid = false;\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.showCommentsGrid = false;\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n\r\n    }\r\n\r\n    async  addNewItem() {\r\n\r\n\r\n        this.additemflag = true;\r\n        this.edititemflag = false;\r\n       // this.validationITEM_ID = 1;\r\n        this.validationITEM_DESCR = 1;\r\n        this.validationSTORAGE_LOCATION = 1;\r\n\r\n        this.validationDESCRIPTION = 1;\r\n        if (this.selectedOrgGroupId == null || this.selectedOrgGroupId == undefined || this.selectedOrgGroupId == '' || this.selectedOrgGroupId == \"Select OrgGrpID\") {\r\n\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid OrgGrpId\" });\r\n            return;\r\n        }\r\n\r\n        this.selectedItemAsset = '';\r\n        this.enteredDescription = '';\r\n        this.userSelectedFile = ''\r\n        this.selectedOwner = '';\r\n        this.selectedOwnerType = '';\r\n        this.selectedDeptIDs = [];\r\n        this.selectedDeptDetails = [];\r\n        this.selectedVendor = '';\r\n\r\n        this.InitializationProperties();\r\n        this.selectedDeptIDs = [];\r\n        this.selectedOwnerType = this.lstOwnerType[0].value;\r\n        this.newItem.OWNER_TYPE = this.selectedOwnerType;\r\n        this.showCommentsGrid = false;\r\n\r\n\r\n        this.showgrid = false;\r\n        this.editItemDetailsFlag = false;\r\n        this.addnewitembutton = true;\r\n        this.gobutton = false;\r\n        this.addItemDetailsFlag = true;\r\n\r\n\r\n        this.growlMessage = [];\r\n        this.tkitEquipmentItemDetails = [];\r\n        this.tkitEquipmentItemDetailsList = [];\r\n\r\n\r\n\r\n\r\n        this.growlMessage = [];\r\n        if (this.selectedEqType == null || this.selectedEqType == undefined || this.selectedEqType == '') {\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid Equipment\" });\r\n            return;\r\n        }\r\n      \r\n       this.breadCrumbMenu.SUB_MENU_NAME = 'Add Equipment Item';\r\n       this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n       \r\n        this.selectedItemAsset = '';\r\n        this.showCommentsGrid = false;\r\n\r\n        this.page = false;\r\n        this.showgrid = false;\r\n        this.showitemdetailsFields = false;\r\n        this.showlotserialsgrid = false;\r\n        this.selectedItemID = null;\r\n\r\n\r\n        this.showAddSerailbutton = false;\r\n        this.showLotSerialFields = false;\r\n\r\n\r\n\r\n\r\n        await this.PopulateDepartments();\r\n\r\n        this.showitemdetailsFields = true;\r\n        this.showgrid = false;\r\n\r\n\r\n\r\n        if (this.selectedEqType == \"E\") {\r\n\r\n            this.showAddSerailbutton = true;\r\n        }\r\n        else {\r\n            this.showAddSerailbutton = false;\r\n        }\r\n\r\n\r\n\r\n        this.newItem.ITEM_TYPE = this.selectedEquipmentType;\r\n        this.newItem.ITEM_QTY = null;\r\n\r\n        this.newItem.CREATEUSERNAME = this.deviceTokenEntry[TokenEntry_Enum.UserID].toString();\r\n\r\n        this.showAndHideTextBoxs();\r\n        //need to implement the following service call\r\n\r\n        await this.GetLatestValue();\r\n\r\n        this.tkitEqItmLotSerailList = [];\r\n        this.tkitEquipmentItemDetailsList = [];\r\n\r\n        this.disableButton = true;\r\n    }\r\n\r\n    async GetLatestAssetIDValue() {\r\n        try {\r\n\r\n            let tkitAppId: number = EnumApps.TrackIT;\r\n            let orgGrpParamName = '';\r\n            await this.SetMaxSorageDate();\r\n            this.spinnerService.start();\r\n            await this.manageEquipmentItemsService.GetLatestAssetIDValue(tkitAppId\r\n                , \"ASSET_ID\").then((res: Response) => {\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.newItemLotSerial.ASSET_ID = data.DataVariable;\r\n                            this.assetfieldpart2 = true;\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    grddata(ven3) {\r\n\r\n        var imagepath = ven3.IMAGE_PATH;\r\n\r\n    }\r\n\r\n    async  editItemDetails(vendata: VM_TKIT_ITEM_DETAILS) {\r\n\r\n\r\n        this.showgrid = false;\r\n\r\n        this.editItemDetailsFlag = true;\r\n        this.addItemDetailsFlag = false;\r\n\r\n        this.page = false;\r\n        this.showitemdetailsFields = true;\r\n        this.showgrid = false;\r\n        if (this.selectedEqType == \"E\") {\r\n\r\n            this.showAddSerailbutton = true;\r\n\r\n            this.showlotserialsgrid = true;\r\n\r\n        }\r\n\r\n        this.selectedItemID = vendata.ITEM_ID;\r\n        this.selectedEquipmentType = vendata.ITEM_TYPE;\r\n\r\n        await this.PopulateTypesDropDown();\r\n\r\n        await this.PopulateItemsDropDown();\r\n\r\n        await this.GetEquipmentItemDetails();\r\n\r\n        this.showCommentsGrid = false;\r\n\r\n        this.showAndHideTextBoxs();\r\n\r\n\r\n        if (this.editItemDetailsFlag) {\r\n            //udpate details \r\n            this.disableButton = false;\r\n\r\n            if (this.newItem.ITEM_ID == null || this.newItem.ITEM_ID == undefined || this.newItem.ITEM_DESCR == '') {\r\n                this.disableButton = true;\r\n            }\r\n            if (this.newItem.STORAGE_LOCATION == null || this.newItem.STORAGE_LOCATION == undefined || this.newItem.STORAGE_LOCATION == '') {\r\n                this.disableButton = true;\r\n            }\r\n\r\n\r\n            if (this.newItem.DESCRIPTION == null || this.newItem.DESCRIPTION == undefined || this.newItem.DESCRIPTION == '') {\r\n                this.disableButton = true;\r\n            }\r\n\r\n\r\n\r\n            if (this.disableButton) {\r\n\r\n            }\r\n            else {\r\n                this.disableButton = false;\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    showAndHideTextBoxs() {\r\n\r\n        if (this.selectedEqType == \"B\") {\r\n\r\n            this.showImageColumn = false;  //for btype items no need of image column\r\n\r\n\r\n            this.showMfrColumn = false;\r\n            this.showQuantityColumn = false;\r\n            this.showVendorColumn = false;\r\n            this.showDepartmentsColumn = true;\r\n            this.showDestructionColumn = true;\r\n            this.showQuantityLabel = false;\r\n        }\r\n        else if (this.selectedEqType == \"E\") {\r\n\r\n            this.showImageColumn = true;\r\n            this.showMfrColumn = true;\r\n            this.showQuantityLabel = true;\r\n            this.showVendorColumn = true;\r\n            this.showQuantityColumn = false;\r\n            this.showDestructionColumn = false;\r\n            this.showDepartmentsColumn = true;\r\n        }\r\n        else if (this.selectedEqType == \"F\") {\r\n\r\n            this.showImageColumn = true;\r\n            this.showMfrColumn = true;\r\n\r\n            this.showVendorColumn = true;\r\n            this.showQuantityColumn = true;\r\n            this.showDestructionColumn = true;\r\n            this.showQuantityLabel = false;\r\n            this.showDepartmentsColumn = false;\r\n\r\n        }\r\n    }\r\n\r\n    async addNewserials() {\r\n\r\n        this.breadCrumbMenu.SUB_MENU_NAME = 'Add Serial';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        //for displaying the buttons and test boxes in add serail div tag\r\n\r\n\r\n        this.addserailflag = true;\r\n\r\n        this.editLotSerialFlag = false;\r\n        this.addLotSerailFlag = true;\r\n        this.disablelotserailButton = true;\r\n\r\n        this.newItemLotSerial = new TKIT_ITEM_INVENTORY();\r\n        this.showLotSerialFields = true;\r\n        this.showAddSerailbutton = true;\r\n        this.page = false;\r\n        this.showgrid = false;\r\n        this.showCommentsGrid = false;\r\n        this.showitemdetailsFields = false;\r\n        this.showlotserialsgrid = false;\r\n\r\n        await this.GetLatestAssetIDValue();\r\n\r\n\r\n\r\n    }\r\n\r\n    previousvalue: any;\r\n\r\n    editserial(vendata: TKIT_ITEM_INVENTORY) {\r\n\r\n\r\n        //edit the lot/serail values from the grid\r\n\r\n        // this.edititemflag = true;\r\n        this.editserailflag = true;\r\n        this.addLotSerailFlag = false;\r\n        this.updateLotSerialFlag = true;\r\n        this.selectedLotSerialRow = vendata;\r\n        vendata.Disable = true;\r\n        this.page = false;\r\n        this.showgrid = false;\r\n        this.showCommentsGrid = false;\r\n        this.showitemdetailsFields = false;\r\n        this.showlotserialsgrid = true;\r\n        this.newItemLotSerial = new TKIT_ITEM_INVENTORY();\r\n\r\n\r\n        let lotid = vendata.LOT_NO;\r\n        let serialNo = vendata.SERIAL_NO;\r\n\r\n\r\n        if (vendata.ASSET_ID.length == 13)\r\n        {\r\n            if (vendata.ASSET_ID != null && vendata.ASSET_ID != undefined && vendata.ASSET_ID != '')\r\n                var assetid = vendata.ASSET_ID.slice(4, 13);\r\n\r\n\r\n\r\n            if (vendata.ASSET_ID != null && vendata.ASSET_ID != undefined && vendata.ASSET_ID != '')\r\n                var assetidpart1 = vendata.ASSET_ID.slice(0, 4);\r\n        }\r\n        else {\r\n            if (vendata.ASSET_ID != null && vendata.ASSET_ID != undefined && vendata.ASSET_ID != '')\r\n                var assetid = vendata.ASSET_ID;\r\n        }\r\n        \r\n        let useridField1 = vendata.USER_FIELD_1;\r\n        let checkindate = vendata.CHECKIN_DATE;\r\n        let servicedate = vendata.SERVICE_DT_TIME;\r\n        \r\n        var newdate = new Date(vendata.SERVICE_DT_TIME);\r\n\r\n        let isdiable = vendata.Disable;\r\n\r\n        this.newItemLotSerial.LOT_NO = lotid;\r\n        this.newItemLotSerial.SERIAL_NO = serialNo;\r\n        this.newItemLotSerial.ASSET_ID = assetid;\r\n        this.newItemLotSerial.ASSET_IDPART1 = assetidpart1;\r\n        this.newItemLotSerial.USER_FIELD_1 = useridField1;\r\n        this.newItemLotSerial.CHECKIN_DATE = checkindate;\r\n        this.newItemLotSerial.SERVICE_DT_TIME = newdate;\r\n        this.newItemLotSerial.Disable = isdiable;\r\n        \r\n        this.showLotSerialFields = true;\r\n        this.disablelotserailButton = false;\r\n\r\n    }\r\n\r\n    getFormattedDate(date: Date) {\r\n        var year = date.getFullYear();\r\n        /// Add 1 because JavaScript months start at 0\r\n        var month = (1 + date.getMonth()).toString();\r\n        month = month.length > 1 ? month : '0' + month;\r\n        var day = date.getDate().toString();\r\n        day = day.length > 1 ? day : '0' + day;\r\n        return month + '/' + day + '/' + year;\r\n    }\r\n\r\n\r\n    async   lotSerailValidations() {\r\n        //whether the value of serial id is already present\r\n\r\n        if (this.tkitEqItmLotSerailList == null || this.tkitEqItmLotSerailList == undefined) {\r\n            this.tkitEqItmLotSerailList = new Array<TKIT_ITEM_INVENTORY>();\r\n        }\r\n        if (this.tkitEqItmLotSerailList != null && this.tkitEqItmLotSerailList != undefined) {\r\n            var result = this.tkitEqItmLotSerailList.filter(x => x.SERIAL_NO == this.newItemLotSerial.SERIAL_NO)\r\n\r\n            if (result.length > 0) {\r\n\r\n                this.growlMessage = [];\r\n\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Serial ID already Exists\" });\r\n                return;\r\n\r\n            }\r\n            else {\r\n\r\n                this.growlMessage = [];\r\n\r\n                if (this.newItemLotSerial.SERIAL_NO != null && this.newItemLotSerial.SERIAL_NO != undefined && this.newItemLotSerial.SERIAL_NO != '') {\r\n\r\n                    var valueofassetId = this.newItemLotSerial.ASSET_ID;\r\n                    var valueofcheckindate = this.newItemLotSerial.CHECKIN_DATE;\r\n\r\n                    this.newItemLotSerial.ORG_GROUP_ID = this.selectedOrgGroupId;\r\n                    this.newItemLotSerial.ITEM_ID = this.newItem.ITEM_ID;\r\n                    this.newItemLotSerial.ITEM_TYPE = this.selectedEquipmentType;\r\n                    this.newItemLotSerial.STORAGE_LOCATION = this.newItem.STORAGE_LOCATION;\r\n                    this.newItemLotSerial.ITEM_QTY = this.newItem.ITEM_QTY;\r\n\r\n                    if (this.newItemLotSerial.ASSET_IDPART1 == undefined || this.newItemLotSerial.ASSET_IDPART1 == null || this.newItemLotSerial.ASSET_IDPART1 == '')\r\n                        this.newItemLotSerial.ASSET_IDPART1 = '';\r\n                    this.newItemLotSerial.ASSET_ID = this.newItemLotSerial.ASSET_IDPART1 + this.newItemLotSerial.ASSET_ID;\r\n\r\n\r\n                    this.tkitEqItmLotSerailList.push(this.newItemLotSerial);\r\n                    this.showlotserialsgrid = true;\r\n\r\n                    this.newItemLotSerial = new TKIT_ITEM_INVENTORY();\r\n                    this.newItemLotSerial.CHECKIN_DATE = valueofcheckindate;\r\n                    this.newItemLotSerial.ASSET_ID = valueofassetId;\r\n\r\n                }\r\n\r\n\r\n              \r\n\r\n                await this.GetLatestAssetIDValue();\r\n                this.growlMessage = [];\r\n\r\n                this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Warn, detail: \"Lot/serials Added Successfully\" });\r\n\r\n                this.disablelotserailButton = true;\r\n                return;\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.tkitEqItmLotSerailList = new Array<TKIT_ITEM_INVENTORY>();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    gobackFromAddEditSerial() {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = 'Add Equipment Item';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        // remove the add/edit lot/serail text fields\r\n        this.showLotSerialFields = false;\r\n        this.growlMessage = [];\r\n        this.page = false;\r\n        this.showitemdetailsFields = true;\r\n        this.addLotSerailFlag = false;\r\n\r\n        if (this.updateLotSerialFlag == true) {\r\n\r\n            if (this.previousvalue != this.newItemLotSerial) {\r\n                this.newItemLotSerial = this.previousvalue;\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (this.selectedEqType == 'E' && this.tkitEqItmLotSerailList != null && this.tkitEqItmLotSerailList != undefined && this.tkitEqItmLotSerailList.length != 0) {\r\n            this.showlotserialsgrid = true;\r\n\r\n        }\r\n        else {\r\n            this.showlotserialsgrid = false;;\r\n        }\r\n\r\n        this.addserailflag = false;\r\n        this.editserailflag = false;\r\n\r\n    }\r\n\r\n   //// regrion for add functionality\r\n\r\n    async GetLatestValue() {\r\n        try {\r\n\r\n            let tkitAppId: number = EnumApps.TrackIT;\r\n            let orgGrpParamName = '';\r\n\r\n            this.spinnerService.start();\r\n            await this.SetMaxSorageDate();\r\n            await this.manageEquipmentItemsService.GetLatestValue(tkitAppId\r\n                , \"ITEM_ID\").then((res: Response) => {\r\n                    // let response = res.json();\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.newItem.ITEM_ID = data.DataVariable;\r\n                            this.spinnerService.stop();\r\n\r\n                            if (this.selectedEqType == \"E\") {\r\n                                //for displaying the vendor drop down when equipment type is E\r\n\r\n                                this.GetVendorDetials();\r\n\r\n                            }\r\n\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n\r\n    async GetVendorDetials() {\r\n        try {\r\n\r\n            this.lstVendorDetails = [];\r\n            this.lstVendorDetails.push({ label: \"Select Vendor\", value: \"Select Vendor\" });\r\n            this.spinnerService.start();\r\n            await this.manageEquipmentItemsService.getVendorDetails(this.selectedOrgGroupId, \"\", \"\").then((res: Response) => {\r\n                let data = res.json();\r\n                this.growlMessage = [];\r\n                switch (data.StatType) {\r\n                    case StatusType.Success: {\r\n                        this.vendorData = data.DataList;\r\n\r\n\r\n\r\n                        for (var i = 0; i < this.vendorData.length; i++) {\r\n\r\n                            this.lstVendorDetails.push({ label: this.vendorData[i].VENDOR_ID + \" - \" + this.vendorData[i].VENDOR_NAME, value: this.vendorData[i].VENDOR_ID })\r\n                        }\r\n\r\n                        this.spinnerService.stop();\r\n                        break;\r\n\r\n\r\n\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Vendor Id not found\" });\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Custom: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async SetMaxSorageDate() {\r\n        try {\r\n\r\n            let tkitAppId: number = EnumApps.TrackIT;\r\n            let orgGrpParamName = 'B_MAX_STOR';\r\n\r\n            this.spinnerService.start();\r\n            await this.atParCommonService.getOrgGroupParamValue(orgGrpParamName, tkitAppId, this.selectedOrgGroupId)\r\n                .catch(this.httpService.handleError).then(async (res: Response) => {\r\n                    let response = res.json() as AtParWebApiResponse<string>;\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            let dataRange = response.DataVariable.toString();\r\n                            let formDate = new Date();\r\n                            this.newItem.DESTRUCTION_DATE = await this.addDays(formDate, dataRange);\r\n                            this.newItemLotSerial.CHECKIN_DATE = await this.addDays(formDate, dataRange);\r\n                            this.newItemLotSerial.SERVICE_DT_TIME = await this.addDays(formDate, dataRange);\r\n                            this.spinnerService.stop();\r\n\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    addDays(theDate, days) {\r\n        return new Date(theDate.getTime() + days * 24 * 60 * 60 * 1000);\r\n    }\r\n\r\n    convert(str) {\r\n        var date = new Date(str),\r\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n            day = (\"0\" + date.getDate()).slice(-2);\r\n        return [mnth, day , date.getFullYear()].join(\"/\");\r\n    }\r\n\r\n    async  SaveItemQtyDetails(modeofoperation: string) {\r\n\r\n        try {\r\n\r\n            this.spinnerService.start();\r\n\r\n            this.growlMessage = [];\r\n            let lstItemInvDetails: Array<TKIT_ITEM_INVENTORY> = [];\r\n\r\n            let lstItemDetails: Array<VM_TKIT_ITEM_DETAILS> = [];\r\n\r\n            if (modeofoperation == \"ADD\" || modeofoperation == \"ADDNPRINT\") {\r\n                this.newItem.ORG_GROUP_ID = this.selectedOrgGroupId;\r\n            }\r\n\r\n\r\n            this.newItem.ORG_GROUP_ID = this.selectedOrgGroupId;\r\n\r\n\r\n            var deptids = this.selectedDeptIDs.join();\r\n\r\n            this.newItem.DEPT_ID = deptids.trim();\r\n\r\n\r\n\r\n\r\n            var todayDate = new Date();\r\n\r\n            if (this.newItem.DESTRUCTION_DATE != null && this.newItem.DESTRUCTION_DATE != undefined) {\r\n\r\n\r\n\r\n                var toDate = new Date(this.newItem.DESTRUCTION_DATE);\r\n                if (toDate < todayDate) {\r\n                    // this.grdHide = false;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Max Storage Date must be greater than or equal to current date\" });\r\n                    this.spinnerService.stop();\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n            if (this.selectedEqType == \"B\")\r\n            {\r\n                this.newItem.ITEM_QTY = 1;\r\n            }\r\n\r\n            lstItemDetails.push(this.newItem);\r\n\r\n            // this.newItem.DESTRUCTION_DATE = this.date2;\r\n\r\n\r\n\r\n            if (this.selectedEqType == \"E\") {\r\n\r\n                if (this.tkitEqItmLotSerailList == null || this.tkitEqItmLotSerailList == undefined || this.tkitEqItmLotSerailList.length == 0) {\r\n\r\n                    this.spinnerService.stop();\r\n                    this.growlMessage.push({ severity: 'Warn', summary: AtParConstants.GrowlTitle_Success, detail: \"Please enter atleast one serial number\" });\r\n                    return;\r\n\r\n                }\r\n                else {\r\n\r\n                    for (var item = 0; item < this.tkitEqItmLotSerailList.length; item++) {\r\n                        this.tkitEqItmLotSerailList[item].ORG_GROUP_ID = this.newItem.ORG_GROUP_ID;\r\n                        this.tkitEqItmLotSerailList[item].ITEM_ID = this.newItem.ITEM_ID;\r\n\r\n\r\n                        if (this.tkitEqItmLotSerailList[item].SERVICE_DT_TIME != null && this.tkitEqItmLotSerailList[item].SERVICE_DT_TIME != undefined) {\r\n\r\n                            var toDate = new Date(this.tkitEqItmLotSerailList[item].SERVICE_DT_TIME);\r\n                            if (toDate < todayDate) {\r\n                                // this.grdHide = false;\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"NextService Date Time must be greater than or equal to current date\" });\r\n                                this.spinnerService.stop();\r\n                                return;\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    lstItemInvDetails = this.tkitEqItmLotSerailList;\r\n\r\n                }\r\n\r\n            }\r\n            else {\r\n                // this.newItemLotSerial.CHECKIN_DATE = this.date2;\r\n\r\n\r\n                this.newItemLotSerial.ORG_GROUP_ID = this.selectedOrgGroupId;\r\n                this.newItemLotSerial.ITEM_ID = this.newItem.ITEM_ID;\r\n                this.newItemLotSerial.ITEM_TYPE = this.selectedEquipmentType;\r\n                this.newItemLotSerial.STORAGE_LOCATION = this.newItem.STORAGE_LOCATION;\r\n                this.newItemLotSerial.OWNER = this.newItem.OWNER;\r\n                this.newItemLotSerial.OWNER_TYPE = this.newItem.OWNER_TYPE;\r\n                this.newItemLotSerial.ITEM_QTY = this.newItem.ITEM_QTY;\r\n                //  this.newItem.STORAGE_LOCATION = this.newItem.STORAGE_LOCATION;\r\n                this.newItemLotSerial.UPDATE_USER_ID = this.deviceTokenEntry[TokenEntry_Enum.UserID].toString();\r\n                lstItemInvDetails.push(this.newItemLotSerial);\r\n\r\n            }\r\n\r\n\r\n\r\n            await this.manageEquipmentItemsService.SaveItemDetails(lstItemDetails, lstItemInvDetails, this.selectedEqType, modeofoperation)\r\n\r\n                .then((res: Response) => {\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            this.spinnerService.stop();\r\n\r\n                            if (modeofoperation == \"ADD\" || modeofoperation == \"ADDNPRINT\") {\r\n                                this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: \"Item\" + \" ' \" + this.newItem.ITEM_ID + \" ' \" + \"created successfully\" });\r\n                            }\r\n                            else {\r\n                                this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: \"Item\" + \" ' \" + this.newItem.ITEM_ID + \" ' \" + \"updated  successfully\" });\r\n                            }\r\n\r\n\r\n                            this.InitializationProperties();\r\n                            this.showitemdetailsFields = false;\r\n                            this.showLotSerialFields = false;\r\n                            this.selectedEquipmentType = '';\r\n                            this.selectedItemID = '';\r\n                            this.newItem.DEPT_ID = '';\r\n                            this.page = true;\r\n                            this.selectedItemAsset = '';\r\n                            this.tkitEqItmLotSerailList = [];\r\n                            this.tkitEquipmentItemDetailsList = [];\r\n                            this.selectedDeptDetails = [];\r\n                            this.selectedDeptIDs = [];\r\n                            this.userSelectedFile = '';\r\n                            this.selectedOwnerType = '';\r\n                            this.selectedOwner = '';\r\n                            this.additemflag = false;\r\n                            this.edititemflag = false;\r\n                            this.addserailflag = false;\r\n                            this.editserailflag = false;\r\n                             \r\n                            break;\r\n\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            this.spinnerService.stop();\r\n                            if (data.StatusCode == 1193001) {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Serial ID already Exists\" });\r\n                                break;\r\n                            }\r\n\r\n                            if (modeofoperation == \"ADD\" || modeofoperation == \"ADDNPRINT\") {\r\n                                if (data.StatusCode == 1112329) {\r\n                                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Item '\" + this.newItem.ITEM_ID + \"' created successfully and no printer address available\" });\r\n\r\n\r\n                                    this.InitializationProperties();\r\n                                    this.showitemdetailsFields = false;\r\n                                    this.showLotSerialFields = false;\r\n                                    this.selectedEquipmentType = '';\r\n                                    this.selectedItemID = '';\r\n                                    this.newItem.DEPT_ID = '';\r\n                                    this.page = true;\r\n                                    this.selectedItemAsset = '';\r\n                                    this.tkitEqItmLotSerailList = [];\r\n                                    this.tkitEquipmentItemDetailsList = [];\r\n                                    this.selectedDeptDetails = [];\r\n                                    this.selectedDeptIDs = [];\r\n                                    this.userSelectedFile = '';\r\n                                    this.selectedOwnerType = '';\r\n                                    this.selectedOwner = '';\r\n                                    this.additemflag = false;\r\n                                    this.edititemflag = false;\r\n                                    this.addserailflag = false;\r\n                                    this.editserailflag = false;\r\n\r\n                                    break;\r\n                                }\r\n\r\n                                if (data.StatusCode == 1302201) {\r\n                                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Item '\" + this.newItem.ITEM_ID + \"' created successfully. Remote printer error\" });\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else {\r\n\r\n\r\n                                if (data.StatusCode == 1112329) {\r\n                                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Item '\" + this.newItem.ITEM_ID + \"' updated successfully and no printer address available\" });\r\n                                    this.InitializationProperties();\r\n                                    this.showitemdetailsFields = false;\r\n                                    this.showLotSerialFields = false;\r\n                                    this.selectedEquipmentType = '';\r\n                                    this.selectedItemID = '';\r\n                                    this.newItem.DEPT_ID = '';\r\n                                    this.page = true;\r\n                                    this.selectedItemAsset = '';\r\n                                    this.tkitEqItmLotSerailList = [];\r\n                                    this.tkitEquipmentItemDetailsList = [];\r\n                                    this.selectedDeptDetails = [];\r\n                                    this.selectedDeptIDs = [];\r\n                                    this.userSelectedFile = '';\r\n                                    this.selectedOwnerType = '';\r\n                                    this.selectedOwner = '';\r\n                                    this.additemflag = false;\r\n                                    this.edititemflag = false;\r\n                                    this.addserailflag = false;\r\n                                    this.editserailflag = false;\r\n                                    break;\r\n                                }\r\n\r\n                                if (data.StatusCode == 1302201) {\r\n                                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Item '\" + this.newItem.ITEM_ID + \"' updated successfully. Remote printer error\" });\r\n                                    break;\r\n                                }\r\n                            }\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n\r\n\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async createandprint() {\r\n        this.disableButton = false;\r\n\r\n\r\n        await this.datevalidation();\r\n        await this.SaveItemQtyDetails(\"ADDNPRINT\");\r\n    }\r\n\r\n    async create() {\r\n\r\n\r\n        this.disableButton = false;\r\n\r\n\r\n\r\n        await this.datevalidation();\r\n\r\n        await this.SaveItemQtyDetails(\"ADD\");\r\n    }\r\n\r\n    //// end  regrion for add functionality\r\n\r\n\r\n\r\n\r\n    //// regrion for update functionality\r\n\r\n\r\n    async  updateandprint() {\r\n\r\n        await this.datevalidation();\r\n        await this.SaveItemQtyDetails(\"UPDATENPRINT\");\r\n\r\n    }\r\n\r\n    async    update() {\r\n\r\n        await this.datevalidation();\r\n        await this.SaveItemQtyDetails(\"EDIT\");\r\n\r\n\r\n    }\r\n    //// end  regrion for update functionality\r\n\r\n\r\n\r\n    ///validations\r\n\r\n    FieldsvalidationRules() {\r\n        this.growlMessage = [];\r\n\r\n        if (this.newItem.ITEM_ID == null || this.newItem.ITEM_ID == undefined || this.newItem.ITEM_ID == '') {\r\n            this.disableButton = true;\r\n        }\r\n\r\n        if (this.newItem.ITEM_DESCR == null || this.newItem.ITEM_DESCR == undefined || this.newItem.ITEM_DESCR == '') {\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Success, detail: \"Please enter valid Item Desc\" });\r\n            this.disableButton = true;\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.newItem.DESCRIPTION == null || this.newItem.DESCRIPTION == undefined || this.newItem.DESCRIPTION == '') {\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Success, detail: \"Please enter valid StorgLoc \" });\r\n            this.disableButton = true;\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    //// regrion for image upload functionality\r\n\r\n    files: any;\r\n    fileUpload(event) {\r\n        try {\r\n            //this.spinnerService.start();\r\n            let fileList: FileList = event.target.files;\r\n            this.userSelectedFile = event.target.files[0].name;\r\n\r\n            if (this.userSelectedFile != null && this.userSelectedFile != undefined && this.userSelectedFile != '') {\r\n                let formData: FormData = new FormData();\r\n                if (fileList.length > 0) {\r\n                    let file: File = fileList[0];\r\n                    this.files = file.name;\r\n                    var listData = [];\r\n                    this.newItem.showImage = false;\r\n                    this.newItem.IMAGE = this.newItem.ITEM_TYPE + \"_\" + this.newItem.ITEM_ID + '.'+file.name.split('.')[1];\r\n                    this.newItem.IMAGE_PATH = this.imgBasePath + this.newItem.IMAGE;\r\n                    //this.newItem.showImage = true;\r\n                    var obj = { FileName: this.newItem.ITEM_TYPE + \"_\" + this.newItem.ITEM_ID + '.' + file.name.split('.')[1], File: file };\r\n                    listData.push(obj);\r\n                    formData.append('uploadFile', file, this.newItem.IMAGE);\r\n                }\r\n\r\n\r\n\r\n                let headers = new Headers();\r\n                headers.append('Authorization', 'bearer');\r\n                headers.append('enctype', 'multipart/form-data');\r\n                let options = new RequestOptions({ headers: headers });\r\n                let apiUrl = this.httpService.BaseUrl + \"/api/ManageEquipmentItems/SaveUploadImage\";\r\n\r\n                this.http.post(apiUrl, formData, options)\r\n                    .toPromise()\r\n                    .then((res: Response) => {\r\n                        this.growlMessage = [];\r\n                        this.spinnerService.stop();\r\n                        let data = res.json();\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.files = '';\r\n                                //this.showUploadImage = false;\r\n                                this.newItem.showImage = false;\r\n                                this.newItem.IMAGE_PATH = this.imgBasePath + this.newItem.IMAGE;\r\n                                this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                //this.showUploadImage = true;\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                // this.showUploadImage = true;\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                    },\r\n                    error => console.log(error)\r\n                    );\r\n\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n\r\n    //// end region for image upload functionality\r\n\r\n\r\n    //item  activ\r\n    ItemActiveInActive(values: any, event) {\r\n\r\n        if (event == true) {\r\n            values.ITEM_INACTIVATED = true;\r\n\r\n        }\r\n        else {\r\n            values.ITEM_INACTIVATED = false;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    bindModelDataChange(event: any) {\r\n                \r\n        try {\r\n                                    \r\n            if (this.newItem.ITEM_ID == null || this.newItem.ITEM_ID == \"\" || this.newItem.ITEM_ID == undefined) {\r\n                this.validationITEM_ID = 1;\r\n            }\r\n            else {\r\n                if (this.validationITEM_ID == 1) {\r\n                    this.validationITEM_ID = 1;\r\n                }\r\n                else {\r\n                    this.validationITEM_ID = 0;\r\n                }\r\n            }\r\n\r\n            if (this.selectedEqType == \"F\") {\r\n\r\n                if (\"txtQuantity\" == event.TextBoxID.toString()) {\r\n                    this.validationITEM_QTY = event.validationrules.filter(x => x.status == false).length;\r\n                }\r\n            }\r\n\r\n            if (\"txtItemDvalue\" == event.TextBoxID.toString()) {\r\n                this.validationITEM_ID = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n          \r\n            if (\"txtStoragelocation\" == event.TextBoxID.toString()) {\r\n                this.validationSTORAGE_LOCATION = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtDescription\" == event.TextBoxID.toString()) {\r\n                this.validationDESCRIPTION = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n\r\n\r\n\r\n            if (this.selectedEqType == \"F\") {\r\n                if (this.validationITEM_QTY == 0 && this.validationITEM_ID === 0 && this.validationSTORAGE_LOCATION === 0 && this.validationDESCRIPTION === 0 ) {\r\n                    this.disableButton = false;\r\n                }\r\n                else {\r\n                    this.disableButton = true;\r\n                }\r\n            }\r\n            else {\r\n\r\n\r\n                if (this.validationITEM_ID === 0 && this.validationSTORAGE_LOCATION === 0 && this.validationDESCRIPTION === 0) {\r\n                    this.disableButton = false;\r\n                }\r\n                else {\r\n                    this.disableButton = true;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n           \r\n\r\n\r\n\r\n               \r\n                                \r\n                       \r\n            if (this.selectedEqType == \"E\") {\r\n\r\n                if (this.updateLotSerialFlag == true) {\r\n                    this.disablelotserailButton = false;\r\n\r\n                    if (this.newItemLotSerial.SERIAL_NO == null || this.newItemLotSerial.SERIAL_NO == undefined || this.newItemLotSerial.SERIAL_NO == '') {\r\n                        this.disablelotserailButton = true;\r\n                    }\r\n                    if (this.newItemLotSerial.LOT_NO == null || this.newItemLotSerial.LOT_NO == undefined || this.newItemLotSerial.LOT_NO == '') {\r\n                        this.disablelotserailButton = true;\r\n                    }\r\n\r\n                    if (this.newItemLotSerial.USER_FIELD_1 == null || this.newItemLotSerial.USER_FIELD_1 == undefined || this.newItemLotSerial.USER_FIELD_1 == '') {\r\n\r\n                        this.disablelotserailButton = true;\r\n                    }\r\n\r\n\r\n\r\n                    if (this.disablelotserailButton) {\r\n\r\n                    }\r\n                    else {\r\n                        this.disablelotserailButton = false;\r\n                    }\r\n                }\r\n                else if (this.addLotSerailFlag == true) {\r\n\r\n                    if (this.showLotSerialFields == true || this.addnewitembutton == true) {\r\n                        if (\"txtSD1\" == event.TextBoxID.toString()) {\r\n                            this.validationSERIAL_NO = event.validationrules.filter(x => x.status == false).length;\r\n                        }\r\n                        if (\"txtLD1\" == event.TextBoxID.toString()) {\r\n                            this.validationLOT_NO = event.validationrules.filter(x => x.status == false).length;\r\n                        }\r\n                        if (\"txtUserf\" == event.TextBoxID.toString()) {\r\n                            this.validationUSER_FIELD_1 = event.validationrules.filter(x => x.status == false).length;\r\n                        }\r\n                        if (\"txtAssetId\" == event.TextBoxID.toString()) {\r\n                            this.validationUSER_FIELD_1 = event.validationrules.filter(x => x.status == false).length;\r\n                        }\r\n                        if (\"txtAssetId1\" == event.TextBoxID.toString()) {\r\n                            this.validationUSER_FIELD_1 = event.validationrules.filter(x => x.status == false).length;\r\n                        }\r\n\r\n\r\n                        if (this.validationSERIAL_NO == 0 && this.validationLOT_NO == 0 && this.validationUSER_FIELD_1 == 0) {\r\n                            this.disablelotserailButton = false;\r\n                        }\r\n                        else {\r\n                            this.disablelotserailButton = true;\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n\r\n                \r\n    }\r\n\r\n     \r\n    populateOwnerTypeDD() {\r\n        this.lstOwnerType = [];\r\n        this.lstOwnerType.push({ label: \"Owned\", value: \"O\" });\r\n        this.lstOwnerType.push({ label: \"Leased\", value: \"L\" });\r\n        this.lstOwnerType.push({ label: \"Rented\", value: \"R\" });\r\n        //\r\n    }\r\n\r\n\r\n    ddlvendorChanged() {\r\n        //var data:any[] = this.selectedDeptIDs;\r\n        // data.\r\n\r\n        // this.newItem.DEPT_ID = this.selectedDeptIDs;\r\n        this.newItem.VENDOR = this.selectedVendor;\r\n\r\n    }\r\n\r\n    ddlOwnerTypeChanged() {\r\n        this.newItem.OWNER_TYPE = this.selectedOwnerType;\r\n    }\r\n\r\n    populateOwnerDD() {\r\n        this.lstOwnerDetails = [];\r\n        this.lstOwnerDetails.push({ label: \"Select One\", value: \"Select One\" });\r\n\r\n        for (var k = 0; k < this.tkitDeptDetails.length; k++) {\r\n\r\n            this.lstOwnerDetails.push({\r\n                label: this.tkitDeptDetails[k].DESCRIPTION + \" \" + \"(\" + this.tkitDeptDetails[k].DEPT_ID + \")\",\r\n\r\n                value: this.tkitDeptDetails[k].DEPT_ID\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    async  createLotSerials() {\r\n\r\n        await this.lotSerailValidations();\r\n\r\n    }\r\n\r\n    updateLotSerials() {\r\n        // this.lotSerailValidations();\r\n        this.page = true;\r\n        this.showLotSerialFields = false;\r\n        this.showitemdetailsFields = true;\r\n        this.showAddSerailbutton = true;\r\n\r\n        let selectedrow = this.tkitEqItmLotSerailList.filter(x => x.SERIAL_NO == this.newItemLotSerial.SERIAL_NO)[0];\r\n\r\n\r\n        if (this.newItemLotSerial.ASSET_IDPART1 == undefined || this.newItemLotSerial.ASSET_IDPART1 == null || this.newItemLotSerial.ASSET_IDPART1 == '')\r\n            this.newItemLotSerial.ASSET_IDPART1 = '';\r\n\r\n        this.newItemLotSerial.ASSET_ID = this.newItemLotSerial.ASSET_IDPART1 + this.newItemLotSerial.ASSET_ID;\r\n\r\n        selectedrow.LOT_NO = this.newItemLotSerial.LOT_NO;\r\n\r\n        selectedrow.ASSET_ID = this.newItemLotSerial.ASSET_ID;\r\n        selectedrow.USER_FIELD_1 = this.newItemLotSerial.USER_FIELD_1;\r\n        selectedrow.CHECKIN_DATE = this.newItemLotSerial.CHECKIN_DATE;\r\n        selectedrow.SERVICE_DT_TIME = this.newItemLotSerial.SERVICE_DT_TIME;\r\n        selectedrow.UPDATE_DATE = this.date1;\r\n        selectedrow.UPDATE_USER_ID = this.deviceTokenEntry[TokenEntry_Enum.UserID];\r\n        selectedrow.ORG_GROUP_ID = this.selectedOrgGroupId;\r\n\r\n        //this.newItemLotSerial = this.newItemLotSerial;\r\n\r\n    }\r\n\r\n\r\n    onfocusToCalendar(e) {\r\n        this.date2 = null;\r\n        if (this.date1 == null) {\r\n            this.minDateValue2 = new Date();\r\n        } else {\r\n            this.minDateValue2 = this.date1;\r\n        }\r\n    }\r\n\r\n    onfocusFromCalendar(e) {\r\n        localStorage.removeItem(\"FromDate\");\r\n        this.date1 = null;\r\n\r\n    }\r\n\r\n    async  datevalidation() {\r\n       \r\n    }\r\n\r\n    gobackFromItemdetails() {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = '';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n\r\n        this.page = true;\r\n        this.growlMessage = [];\r\n        this.showitemdetailsFields = false;\r\n        this.showLotSerialFields = false;\r\n        this.additemflag = false;\r\n        this.edititemflag = false;\r\n        this.addserailflag = false;\r\n        this.editserailflag = false;\r\n\r\n    }\r\n\r\n\r\n    clientErrorMsg(strExMsg) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString());\r\n    }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-manage-equipment-items.component.ts","import { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { Employee } from '../components/datatable/employee';\r\nimport { TKIT_ITEM_TYPE } from \"../Entities/TKIT_ITEM_TYPE\";\r\nimport { TKIT_EQ_INDICATOR } from \"../Entities/TKIT_EQ_INDICATOR\";\r\nimport { ManageEqTypeService } from './tkit-manage-equipment-type.service';\r\nimport { TokenEntry_Enum, EnumApps, ModeEnum, YesNo_Enum, StatusType, } from '../Shared/AtParEnums'\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtparStatusCodes, } from '../Shared/AtParStatusCodes';\r\nimport { Http, Response } from '@angular/http';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { Message } from './../components/common/api';\r\nimport { MT_ATPAR_SECURITY_AUDIT } from '../Entities/MT_ATPAR_SECURITY_AUDIT';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\nimport { LeftBarAnimationService } from '../Home/leftbar-animation.service';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { List, Enumerable } from 'linqts';\r\nimport { asEnumerable } from 'linq-es5';\r\nimport { SelectItem } from '../components/common/api';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n\r\n    template: require('./tkit-manage-equipment-type.component.html'),\r\n    providers: [datatableservice, ManageEqTypeService, HttpService, AtParCommonService, AtParConstants]\r\n})\r\n\r\n\r\nexport class ManageEquipmentTypeComponent {\r\n    @ViewChild(DataTable) dataTableComponent: DataTable;\r\n    equipmentIDSearch: string = \"\";\r\n    showAddButton: boolean = true;\r\n    mode: string;\r\n    pop: boolean = false;\r\n    table: boolean = true;\r\n    form: boolean = false;\r\n    editform: boolean = false;\r\n    sales: Employee[];\r\n    ven: any;\r\n    Title: string = \"\";\r\n    bindSymbal: string = \"\";\r\n    loading: boolean = true;\r\n    equipmentStatus: number;\r\n    descStatus: number;\r\n    date1: Date;\r\n    date2: Date;\r\n    minDateValue1: Date = new Date();\r\n    minDateValue2: Date;\r\n    showTextBox: boolean = false;\r\n    showLable: boolean = false;\r\n    departmentID: string = \"\";\r\n    public newItem = new TKIT_ITEM_TYPE();\r\n    growlMessage: Message[] = [];\r\n    _deviceTokenEntry: string[] = [];\r\n    lstDepts: TKIT_ITEM_TYPE[];\r\n    templstDepts: TKIT_ITEM_TYPE[];\r\n    pageSize: number;\r\n    menuCode: string;\r\n    appID: string;\r\n    auditSatus: string = \"\";\r\n    changeDeptStatus: string;\r\n    checkvalue: boolean = false;\r\n    lstOrgGroups: SelectItem[] = [];\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    blnShowOrgGroupDD: boolean = false;\r\n    orgGrpId: string = \"\";\r\n    selectedOrgGroupId: string = \"\";\r\n    selectedIndicator: string = \"\";\r\n    orgGroupIDForDBUpdate: string;\r\n    ddlIndicatorList: any;\r\n    ddlOrgGpStatus: number;\r\n    ddlindicatorStatus: number;\r\n    equipmentType: string = \"\";\r\n    showEquipmentTypelbl: boolean = false;\r\n    showIndicatorlbl: boolean = false;\r\n    Indicator: string = \"\";\r\n    statusList: any;\r\n    statusType: string;\r\n    breadCrumbMenu: Menus;\r\n\r\n    constructor(public dataservice: datatableservice,\r\n        private mngEqTypeService: ManageEqTypeService,\r\n        private httpService: HttpService,\r\n        private spinnerService: SpinnerService,\r\n        private commonService: AtParCommonService,\r\n        private atParConstant: AtParConstants,\r\n        private leftBarAnimationService: LeftBarAnimationService) {       \r\n        this.ven = new Employee();\r\n        this.departmentID = \"dept1\";\r\n        this._deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n        this.breadCrumbMenu = new Menus();\r\n    }\r\n\r\n\r\n    async fillIndicatorDD() {\r\n\r\n        try {\r\n            this.spinnerService.start();\r\n            this.growlMessage = [];\r\n            await this.mngEqTypeService.getEqIndicators().\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<TKIT_EQ_INDICATOR>;\r\n                    this.spinnerService.stop();\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            this.ddlIndicatorList = [];\r\n\r\n                            this.ddlIndicatorList.push({ label: \"Select Indicator\", value: \"Select Indicator\" })\r\n                            for (var i = 0; i < data.DataList.length; i++) {\r\n                                this.ddlIndicatorList.push({ label: data.DataList[i].EQ_INDICATOR + ' ( ' + data.DataList[i].EQ_DESC + ' ) ', value: data.DataList[i].EQ_INDICATOR })\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: AtParConstants.ClientErrorMessage });\r\n            this.spinnerService.stop();\r\n        }\r\n\r\n    }\r\n\r\n    addEquipment() {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = 'Add Equipment Type';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        this.showTextBox = true;\r\n        this.showLable = false;\r\n        this.form = true;\r\n        this.editform = false;\r\n        this.table = false;\r\n        this.pop = false;\r\n        this.Title = \"Save\";\r\n        this.bindSymbal = \"floppy-o\";\r\n        this.showAddButton = false;\r\n        this.mode = ModeEnum[ModeEnum.Add].toString();\r\n        this.equipmentStatus = null;\r\n        this.descStatus = null;\r\n        this.ddlOrgGpStatus = null;\r\n        this.ddlindicatorStatus = null;\r\n        this.loading = true;\r\n        this.newItem = new TKIT_ITEM_TYPE();\r\n        this.equipmentIDSearch = \"\";\r\n        this.bindOrgGroups();\r\n        this.fillIndicatorDD();\r\n        this.showEquipmentTypelbl = false;\r\n        this.showIndicatorlbl = false;\r\n        this.selectedIndicator = \"\";\r\n        this.selectedOrgGroupId = \"\";\r\n\r\n    }\r\n\r\n    tbl() {\r\n        this.form = false;\r\n        this.editform = false;\r\n        this.table = false;\r\n        this.pop = false;\r\n        this.table = true;\r\n    }\r\n\r\n    edit(data) {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = 'Edit Equipment Type';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        this.showTextBox = false;\r\n        this.showLable = true;\r\n        this.form = true;\r\n        this.table = false;\r\n        this.showAddButton = false;\r\n        this.showEquipmentTypelbl = true;\r\n        this.showIndicatorlbl = true;\r\n        this.Title = \"Update\";\r\n        this.bindSymbal = \"check\";\r\n        this.newItem = data;\r\n        this.mode = ModeEnum[ModeEnum.Edit].toString();\r\n        this.loading = false;\r\n        this.equipmentIDSearch = \"\";\r\n        this.equipmentType = data.ITEM_TYPE;\r\n        this.Indicator = data.ITEM_TYPE_INDICATOR;\r\n        this.orgGrpId = data.ORG_GROUP_ID;\r\n        this.blnShowOrgGroupLabel = true;\r\n        this.blnShowOrgGroupDD = false;\r\n       // this.bindOrgGroups();\r\n        this.fillIndicatorDD();\r\n    }\r\n\r\n    save() {\r\n        this.editform = false;\r\n    }\r\n\r\n    close() {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = '';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        this.form = false;\r\n        this.table = true;\r\n        this.pop = true;\r\n        this.editform = false;\r\n        this.table = false;\r\n        this.showAddButton = true;\r\n        this.newItem = new TKIT_ITEM_TYPE();\r\n        this.equipmentIDSearch = \"\";\r\n        this.selectedOrgGroupId = \"\";\r\n        this.selectedIndicator = \"\";\r\n        this.growlMessage = [];\r\n    }\r\n\r\n    clientErrorMsg(strExMsg) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString());\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.table = false;\r\n        this.showAddButton = true;\r\n        this.newItem = new TKIT_ITEM_TYPE();\r\n        this.pageSize = + this._deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n        this.menuCode = localStorage.getItem(\"menuCode\") != null ? localStorage.getItem(\"menuCode\") : 'mt_tkit_manage_equipment_type.aspx';\r\n        this.appID = (EnumApps.TrackIT).toString();\r\n        this.checkAuditAllowed();\r\n        this.fillSerachIndicatorDD();\r\n        this.statusType = null;\r\n    }\r\n\r\n    fillSerachIndicatorDD() {\r\n        this.statusList = [];\r\n        this.statusList.push({ label: 'All', value: null });\r\n        this.statusList.push({ label: 'B (BOX)', value: 'B (BOX)' });\r\n        this.statusList.push({ label: 'E (EQUIPMENT)', value: 'E (EQUIPMENT)' });\r\n        this.statusList.push({ label: 'F (FURNITURE)', value: 'F (FURNITURE)' });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.equipmentIDSearch = null;\r\n        this.mode = null;\r\n        this.Title = null;\r\n        this.bindSymbal = null;\r\n        this.equipmentStatus = null;\r\n        this.descStatus = null;\r\n        this.ddlOrgGpStatus = null;\r\n        this.ddlindicatorStatus = null;\r\n        this.departmentID = null;\r\n        this.newItem = null;\r\n        this.growlMessage = null;\r\n        this._deviceTokenEntry = null;\r\n        this.lstDepts = null;\r\n        this.pageSize = null;\r\n        this.menuCode = null;\r\n        this.appID = null;\r\n        this.auditSatus = null;\r\n        this.changeDeptStatus = null;\r\n    }\r\n\r\n    async bindOrgGroups() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.growlMessage = [];\r\n            await this.commonService.getUserOrgGroups(this._deviceTokenEntry[TokenEntry_Enum.UserID], this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.spinnerService.stop();\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n                            // this.blnStatusMsg = false;\r\n\r\n                            if (this.orgGroupData.length == 1) {\r\n                                this.blnShowOrgGroupDD = false;;\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.orgGrpId = this.orgGroupData[0].ORG_GROUP_ID + ' - ' + this.orgGroupData[0].ORG_GROUP_NAME;\r\n                                break;\r\n\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.blnShowOrgGroupDD = true;\r\n                                this.blnShowOrgGroupLabel = false;\r\n                                this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" })\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID !== \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + ' - ' + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: AtParConstants.ClientErrorMessage });\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    ddlOrgGpChange() {\r\n\r\n\r\n        if (this.blnShowOrgGroupDD) {\r\n            if (this.selectedOrgGroupId == \"Select One\" || this.selectedOrgGroupId == undefined || this.selectedOrgGroupId == null || this.selectedOrgGroupId == \"\") {\r\n                this.ddlOrgGpStatus = 1;\r\n            }\r\n            else {\r\n                this.ddlOrgGpStatus = 0;\r\n            }\r\n        }\r\n        else if (this.blnShowOrgGroupLabel) {\r\n            this.ddlOrgGpStatus = 0;\r\n        }\r\n\r\n        if (this.showIndicatorlbl) {\r\n            this.ddlindicatorStatus = 0;\r\n        }\r\n        else {\r\n            if (this.selectedIndicator == \"Select Indicator\" || this.selectedIndicator == undefined || this.selectedIndicator == null || this.selectedIndicator == \"\") {\r\n                this.ddlindicatorStatus = 1;\r\n            }\r\n            else {\r\n                this.ddlindicatorStatus = 0;\r\n            }\r\n        }\r\n\r\n        if (this.equipmentStatus == 0 && this.descStatus == 0 && this.ddlindicatorStatus == 0 && this.ddlOrgGpStatus == 0 && (this.newItem.ITEM_TYPE != \"\" || this.newItem.ITEM_TYPE != undefined || this.newItem.ITEM_TYPE != null) && (this.newItem.ITEM_TYPE_DESCR != \"\" || this.newItem.ITEM_TYPE_DESCR != undefined || this.newItem.ITEM_TYPE_DESCR != null)) {\r\n            this.loading = false;\r\n        }\r\n        else {\r\n            this.loading = true;\r\n        }\r\n\r\n\r\n\r\n        this.newItem.ORG_GROUP_ID = this.selectedOrgGroupId;\r\n    }\r\n\r\n    // Add and Update button validations\r\n    bindModelDataChange(event: any) {\r\n        try {\r\n\r\n            if (\"txtEquipment\" == event.TextBoxID.toString()) {\r\n                this.equipmentStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtDesc\" == event.TextBoxID.toString()) {\r\n                this.descStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n\r\n            this.ddlOrgGpChange();\r\n\r\n            if (this.mode == ModeEnum[ModeEnum.Add].toString()) {\r\n                if (this.equipmentStatus == 0 && this.descStatus == 0 && this.ddlindicatorStatus == 0 && this.ddlOrgGpStatus == 0) {\r\n                    this.loading = false;\r\n                }\r\n                else {\r\n                    this.loading = true;\r\n                }\r\n            }\r\n\r\n            if (this.mode == ModeEnum[ModeEnum.Edit].toString()) {\r\n                if (this.descStatus == 0) {\r\n                    this.loading = false;\r\n                }\r\n                else {\r\n                    this.loading = true;\r\n                }\r\n            }\r\n\r\n\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n    }\r\n\r\n    async BindGrid() {\r\n\r\n        if (this.table == true) {\r\n            this.dataTableComponent.reset();\r\n            \r\n        }\r\n\r\n        try {\r\n            this.statusType = null;\r\n            this.table = false;\r\n            if (this.mode == \"Edit\") {\r\n                this.showAddButton = true;\r\n            }\r\n\r\n            this.spinnerService.start();\r\n            if (this.equipmentIDSearch == null || this.equipmentIDSearch == undefined || this.equipmentIDSearch === \"\") {\r\n                this.equipmentIDSearch = \"\";\r\n            }\r\n\r\n            await this.mngEqTypeService.getEquipmentTypes(\"\", this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID], this.equipmentIDSearch)\r\n                .catch(this.httpService.handleError)\r\n                .then((resp: Response) => {\r\n                    let webresp = resp.json() as AtParWebApiResponse<TKIT_ITEM_TYPE>\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            this.growlMessage = [];\r\n                            this.lstDepts = [];\r\n                            this.lstDepts = webresp.DataList;\r\n                            this.templstDepts = webresp.DataList;\r\n                            this.table = true;\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.table = false;\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: \"warn\", summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.table = false;\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: \"info\", summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.table = false;\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: \"error\", summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n    }\r\n\r\n    private async checkAuditAllowed() {\r\n\r\n        this.growlMessage = [];\r\n        try {\r\n            this.spinnerService.start();\r\n            let webresp = new AtParWebApiResponse<string>();\r\n            await this.commonService.getAuditAllowed(this.appID, this.menuCode)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    webresp = res.json() as AtParWebApiResponse<string>\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n\r\n                        case StatusType.Success: {\r\n                            this.auditSatus = webresp.Data;\r\n                            break\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n    }\r\n\r\n    public saveOrUpdateReasonCode() {\r\n        this.showAddButton = false;\r\n        this.table = false;\r\n        this.growlMessage = [];\r\n\r\n        if (this.blnShowOrgGroupLabel == true) {\r\n            this.orgGroupIDForDBUpdate = this.orgGrpId.split(\"-\")[0];\r\n        }\r\n        else {\r\n            this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n            if (this.selectedOrgGroupId == \"\" || this.selectedOrgGroupId == \"Select One\" || this.selectedOrgGroupId == undefined) {\r\n                this.table = false;\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Org Group ID\" });\r\n                this.spinnerService.stop();\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        this.newItem.ITEM_TYPE_INDICATOR = this.selectedIndicator;\r\n        this.newItem.ORG_GROUP_ID = this.orgGroupIDForDBUpdate;\r\n        if (this.Title == \"Save\") {\r\n\r\n            try {\r\n                let webresp = new AtParWebApiResponse<TKIT_ITEM_TYPE>();\r\n                this.spinnerService.start();\r\n\r\n\r\n                this.mngEqTypeService.saveEqTypeData(this.newItem)\r\n                    .catch(this.httpService.handleError).then((resp: Response) => {\r\n                        webresp = resp.json() as AtParWebApiResponse<TKIT_ITEM_TYPE>\r\n                        this.spinnerService.stop();\r\n                        switch (webresp.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.growlMessage = [];\r\n                                let msg = AtParConstants.Created_Msg.replace(\"1%\", 'Equipment Type').replace(\"2%\", this.newItem.ITEM_TYPE);\r\n                                this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n                                this.equipmentStatus = null;\r\n                                this.descStatus = null;\r\n                                this.ddlOrgGpStatus = null;\r\n                                this.ddlindicatorStatus = null;\r\n                                this.loading = true;\r\n                                this.selectedOrgGroupId = \"\";\r\n                                this.newItem = new TKIT_ITEM_TYPE();\r\n                                if (this.blnShowOrgGroupDD) {\r\n                                    (<HTMLInputElement>document.getElementById('txtddllstOrgGroups')).focus();\r\n                                }\r\n                                else {\r\n                                    (<HTMLInputElement>document.getElementById('txtEquipment')).focus();\r\n                                }\r\n                                this.selectedIndicator = \"Select Indicator\";\r\n                                this.selectedOrgGroupId = \"\";\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            } catch (exMsg) {\r\n                this.clientErrorMsg(exMsg);\r\n            }\r\n        }\r\n        else {\r\n\r\n            try {\r\n                let webresp = new AtParWebApiResponse<TKIT_ITEM_TYPE>();\r\n                this.spinnerService.start();\r\n                this.mngEqTypeService.updateEqTypeData(this.newItem)\r\n                    .catch(this.httpService.handleError).then((resp: Response) => {\r\n                        webresp = resp.json() as AtParWebApiResponse<TKIT_ITEM_TYPE>\r\n                        this.spinnerService.stop();\r\n                        switch (webresp.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.growlMessage = [];\r\n\r\n                                let msg = AtParConstants.Updated_Msg.replace(\"1%\", 'Equipment Type').replace(\"2%\", this.newItem.ITEM_TYPE);\r\n                                this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n                                this.loading = false;\r\n                                //this.newItem = new TKIT_ITEM_TYPE();\r\n                                (<HTMLInputElement>document.getElementById('txtDesc')).focus();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            } catch (exMsg) {\r\n                this.clientErrorMsg(exMsg);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    filterStatus(value, field, mode) {\r\n        if (value == null) {\r\n            this.lstDepts = this.templstDepts;\r\n        }\r\n        else {\r\n            this.lstDepts = asEnumerable(this.templstDepts).Where(x => x.ITEM_TYPE_INDICATOR_DESC === value).Select(x => x).ToArray();\r\n        }\r\n    }\r\n\r\n    private ddlIndicatorChange() {\r\n        this.newItem.ITEM_TYPE_INDICATOR = this.selectedIndicator;\r\n        this.ddlOrgGpChange();\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-manage-equipment-type.component.ts","import {\r\n    NgModule, OnInit, Component, ElementRef, AfterViewInit, AfterViewChecked, OnDestroy,\r\n    Input, Output, EventEmitter, Renderer, ContentChild, ViewChild, trigger, state, style,\r\n    transition, animate\r\n} from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { ManageRequestorServices } from \"../../app/TrackIT/tkit-manage-requestor.services\";\r\nimport { AtParConstants } from \"../Shared/AtParConstants\";\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { TokenEntry_Enum, ClientType, ModeEnum, StatusType } from '../Shared/AtParEnums';\r\nimport { SelectItem, Message } from './../components/common/api';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { SpinnerSentEvent } from '../components/spinner/spinner.sent.event';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\r\nimport { AtParSharedDataService } from \"../Shared/AtParSharedDataService\";\r\nimport { AtParKeyValuePair } from '../../app/Entities/atparkeyvaluepair';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\nimport { TKIT_REQUESTOR } from \"../../app/Entities/TKIT_REQUESTOR\";\r\nimport { TKIT_DEPT } from \"../../app/Entities/TKIT_DEPT\";\r\nimport { TKIT_REQUESTOR_DEPT } from \"../../app/Entities/TKIT_REQUESTOR_DEPT\";\r\nimport { RM_SHIP_TO_LOCACTION } from \"../../app/Entities/RM_SHIP_TO_LOCACTION\";\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./tkit-manage-requestor.component.html'),\r\n    providers: [ManageRequestorServices, AtParConstants]\r\n})\r\n\r\nexport class ManageRequestorHomeComponent {\r\n    @ViewChild(DataTable) dataTableComponent: DataTable;\r\n    public newItem = new TKIT_REQUESTOR();\r\n    requestorData: TKIT_REQUESTOR[];\r\n    mainlstGridData: Array<TKIT_REQUESTOR>;\r\n    statusType: string = \"\";\r\n    sortedData: TKIT_REQUESTOR[];\r\n    statusList: any;\r\n    _deviceTokenEntry: string[] = [];\r\n    requestorSearch: string;\r\n    mode: string;\r\n    msgs: Message[] = [];\r\n    isVisible: boolean = false;\r\n    pazeSize: number;\r\n    isUpdate: boolean = false;\r\n    breadCrumbMenu: Menus;\r\n    statusMesssage: string = \"\";\r\n    \r\n    constructor(private manageRequestorServices: ManageRequestorServices,\r\n        private router: Router,\r\n        private spinnerService: SpinnerService,\r\n        private route: ActivatedRoute,\r\n        private atParConstant: AtParConstants,\r\n        private atParSharedDataService: AtParSharedDataService) {\r\n        this.breadCrumbMenu = new Menus();\r\n    }\r\n\r\n    \r\n\r\n    async dataFilter(evtdata, filed, filterMatchMode) {\r\n        let filterData;\r\n        this.requestorData.length = 0;\r\n\r\n        if (this.statusType.toString() == \"A\") {\r\n            filterData = this.mainlstGridData.filter(x => x.STATUS == 'A')\r\n        } else if (this.statusType.toString() == \"I\") {\r\n            filterData = this.mainlstGridData.filter(x => x.STATUS == 'I')\r\n        } else {\r\n            filterData = this.mainlstGridData\r\n        }\r\n        if (filterData != null) {\r\n            for (let x = 0; x < filterData.length; x++) {\r\n                let lstRequestorDetails = new TKIT_REQUESTOR();\r\n                lstRequestorDetails.REQUESTOR_ID = filterData[x].REQUESTOR_ID;\r\n                lstRequestorDetails.FIRST_NAME = filterData[x].FIRST_NAME;\r\n                lstRequestorDetails.LAST_NAME = filterData[x].LAST_NAME;\r\n                lstRequestorDetails.MIDDLE_INIT = filterData[x].MIDDLE_INIT;\r\n                lstRequestorDetails.ORG_GROUP_ID = filterData[x].ORG_GROUP_ID;\r\n                lstRequestorDetails.STATUS = filterData[x].STATUS;\r\n                if(lstRequestorDetails.STATUS== 'A') {\r\n                    lstRequestorDetails.checkStatus = true;\r\n                } else {\r\n                    lstRequestorDetails.checkStatus = false;\r\n                }\r\n                this.requestorData.push(lstRequestorDetails);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.statusList = [];\r\n        this.statusList.push({ label: 'All', value: \"\" });\r\n        this.statusList.push({ label: 'Active', value: 'A' });\r\n        this.statusList.push({ label: 'InActive', value: 'I' });\r\n        try {\r\n            if (this.atParSharedDataService.storage)\r\n                this.mode = this.atParSharedDataService.storage.mode;\r\n            this._deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n            this.msgs = [];\r\n            this.mainlstGridData = new Array<TKIT_REQUESTOR>();\r\n            \r\n            if (this.mode != undefined && this.mode == (ModeEnum.List).toString()) {\r\n                await this.BindGrid();\r\n            }\r\n            this.pazeSize = + this._deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n\r\n            if (this.atParSharedDataService.storage != undefined && this.atParSharedDataService.storage.summary != undefined) {\r\n                this.msgs.push(this.atParSharedDataService.storage);\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n\r\n    BindGrid()\r\n    {\r\n        try {\r\n            this.msgs = [];\r\n            this.statusType = \"\";\r\n            this.mainlstGridData = [];\r\n            this.requestorData = [];\r\n            this.isVisible = false;\r\n\r\n            if (this.dataTableComponent != null) {\r\n                this.dataTableComponent.reset();\r\n            }\r\n\r\n            this.spinnerService.start();\r\n            if (this.requestorSearch == undefined || this.requestorSearch == null ||\r\n                this.requestorSearch.trim().length == 0) {\r\n                    this.requestorSearch = '';\r\n            } \r\n                 \r\n            this.manageRequestorServices.getAllRequestors(this.requestorSearch, this._deviceTokenEntry)\r\n                .forEach(resp => {\r\n                     switch (resp.StatType) {\r\n                        case StatusType.Success:\r\n                            if (this.isUpdate == false) {\r\n                                this.msgs = [];\r\n                            }\r\n                            this.msgs = [];\r\n                            for (let x = 0; x < resp.DataList.length; x++) {\r\n                                if(resp.DataList[x].STATUS == 'A') {\r\n                                    resp.DataList[x].checkStatus = true;\r\n                                } else {\r\n                                    resp.DataList[x].checkStatus = false;\r\n                                }\r\n                            }\r\n                            this.requestorData = resp.DataList;\r\n                            for (let x = 0; x < this.requestorData.length; x++) {\r\n                                let requestorDataDetails = new TKIT_REQUESTOR();\r\n                                requestorDataDetails.REQUESTOR_ID = this.requestorData[x].REQUESTOR_ID;\r\n                                requestorDataDetails.FIRST_NAME = this.requestorData[x].FIRST_NAME;\r\n                                requestorDataDetails.LAST_NAME = this.requestorData[x].LAST_NAME;\r\n                                requestorDataDetails.MIDDLE_INIT = this.requestorData[x].MIDDLE_INIT;\r\n                                requestorDataDetails.ORG_GROUP_ID = this.requestorData[x].ORG_GROUP_ID;\r\n                                requestorDataDetails.STATUS = this.requestorData[x].STATUS;\r\n                                requestorDataDetails.checkStatus = this.requestorData[x].checkStatus;\r\n                                this.mainlstGridData.push(requestorDataDetails);\r\n                            }\r\n\r\n                            this.spinnerService.stop();\r\n                            if (this.requestorData != null && this.requestorData.length > 0) {\r\n                                this.isVisible = true;\r\n                            }\r\n                            \r\n                            break;\r\n                        case StatusType.Error:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            this.isVisible = false;\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            this.isVisible = false;\r\n                            break;\r\n                    }\r\n                });\r\n            this.isUpdate = false;\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"BindGrid\");\r\n        }\r\n    }\r\n\r\n    addRequestor() {\r\n       try {\r\n            this.breadCrumbMenu.SUB_MENU_NAME = 'Add Requestor';\r\n            this.breadCrumbMenu.IS_DIV = false;\r\n            this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n            this.atParSharedDataService.setStorage({ \"mode\": ModeEnum.Add });\r\n            let navigationExtras: NavigationExtras = {\r\n                queryParams: {\r\n                    \"mode\": ModeEnum.Add,\r\n                },\r\n                relativeTo: this.route\r\n            };\r\n            this.router.navigate(['addormodify'], navigationExtras);\r\n        } catch (ex) {\r\n           this.clientErrorMsg(ex, \"editRequestor\");\r\n        }\r\n    }\r\n   \r\n    editRequestor(requstorData) {\r\n        \r\n        try {\r\n            this.breadCrumbMenu.SUB_MENU_NAME = 'Edit Requestor';\r\n            this.breadCrumbMenu.IS_DIV = false;\r\n            this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n            this.atParSharedDataService.setStorage({ \"requestorID\": requstorData.REQUESTOR_ID, \"mode\": ModeEnum.Edit });\r\n            let navigationExtras: NavigationExtras = {\r\n                queryParams: {\r\n                    \"mode\": ModeEnum.Add,\r\n                },\r\n                relativeTo: this.route\r\n            };\r\n            this.router.navigate(['addormodify'], navigationExtras);\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"editRequestor\");\r\n        }\r\n        \r\n    }\r\n    \r\n    updateRequestorStatus (requstorData) {\r\n\r\n        this.spinnerService.start();\r\n        this.manageRequestorServices.updateRequestorStatus(requstorData.REQUESTOR_ID, requstorData.STATUS, this._deviceTokenEntry).forEach(resp => {\r\n            this.msgs = [];\r\n            switch (resp.StatType) {\r\n                case StatusType.Success:\r\n                let filterData: any = [];\r\n                this.requestorData = [];\r\n                let matchedrecord = this.mainlstGridData.filter(x => x.REQUESTOR_ID == requstorData.REQUESTOR_ID);\r\n                matchedrecord[0].STATUS = (requstorData.STATUS == 'A' ? \"I\" : \"A\");\r\n                console.log(this.mainlstGridData);\r\n                if (this.statusType.toString() == \"A\") {\r\n                    filterData = this.mainlstGridData.filter(x => x.STATUS == 'A');\r\n                } else if (this.statusType.toString() == \"I\") {\r\n                    filterData = this.mainlstGridData.filter(x => x.STATUS == 'I');\r\n                } else {\r\n                    filterData = this.mainlstGridData;\r\n                }\r\n                if (filterData != null) {\r\n                    for (let x = 0; x < filterData.length; x++) {\r\n                        let lstRequestorDetails = new TKIT_REQUESTOR();\r\n                        lstRequestorDetails.REQUESTOR_ID = filterData[x].REQUESTOR_ID;\r\n                        lstRequestorDetails.FIRST_NAME = filterData[x].FIRST_NAME;\r\n                        lstRequestorDetails.LAST_NAME = filterData[x].LAST_NAME;\r\n                        lstRequestorDetails.MIDDLE_INIT = filterData[x].MIDDLE_INIT;\r\n                        lstRequestorDetails.ORG_GROUP_ID = filterData[x].ORG_GROUP_ID;\r\n                        lstRequestorDetails.STATUS = filterData[x].STATUS;\r\n                        if(filterData[x].STATUS== 'A') {\r\n                            lstRequestorDetails.checkStatus = true;\r\n                        } else {\r\n                            lstRequestorDetails.checkStatus = false;\r\n                        }\r\n                        this.requestorData.push(lstRequestorDetails);\r\n                    }\r\n        \r\n                }\r\n                    this.statusMesssage = AtParConstants.Updated_Msg.replace(\"1%\", \"Requestor\").replace(\"2%\", requstorData.REQUESTOR_ID);\r\n                    this.msgs.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: this.statusMesssage });\r\n                    this.spinnerService.stop();\r\n                    break;\r\n                case StatusType.Error:\r\n                    this.statusMesssage = resp.StatusMessage;\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                    this.spinnerService.stop();\r\n                    break;\r\n                case StatusType.Warn:\r\n                    this.statusMesssage = resp.StatusMessage;\r\n                    this.msgs = [];\r\n                    this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                    this.spinnerService.stop();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.msgs = [];\r\n        this.atParConstant.catchClientError(this.msgs, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    /**\r\n  * delete all the values from variables\r\n  */\r\n    ngOnDestroy() {\r\n        this._deviceTokenEntry = [];\r\n        this.msgs = [];\r\n        this.spinnerService.stop();\r\n        this.spinnerService = null;\r\n        this.requestorData = [];\r\n        this.isVisible = false;\r\n    }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-manage-requestor-home.component.ts","import {\r\n    NgModule, OnInit, Component, ElementRef, AfterViewInit, AfterViewChecked, OnDestroy,\r\n    Input, Output, EventEmitter, Renderer, ContentChild, ViewChild, trigger, state, style, transition, animate\r\n} from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { ManageRequestorServices } from \"../../app/TrackIT/tkit-manage-requestor.services\";\r\nimport { AtParConstants } from \"../Shared/AtParConstants\";\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { TokenEntry_Enum, ClientType, ModeEnum, StatusType } from '../Shared/AtParEnums';\r\nimport { SelectItem, Message } from './../components/common/api';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { SpinnerSentEvent } from '../components/spinner/spinner.sent.event';\r\nimport { Http, Response, Jsonp, RequestOptions, Headers, } from '@angular/http';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\r\nimport { AtParSharedDataService } from \"../Shared/AtParSharedDataService\";\r\nimport { AtParKeyValuePair } from '../../app/Entities/atparkeyvaluepair';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\nimport { TKIT_REQUESTOR } from \"../../app/Entities/TKIT_REQUESTOR\";\r\nimport { TKIT_DEPT } from \"../../app/Entities/TKIT_DEPT\";\r\nimport { TKIT_REQUESTOR_DEPT } from \"../../app/Entities/TKIT_REQUESTOR_DEPT\";\r\nimport { RM_SHIP_TO_LOCACTION } from \"../../app/Entities/RM_SHIP_TO_LOCACTION\";\r\nimport { MT_ATPAR_ORG_GROUPS } from \"../../app/Entities/mt_atpar_org_groups\";\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n    template: require('./tkit-manage-requestor-modify.component.html'),\r\n    providers: [ManageRequestorServices, AtParConstants]\r\n})\r\n\r\nexport class ManageRequestorModifyComponent {\r\n    public newItem = new TKIT_REQUESTOR();\r\n    requestorData: TKIT_REQUESTOR[];\r\n    requestorID: string;\r\n    departmentsData: TKIT_DEPT[];\r\n    lstDepartments: SelectItem[] = [];\r\n    lstSelectedDepartments:any;\r\n    lstLocations: SelectItem[] = [];\r\n    locationData: RM_SHIP_TO_LOCACTION[];\r\n    mainlstGridData: Array<TKIT_REQUESTOR>;\r\n    statusType: string = \"\";\r\n    sortedData: TKIT_REQUESTOR[];\r\n    statusList: any;\r\n    _deviceTokenEntry: string[] = [];\r\n    requestorIdSearch: string;\r\n    mode: string;\r\n    msgs: Message[] = [];\r\n    isVisible: boolean = false;\r\n    pazeSize: number;\r\n    isUpdate: boolean = false;\r\n    breadCrumbMenu: Menus;\r\n    bindSymbal: string;\r\n    isEditMode: boolean;\r\n    loading: boolean = true;\r\n    showLable: boolean = false;\r\n    showTextBox: boolean = false;\r\n    orgGroupList: MT_ATPAR_ORG_GROUPS[];\r\n    orgGroupData: SelectItem[] = [];\r\n    seletedOrgGroupId: string;\r\n    statusMesssage: string = \"\";\r\n    Title: string = \"\";\r\n    requestorStatus: number;\r\n    passwordStatus: number;\r\n    firstNameStatus: number;\r\n    lastNameStatus: number;\r\n    middleNameStatus: number;\r\n    emailStatus: number;\r\n    phoneStatus: number;\r\n    faxStatus: number;\r\n    pagerStatus: number;\r\n    recordsPerPageStatus: number;\r\n    defaultRptDurationStatus: number;\r\n    orgGroupStatus: number;\r\n    departmentStatus: number;\r\n    deliverLocationtatus: number;\r\n    visiblePassword = false;\r\n    activeLblPassword: String;\r\n    trackItUserSelectedFile: string = \"\";\r\n    showUploadImage: boolean = false;\r\n    ddRecordsPerPage: any[] = [];\r\n    encryptedCurrentPwd: any;\r\n\r\n    constructor(private manageRequestorServices: ManageRequestorServices,\r\n        private router: Router,\r\n        private spinnerService: SpinnerService,\r\n        private route: ActivatedRoute,\r\n        private atParConstant: AtParConstants,\r\n        private atParSharedDataService: AtParSharedDataService,\r\n        private http: Http,\r\n        private httpService: HttpService) {\r\n        this.breadCrumbMenu = new Menus();\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this._deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n        this.getTrackITAllDepartments();\r\n        this.getLocations();\r\n        this.getOrgGroupList();\r\n        this.getRecordsPerPageddData();\r\n        try {\r\n            this.mode = this.atParSharedDataService.storage.mode;\r\n            if (this.mode == (ModeEnum.Add).toString()) {\r\n                this.showLable = false;\r\n                this.showTextBox = true;\r\n                this.newItem = new TKIT_REQUESTOR();\r\n                this.Title = \"Save\";\r\n                this.bindSymbal = \"floppy-o\"\r\n                this.newItem.checkStatus = true;\r\n                this.newItem.STATUS = 'A';\r\n                this.newItem.RECORDS_PER_PAGE = 10;\r\n            }\r\n            else if (this.mode == (ModeEnum.Edit).toString()) {\r\n                this.showLable = true;\r\n                this.bindSymbal = \"check\";\r\n                this.isEditMode = true;\r\n                this.loading = false;\r\n                this.showTextBox = false;\r\n                this.Title = \"Update Requestor\";\r\n                this.requestorID = this.atParSharedDataService.storage.requestorID;\r\n                if (this.requestorID != undefined && this.requestorID != null) {\r\n\r\n                    await this.getRequestorDetails();\r\n                }\r\n\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n    \r\n\r\n    getRecordsPerPageddData() {\r\n        try {\r\n            for (var i = 10; i <= 100;) {\r\n                this.ddRecordsPerPage.push({ label: i.toString(), value: i.toString() });\r\n                i += 10;\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"getRecordsPerPageddData\");\r\n        }\r\n    }\r\n\r\n    onFocusPassword() {\r\n        try {\r\n            if (this.newItem.PASSWORD == \"undefined\") {\r\n                this.visiblePassword = !this.visiblePassword;\r\n            }\r\n            else {\r\n                this.visiblePassword = true;\r\n            }\r\n            this.activeLblPassword = this.visiblePassword ? 'input-disturbed' : 'hide-class';\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onFocusPassword\");\r\n        }\r\n    }\r\n\r\n    locationChange(): void {\r\n        if (this.newItem.LOCATION_ID != undefined && this.newItem.LOCATION_ID != null && this.newItem.LOCATION_ID != \"\") {\r\n            this.deliverLocationtatus = 0;\r\n        }\r\n        else {\r\n            this.deliverLocationtatus = 1;\r\n        }\r\n    }\r\n\r\n    checkPswdValidation() {\r\n        if (this.newItem.PASSWORD == \"\") {\r\n            this.loading = true;\r\n        }\r\n        else {\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    bindModelDataChange(event) {\r\n        try {\r\n            if (this.Title == \"Update Requestor\") {\r\n                this.requestorStatus = 0;\r\n                this.firstNameStatus = 0;\r\n                this.lastNameStatus = 0;\r\n                this.recordsPerPageStatus = 0;\r\n                this.defaultRptDurationStatus = 0;\r\n            }\r\n\r\n            if (\"txtRequetorId\" == event.TextBoxID.toString()) {\r\n                this.requestorStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n\r\n            if (\"txtFirstName\" == event.TextBoxID.toString()) {\r\n                this.firstNameStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtLastName\" == event.TextBoxID.toString()) {\r\n                this.lastNameStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtMiddleName\" == event.TextBoxID.toString()) {\r\n                this.middleNameStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtEmail\" == event.TextBoxID.toString()) {\r\n                this.emailStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtPhone\" == event.TextBoxID.toString()) {\r\n                this.phoneStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtFax\" == event.TextBoxID.toString()) {\r\n                this.faxStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtPager\" == event.TextBoxID.toString()) {\r\n                this.pagerStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"ddlddRecordsPerPage\" == event.TextBoxID.toString()) {\r\n                this.recordsPerPageStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtDefaultRptDuration\" == event.TextBoxID.toString()) {\r\n                this.defaultRptDurationStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n\r\n            if (this.newItem.PASSWORD == \"\") {\r\n                this.loading = true;\r\n            }\r\n            else {\r\n                this.loading = false;\r\n            }\r\n            this.btnEnableDisable();\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindModelDataChange\");\r\n        }\r\n\r\n    }\r\n\r\n    btnEnableDisable() {\r\n        if (this.Title == \"Update Requestor\") {\r\n            this.requestorStatus = 0;\r\n            this.firstNameStatus = 0;\r\n            this.lastNameStatus = 0;\r\n            this.recordsPerPageStatus = 0;\r\n            this.defaultRptDurationStatus = 0;\r\n        }\r\n        if (this.requestorStatus == 0 && this.newItem.REQUESTOR_ID != \"\" && this.newItem.REQUESTOR_ID != null && this.newItem.REQUESTOR_ID != undefined\r\n            && this.newItem.PASSWORD != undefined && this.newItem.PASSWORD != null && this.newItem.PASSWORD != \"\"\r\n            && this.firstNameStatus == 0 && this.newItem.FIRST_NAME != undefined && this.newItem.FIRST_NAME != null && this.newItem.FIRST_NAME != \"\"\r\n            && this.lastNameStatus == 0 && this.newItem.LAST_NAME !== undefined && this.newItem.LAST_NAME != null && this.newItem.LAST_NAME !== \"\"\r\n            && this.defaultRptDurationStatus == 0 && this.newItem.DEFAULT_REPORT_DURATION != undefined && this.newItem.DEFAULT_REPORT_DURATION != null && this.newItem.DEFAULT_REPORT_DURATION != 0\r\n            && this.newItem.ORG_GROUP_ID != undefined && this.newItem.ORG_GROUP_ID != null && this.newItem.ORG_GROUP_ID != \"Select One\"\r\n            && this.lstSelectedDepartments != undefined && this.lstSelectedDepartments != null && this.lstSelectedDepartments.length > 0) {\r\n            if ((this.middleNameStatus == undefined || this.middleNameStatus == 0) &&\r\n                (this.phoneStatus == undefined || this.phoneStatus == 0) &&\r\n                (this.emailStatus == undefined || this.emailStatus == 0) &&\r\n                (this.faxStatus == undefined || this.faxStatus == 0) &&\r\n                (this.pagerStatus == undefined || this.pagerStatus == 0)) {\r\n                this.loading = false;\r\n            }\r\n            else {\r\n                this.loading = true;\r\n            }\r\n        } else {\r\n            this.loading = true;\r\n        }\r\n\r\n    }\r\n\r\n    async getTrackITAllDepartments() {\r\n        this.spinnerService.start();\r\n        await this.manageRequestorServices.getTKITAllDepts('', 'A', this._deviceTokenEntry)\r\n            .forEach(resp => {\r\n                switch (resp.StatType) {\r\n                    case StatusType.Success: {\r\n                        if (this.isUpdate == false) {\r\n                            this.msgs = [];\r\n                        }\r\n                        this.msgs = [];\r\n                        this.departmentsData = resp.DataList;\r\n\r\n                        this.lstDepartments = [];\r\n                        for (var i = 0; i < this.departmentsData.length; i++) {\r\n                            this.lstDepartments.push({ label: this.departmentsData[i].DESCRIPTION + \" - \" + this.departmentsData[i].DEPT_ID, value: this.departmentsData[i].DEPT_ID })\r\n                        }\r\n                        this.spinnerService.stop();\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                        this.spinnerService.stop();\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                        this.spinnerService.stop();\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    async getLocations() {\r\n        this.spinnerService.start();\r\n        await this.manageRequestorServices.getLocations(this._deviceTokenEntry)\r\n            .forEach(resp => {\r\n                switch (resp.StatType) {\r\n                    case StatusType.Success: {\r\n                        if (this.isUpdate == false) {\r\n                            this.msgs = [];\r\n                        }\r\n                        this.msgs = [];\r\n                        this.lstLocations = [];\r\n                        this.locationData = resp.DataList;\r\n                        this.lstLocations.push({ label: \"Select Deliver Location\", value: \"\" });\r\n                        for (var i = 0; i < this.locationData.length; i++) {\r\n                            this.lstLocations.push({ label: this.locationData[i].LOCATION_NAME + \" (\" + this.locationData[i].LOCATION_ID + \")\", value: this.locationData[i].LOCATION_ID })\r\n                        }\r\n                        this.spinnerService.stop();\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                        this.spinnerService.stop();\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                        this.spinnerService.stop();\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    async getOrgGroupList() {\r\n        this.spinnerService.start();\r\n        await this.manageRequestorServices.getOrgGroupList(this._deviceTokenEntry[TokenEntry_Enum.UserID])\r\n            .forEach(resp => {\r\n                this.msgs = [];\r\n                this.orgGroupData = [];\r\n                this.orgGroupData.push({ label: 'Select One', value: 'Select One' });\r\n                switch (resp.StatType) {\r\n                    case StatusType.Success: {\r\n                        this.orgGroupList = [];\r\n                        this.orgGroupList = resp.DataList;\r\n                        if (this.orgGroupList.length) {\r\n                            for (let i = 0; i < this.orgGroupList.length; i++) {\r\n                                this.orgGroupData.push({ label: this.orgGroupList[i].ORG_GROUP_ID + '-' + this.orgGroupList[i].ORG_GROUP_NAME, value: this.orgGroupList[i].ORG_GROUP_ID })\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.spinnerService.stop();\r\n                        this.statusMesssage = resp.StatusMessage;\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.msgs = [];\r\n                        this.statusMesssage = resp.StatusMessage;\r\n                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    async getRequestorDetails() {\r\n        this.spinnerService.start();\r\n        await this.manageRequestorServices.getRequestorDetails(this.requestorID, this._deviceTokenEntry)\r\n            .forEach(resp => {\r\n                switch (resp.StatType) {\r\n                    case StatusType.Success: {\r\n                        if (this.isUpdate == false) {\r\n                            this.msgs = [];\r\n                        }\r\n                        this.msgs = [];\r\n\r\n                        this.newItem = resp.DataDictionary.Requestors[0];\r\n                        if (this.newItem.STATUS == 'A') {\r\n                            this.newItem.checkStatus = true;\r\n                        } else {\r\n                            this.newItem.checkStatus = false;\r\n                        }\r\n                        setTimeout(() => {\r\n                        this.lstSelectedDepartments = [];\r\n                            this.lstSelectedDepartments = resp.DataDictionary.Departments;}, 300);\r\n                        \r\n                        this.spinnerService.stop();\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                        this.spinnerService.stop();\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.msgs = [];\r\n                        this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                        this.spinnerService.stop();\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    async createOrModifyRequestor() {\r\n        try {\r\n            if (this.newItem.checkStatus == false) {\r\n                this.newItem.STATUS = 'I'\r\n            }\r\n            else { this.newItem.STATUS = 'A' }\r\n\r\n            var key = CryptoJS.enc.Utf8.parse('8080808080808080');\r\n            var iv = CryptoJS.enc.Utf8.parse('8080808080808080');\r\n\r\n            this.encryptedCurrentPwd = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(this.newItem.PASSWORD), key,\r\n                { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\r\n\r\n            if (this.mode == (ModeEnum.Add).toString()) {\r\n                await this.manageRequestorServices.saveRequestorDetails(this.newItem, this.lstSelectedDepartments, this.encryptedCurrentPwd ,this._deviceTokenEntry).forEach(resp => {\r\n                    this.msgs = [];\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.statusMesssage = AtParConstants.Created_Msg.replace(\"1%\", \"Requestor\").replace(\"2%\", this.newItem.REQUESTOR_ID);\r\n                            this.msgs.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: this.statusMesssage });\r\n                            this.newItem = new TKIT_REQUESTOR();\r\n                            this.seletedOrgGroupId = \"\";\r\n                            this.lstSelectedDepartments = [];\r\n                            this.newItem.LOCATION_ID = \"\";\r\n                            document.getElementById('txtRequetorId').focus();\r\n                            this.loading = true;\r\n                            this.newItem.STATUS = 'A';\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.statusMesssage = resp.StatusMessage;\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.statusMesssage = resp.StatusMessage;\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else if (this.mode == (ModeEnum.Edit).toString()) {\r\n                this.spinnerService.start();\r\n                this.newItem.checkStatus == true ? this.newItem.STATUS = 'A' : this.newItem.STATUS = 'I';\r\n                await this.manageRequestorServices.updateRequestorDetails(this.newItem, this.lstSelectedDepartments, this.encryptedCurrentPwd, this._deviceTokenEntry).forEach(resp => {\r\n                    this.msgs = [];\r\n                    switch (resp.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.statusMesssage = AtParConstants.Updated_Msg.replace(\"1%\", \"Requestor\").replace(\"2%\", this.newItem.REQUESTOR_ID);\r\n                            this.msgs.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: this.statusMesssage });\r\n                            document.getElementById('txtPassword').focus();\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.statusMesssage = resp.StatusMessage;\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.statusMesssage = resp.StatusMessage;\r\n                            this.msgs = [];\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: resp.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n\r\n    files: any;\r\n    fileUpload(event) {\r\n        try {\r\n            this.spinnerService.start();\r\n            let fileList: FileList = event.target.files;\r\n            this.trackItUserSelectedFile = event.target.files[0].name;\r\n            let formData: FormData = new FormData();\r\n            if (fileList.length > 0) {\r\n                let file: File = fileList[0];\r\n                this.files = file.name;\r\n                var listData = [];\r\n                var obj = { FileName: file.name, File: file };\r\n                listData.push(obj);\r\n                formData.append('uploadFile', file, file.name);\r\n            }\r\n            let headers = new Headers();\r\n            headers.append('Authorization', 'bearer');\r\n            headers.append('enctype', 'multipart/form-data');\r\n            let options = new RequestOptions({ headers: headers });\r\n            let apiUrl = this.httpService.BaseUrl + \"/api/CommonTrackIT/SaveTrackItUserProfileImage\";\r\n\r\n            this.http.post(apiUrl, formData, options).toPromise()\r\n                .then((res: Response) => {\r\n                    this.msgs = [];\r\n                    this.spinnerService.stop();\r\n                    let data = res.json();\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.files = '';\r\n                            this.showUploadImage = false;\r\n                            this.msgs.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.showUploadImage = true;\r\n                            this.msgs.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.showUploadImage = true;\r\n                            this.msgs.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.msgs.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                },\r\n                error => console.log(error)\r\n                );\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"fileUpload\");\r\n        }\r\n    }\r\n\r\n    navigateToRequestorterHome() {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = '';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        let navigationExtras: NavigationExtras = {\r\n            relativeTo: this.route\r\n        };\r\n        this.router.navigate(['../'], navigationExtras);\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.msgs = [];\r\n        this.atParConstant.catchClientError(this.msgs, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    /**\r\n  * delete all the values from variables\r\n  */\r\n    ngOnDestroy() {\r\n        this._deviceTokenEntry = [];\r\n        this.msgs = [];\r\n        this.spinnerService.stop();\r\n        this.spinnerService = null;\r\n        this.requestorData = [];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-manage-requestor-modify.component.ts","import { Component } from '@angular/core';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: '<router-outlet></router-outlet>'\r\n})\r\n\r\nexport class ManageRequestorComponent {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-manage-requestor.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { MT_POU_DEPT } from '../../app/Entities/MT_POU_DEPT';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { TKIT_REQUESTOR } from \"../../app/Entities/TKIT_REQUESTOR\";\r\nimport { TKIT_DEPT } from \"../../app/Entities/TKIT_DEPT\";\r\nimport { TKIT_REQUESTOR_DEPT } from \"../../app/Entities/TKIT_REQUESTOR_DEPT\";\r\nimport { RM_SHIP_TO_LOCACTION } from \"../../app/Entities/RM_SHIP_TO_LOCACTION\";\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/mt_atpar_org_groups';\r\n@Injectable()\r\nexport class ManageRequestorServices {\r\n    public headers: Headers;\r\n    constructor(private httpservice: HttpService) {\r\n\r\n    }\r\n\r\n    getTKITAllDepts(deptID, status, deviceTokenEntry) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/ManageRequestor/GetTKITAllDepts\",\r\n            params: {\r\n                \"deptID\": deptID,\r\n                \"status\": status,\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n\r\n            }\r\n        }).map(res => <TKIT_DEPT[]>res.json()).catch(this.handleError);\r\n    }\r\n    \r\n    getAllRequestors(search, devicetokenEntry) {\r\n         return this.httpservice.get({\r\n             apiMethod: \"/api/ManageRequestor/GetAllRequestors\",\r\n             params: {\r\n\r\n                \"search\": search,\r\n                \"devicetokenEntry\": devicetokenEntry\r\n             }\r\n\r\n         }).map(res => <TKIT_REQUESTOR[]>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    getRequestorDetails(requestorID, devicetokenEntry) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/ManageRequestor/GetRequestorDetails\",\r\n            params: {\r\n                \"requestorID\": requestorID,\r\n                \"deviceTokenEntry\": devicetokenEntry\r\n            }\r\n        }).map(res => <TKIT_REQUESTOR[]>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    getLocations( devicetokenEntry) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/CommonTrackIT/GetLocations\",\r\n            params: {\r\n\r\n                \"deviceTokenEntry\": devicetokenEntry\r\n            }\r\n        }).map(res => <RM_SHIP_TO_LOCACTION[]>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    getOrgGroupList(userId) {\r\n\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/Common/GetOrgDetails\",\r\n            params: {\r\n                \"userId\": userId\r\n\r\n            }\r\n\r\n        }).map(res => <MT_ATPAR_ORG_GROUPS[]>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    saveRequestorDetails(requestor, lstRequestorDepts,Password, deviceTokenEntry) {\r\n        var requestorDetails = { \"requestor\": requestor, \"lstRequestorDepts\": lstRequestorDepts };\r\n        return this.httpservice.create({\r\n            apiMethod: \"/api/ManageRequestor/SaveRequestorDetails\",\r\n            formData: requestorDetails,\r\n            params: {\r\n                \"pPassword\": Password,\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        }).map(res => res.json()).catch(this.handleError);\r\n\r\n    }\r\n\r\n    updateRequestorDetails(requestor, lstRequestorDepts, Password,deviceTokenEntry) {\r\n        var requestorDetails = { \"requestor\": requestor, \"lstRequestorDepts\": lstRequestorDepts };\r\n        return this.httpservice.update({\r\n            apiMethod: '/api/ManageRequestor/UpdateRequestorDetails',\r\n            formData: requestorDetails,\r\n            params: {\r\n                \"pPassword\": Password,\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        }).map(res => res.json()).catch(this.handleError);\r\n\r\n    }\r\n\r\n    updateRequestorStatus(requestorID, status, deviceTokenEntry) {\r\n        if (status == 'A') {\r\n            return this.httpservice.update({\r\n                apiMethod: '/api/ManageRequestor/UpdateRequestorStatus',\r\n               \r\n                params: {\r\n                    \"requestorID\": requestorID,\r\n                    \"status\": \"I\",\r\n                    \"deviceTokenEntry\": deviceTokenEntry\r\n                }\r\n            }).map(res => res.json()).catch(this.handleError);\r\n\r\n        } else {\r\n            return this.httpservice.update({\r\n                apiMethod: '/api/ManageRequestor/UpdateRequestorStatus',\r\n               \r\n                params: {\r\n                    \"requestorID\": requestorID,\r\n                    \"status\": \"A\",\r\n                    \"deviceTokenEntry\": deviceTokenEntry\r\n                }\r\n            }).map(res => res.json()).catch(this.handleError);\r\n\r\n        }\r\n        \r\n\r\n    }\r\n    \r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n    \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-manage-requestor.services.ts","import { Component } from '@angular/core';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./tkit-newitem-audit-report.component.html')\r\n})\r\n\r\nexport class NewItemAuditReportComponent {\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-newitem-audit-report.component.ts","import { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { Employee } from '../components/datatable/employee';\r\nimport { TKIT_REASON_CODES } from \"../Entities/TKIT_REASON_CODES\";\r\nimport { ReasonCodeService } from './tkit-setup-reason-codes.service';\r\nimport { TokenEntry_Enum, EnumApps, ModeEnum, YesNo_Enum, StatusType, } from '../Shared/AtParEnums'\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtparStatusCodes, } from '../Shared/AtParStatusCodes';\r\nimport { Http, Response } from '@angular/http';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { Message } from './../components/common/api';\r\nimport { MT_ATPAR_SECURITY_AUDIT } from '../Entities/MT_ATPAR_SECURITY_AUDIT';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\nimport { LeftBarAnimationService } from '../Home/leftbar-animation.service';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { SelectItem } from '../components/common/api';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n    template: require('./tkit-setup-reason-codes.component.html'),\r\n    providers: [datatableservice, ReasonCodeService, HttpService, AtParCommonService, AtParConstants]\r\n})\r\n\r\nexport class SetupReasonCodesComponent {\r\n    @ViewChild(DataTable) dataTableComponent: DataTable;\r\n    reasonCodeSearch: string = \"\";\r\n    showAddButton: boolean = true;\r\n    mode: string;\r\n    pop: boolean = false;\r\n    table: boolean = true;\r\n    form: boolean = false;\r\n    editform: boolean = false;\r\n    ven: any;\r\n    Title: string = \"\";\r\n    bindSymbal: string = \"\";\r\n    loading: boolean = true;\r\n    reasonCodeStatus: number;\r\n    descStatus: number;\r\n    ddlOrgIDStatus: number;\r\n\r\n    showTextBox: boolean = false;\r\n    showLable: boolean = false;\r\n    public newItem = new TKIT_REASON_CODES();\r\n    growlMessage: Message[] = [];\r\n    _deviceTokenEntry: string[] = [];\r\n    lstReasonCodes: TKIT_REASON_CODES[];\r\n    mainlstGridData: TKIT_REASON_CODES[];\r\n    ddlStatusType: any[] = [];\r\n    pageSize: number;\r\n    menuCode: string;\r\n    appID: string;\r\n    auditSatus: string = \"\";\r\n    lstOrgGroups: SelectItem[] = [];\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    blnShowOrgGroupDD: boolean = false;\r\n    orgGrpId: string = \"\";\r\n    selectedOrgGroupId: string = \"\";\r\n    orgGroupIDForDBUpdate: string;\r\n    statusType: string;\r\n    breadCrumbMenu: Menus;\r\n\r\n    constructor(public dataservice: datatableservice,\r\n        private reasonCodeService: ReasonCodeService,\r\n        private httpService: HttpService,\r\n        private spinnerService: SpinnerService,\r\n        private commonService: AtParCommonService,\r\n        private atParConstant: AtParConstants,\r\n        private leftBarAnimationService: LeftBarAnimationService) {\r\n        this.breadCrumbMenu = new Menus();\r\n        this.ven = new Employee();\r\n        this._deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n    }\r\n\r\n\r\n    addReasonCode() {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = 'Add Reason Code';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        this.showTextBox = true;\r\n        this.showLable = false;\r\n        this.form = true;\r\n        this.editform = false;\r\n        this.table = false;\r\n        this.pop = false;\r\n        this.Title = \"Save\";\r\n        this.bindSymbal = \"floppy-o\";\r\n        this.showAddButton = false;\r\n        this.mode = ModeEnum[ModeEnum.Add].toString();\r\n        this.reasonCodeStatus = null;\r\n        this.descStatus = null;\r\n        this.newItem = new TKIT_REASON_CODES();\r\n        this.reasonCodeSearch = \"\";\r\n        //this.blnShowOrgGroupDD = true;\r\n        //this.blnShowOrgGroupLabel = false;\r\n        this.loading = true;\r\n        this.bindOrgGroups();\r\n        this.ddlOrgIDStatus = null;\r\n    }\r\n\r\n    tbl() {\r\n        this.form = false;\r\n        this.editform = false;\r\n        this.table = false;\r\n        this.pop = false;\r\n        this.table = true;\r\n    }\r\n\r\n    edit(data) {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = 'Edit Reason Code';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        this.showTextBox = false;\r\n        this.showLable = true;\r\n        this.form = true;\r\n        this.table = false;\r\n        this.showAddButton = false;\r\n        this.Title = \"Update\";\r\n        this.bindSymbal = \"check\";\r\n        this.newItem = data;\r\n        this.mode = ModeEnum[ModeEnum.Edit].toString();\r\n        this.loading = false;\r\n        this.reasonCodeSearch = \"\";\r\n        this.orgGrpId = data.ORG_GROUP_ID;\r\n        this.blnShowOrgGroupDD = false;\r\n        this.blnShowOrgGroupLabel = true;\r\n    }\r\n\r\n    save() {\r\n        this.editform = false;\r\n    }\r\n\r\n    close() {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = '';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        this.form = false;\r\n        this.table = true;\r\n        this.pop = true;\r\n        this.editform = false;\r\n        this.table = false;\r\n        this.showAddButton = true;\r\n        this.newItem = new TKIT_REASON_CODES();\r\n        this.reasonCodeSearch = \"\";\r\n        this.selectedOrgGroupId = \"\";\r\n        this.growlMessage = [];\r\n    }\r\n\r\n    clientErrorMsg(strExMsg) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString());\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.table = false;\r\n        this.showAddButton = true;\r\n        this.ddlStatusType.push({ label: 'All', value: \"\" });\r\n\r\n        // Negative binding due to SQL Server db.  0 - active and 1 - inactive\r\n        this.ddlStatusType.push({ label: 'Active', value: true });\r\n        this.ddlStatusType.push({ label: 'Inactive', value: false });\r\n        this.pageSize = + this._deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n        this.menuCode = localStorage.getItem(\"menuCode\") != null ? localStorage.getItem(\"menuCode\") : 'mt_tkit_setup_reason_codes.aspx';\r\n        this.appID = (EnumApps.TrackIT).toString();\r\n        this.mainlstGridData = new Array<TKIT_REASON_CODES>()\r\n        this.checkAuditAllowed();\r\n        this.statusType = \"\";\r\n        //this.bindOrgGroups();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.reasonCodeSearch = null;\r\n        this.mode = null;\r\n        this.Title = null;\r\n        this.bindSymbal = null;\r\n        this.reasonCodeStatus = null;\r\n        this.descStatus = null;\r\n        this.newItem = null;\r\n        this.growlMessage = null;\r\n        this._deviceTokenEntry = null;\r\n        this.lstReasonCodes = null;\r\n        this.ddlStatusType = null;\r\n        this.pageSize = null;\r\n        this.menuCode = null;\r\n        this.appID = null;\r\n        this.auditSatus = null;\r\n    }\r\n\r\n\r\n    // Add and Update button validations\r\n    bindModelDataChange(event: any) {\r\n        try {\r\n            if (\"txtReasonCode\" == event.TextBoxID.toString()) {\r\n                this.reasonCodeStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtDesc\" == event.TextBoxID.toString()) {\r\n                this.descStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (this.Title == \"Update\") {\r\n                this.reasonCodeStatus = 0;\r\n            }\r\n            this.ddlOrgIDChanged();\r\n            if (this.reasonCodeStatus == 0 && this.ddlOrgIDStatus == 0) {\r\n                if (this.descStatus == null || this.descStatus == undefined || this.descStatus == 0) {\r\n                    this.loading = false;\r\n                }\r\n                else {\r\n                    this.loading = true;\r\n                }\r\n            }\r\n            else {\r\n                this.loading = true;\r\n            }\r\n\r\n\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n    }\r\n\r\n    async bindOrgGroups() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.growlMessage = [];\r\n            this.lstOrgGroups = [];\r\n            await this.commonService.getUserOrgGroups(this._deviceTokenEntry[TokenEntry_Enum.UserID], this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.spinnerService.stop();\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n                            // this.blnStatusMsg = false;\r\n\r\n                            if (this.orgGroupData.length == 1) {\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.blnShowOrgGroupDD = false;\r\n                                this.orgGrpId = this.orgGroupData[0].ORG_GROUP_ID + ' - ' + this.orgGroupData[0].ORG_GROUP_NAME;\r\n                                break;\r\n\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.blnShowOrgGroupDD = true;\r\n                                this.blnShowOrgGroupLabel = false;\r\n                                this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" })\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID !== \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + ' - ' + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: AtParConstants.ClientErrorMessage });\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async BindGrid() {\r\n        this.mainlstGridData = [];\r\n        this.lstReasonCodes = [];\r\n        this.statusType = \"\";\r\n\r\n\r\n        //if (this.table == true) {\r\n        //    this.dataTableComponent.reset();\r\n        //    this.statusType = null;\r\n        //}\r\n\r\n        try {\r\n            this.table = false;\r\n            if (this.mode == \"Edit\") {\r\n                this.showAddButton = true;\r\n            }\r\n            this.spinnerService.start();\r\n            if (this.reasonCodeSearch == null || this.reasonCodeSearch == undefined || this.reasonCodeSearch === \"\") {\r\n                this.reasonCodeSearch = \"\";\r\n            }\r\n\r\n            await this.reasonCodeService.getReasonCodes(this.reasonCodeSearch, \"\")\r\n                .catch(this.httpService.handleError)\r\n                .then((resp: Response) => {\r\n                    let webresp = resp.json() as AtParWebApiResponse<TKIT_REASON_CODES>\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            this.growlMessage = [];\r\n                            this.lstReasonCodes = [];\r\n                            this.mainlstGridData = [];\r\n                            this.lstReasonCodes = webresp.DataList;\r\n\r\n                            for (var item = 0; item < this.lstReasonCodes.length; item++) {\r\n\r\n                                if (this.lstReasonCodes[item].STATUS == false) {\r\n                                    this.lstReasonCodes[item].STATUS = true;\r\n                                } else {\r\n                                    this.lstReasonCodes[item].STATUS = false;\r\n                                }\r\n\r\n                                this.mainlstGridData.push(this.lstReasonCodes[item]);\r\n                            }\r\n                            this.table = true;\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.table = false;\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: \"warn\", summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.table = false;\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: \"info\", summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.table = false;\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: \"error\", summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n    }\r\n\r\n    async changeStatus(reasonCode) {\r\n\r\n        this.growlMessage = [];\r\n        this.spinnerService.start();\r\n        try {\r\n            var webresp = new AtParWebApiResponse<TKIT_REASON_CODES>();\r\n            //await this.reasonCodeService.deleteReasonCode(reasonCode.REASON_CODE, !reasonCode.STATUS)\r\n            \r\n            await this.reasonCodeService.deleteReasonCode(reasonCode.REASON_CODE, !reasonCode.STATUS)\r\n                .catch(this.httpService.handleError).then(async (resp: Response) => {\r\n                    webresp = resp.json() as AtParWebApiResponse<TKIT_REASON_CODES>\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n                        case StatusType.Success:\r\n                            // await this.BindGrid();\r\n                            this.growlMessage = [];\r\n                            let msg = AtParConstants.Updated_Status_Msg.replace(\"1%\", 'Reason Code').replace(\"2%\", reasonCode.REASON_CODE);\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n\r\n                            let filterData: any = [];\r\n                            this.lstReasonCodes = [];\r\n                            let matchedrecord = this.mainlstGridData.filter(x => x.REASON_CODE == reasonCode.REASON_CODE)\r\n                            matchedrecord[0].STATUS = reasonCode.STATUS;\r\n\r\n                            if (this.statusType.toString() == \"false\") {\r\n                                filterData = this.mainlstGridData.filter(x => x.STATUS == false)\r\n                            } else if (this.statusType.toString() == \"true\") {\r\n                                filterData = this.mainlstGridData.filter(x => x.STATUS == true)\r\n                            } else {\r\n                                filterData = this.mainlstGridData\r\n                            }\r\n                            if (filterData != null) {\r\n                                for (let x = 0; x < filterData.length; x++) {\r\n                                    let lstSetupcodeDetails = new TKIT_REASON_CODES();\r\n                                    lstSetupcodeDetails.ORG_GROUP_ID = filterData[x].ORG_GROUP_ID;\r\n                                    lstSetupcodeDetails.REASON_CODE = filterData[x].REASON_CODE;\r\n                                    lstSetupcodeDetails.REASON_DESCR = filterData[x].REASON_DESCR;\r\n\r\n                                    lstSetupcodeDetails.UPDATE_DATE = filterData[x].UPDATE_DATE;\r\n                                    lstSetupcodeDetails.UPDATE_USERID = filterData[x].UPDATE_USERID;\r\n                                    //if (filterData[x].STATUS == false) {\r\n                                    //    filterData[x].STATUS = true;\r\n                                    //} else {\r\n                                    //    filterData[x].STATUS  = false;\r\n                                    //}\r\n\r\n                                    lstSetupcodeDetails.STATUS = filterData[x].STATUS;\r\n                                    this.lstReasonCodes.push(lstSetupcodeDetails);\r\n                                }\r\n                            }\r\n\r\n\r\n                            break;\r\n\r\n                        case StatusType.Error:\r\n                            await this.BindGrid();\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                            break;\r\n                        case StatusType.Warn:\r\n                            await this.BindGrid();\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                            break;\r\n                    }\r\n\r\n                    this.spinnerService.stop();\r\n                });\r\n\r\n        }\r\n\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n\r\n    }\r\n\r\n    private async checkAuditAllowed() {\r\n\r\n        this.growlMessage = [];\r\n\r\n        try {\r\n            this.spinnerService.start();\r\n            let webresp = new AtParWebApiResponse<string>();\r\n            await this.commonService.getAuditAllowed(this.appID, this.menuCode)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    webresp = res.json() as AtParWebApiResponse<string>\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n\r\n                        case StatusType.Success: {\r\n                            this.auditSatus = webresp.Data;\r\n                            break\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg);\r\n        }\r\n    }\r\n\r\n    public saveOrUpdateReasonCode() {\r\n        this.showAddButton = false;\r\n        this.table = false;\r\n        this.growlMessage = [];\r\n\r\n        if (this.blnShowOrgGroupLabel == true) {\r\n            this.orgGroupIDForDBUpdate = this.orgGrpId.split(\"-\")[0];\r\n        }\r\n        else {\r\n            this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n            if (this.selectedOrgGroupId == \"\" || this.selectedOrgGroupId == \"Select One\" || this.selectedOrgGroupId == undefined) {\r\n                this.table = false;\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Org Group ID\" });\r\n                this.spinnerService.stop();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (this.Title == \"Save\") {\r\n\r\n            try {\r\n                let webresp = new AtParWebApiResponse<TKIT_REASON_CODES>();\r\n                this.spinnerService.start();\r\n\r\n                if (this.newItem.REASON_DESCR == undefined || this.newItem.REASON_DESCR == 'undefined') {\r\n                    this.newItem.REASON_DESCR = '';\r\n                }\r\n\r\n                this.reasonCodeService.createReasonCodes(this.newItem.REASON_CODE, this.newItem.REASON_DESCR, this.orgGroupIDForDBUpdate)\r\n                    .catch(this.httpService.handleError).then((resp: Response) => {\r\n                        webresp = resp.json() as AtParWebApiResponse<TKIT_REASON_CODES>\r\n                        this.spinnerService.stop();\r\n                        switch (webresp.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.growlMessage = [];\r\n                                if (this.mode == ModeEnum[ModeEnum.Add].toString()) {\r\n                                    this.loading = true;\r\n                                    this.reasonCodeStatus = null;\r\n                                    this.descStatus = null;\r\n                                    this.ddlOrgIDStatus = null;\r\n                                    if (this.blnShowOrgGroupDD) {\r\n                                        (<HTMLInputElement>document.getElementById('txtddllstOrgGroups')).focus();\r\n                                    }\r\n                                    else {\r\n                                        (<HTMLInputElement>document.getElementById('txtReasonCode')).focus();\r\n                                    }\r\n                                    let msg = AtParConstants.Created_Msg.replace(\"1%\", 'Reason Code').replace(\"2%\", this.newItem.REASON_CODE);\r\n                                    this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n                                    this.newItem = new TKIT_REASON_CODES();\r\n                                    this.selectedOrgGroupId = \"\";\r\n\r\n                                }\r\n                                else {\r\n                                    let msg = AtParConstants.Updated_Msg.replace(\"1%\", 'Reason Code').replace(\"2%\", this.newItem.REASON_CODE);\r\n                                    this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n                                    (<HTMLInputElement>document.getElementById('txtDesc')).focus();\r\n                                }\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            } catch (exMsg) {\r\n                this.clientErrorMsg(exMsg);\r\n            }\r\n        }\r\n        else {\r\n\r\n            try {\r\n                let webresp = new AtParWebApiResponse<TKIT_REASON_CODES>();\r\n                this.spinnerService.start();\r\n                this.reasonCodeService.updateReasonCodes(this.newItem.REASON_CODE, this.newItem.REASON_DESCR)\r\n                    .catch(this.httpService.handleError).then((resp: Response) => {\r\n                        webresp = resp.json() as AtParWebApiResponse<TKIT_REASON_CODES>\r\n                        this.spinnerService.stop();\r\n                        switch (webresp.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.growlMessage = [];\r\n                                if (this.mode == ModeEnum[ModeEnum.Add].toString()) {\r\n                                    let msg = AtParConstants.Created_Msg.replace(\"1%\", 'Reason Code').replace(\"2%\", this.newItem.REASON_CODE);\r\n                                    this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n                                    this.loading = false;\r\n                                    this.newItem = new TKIT_REASON_CODES();\r\n                                    this.reasonCodeStatus = null;\r\n                                    this.descStatus = null;\r\n                                    (<HTMLInputElement>document.getElementById('txtReasonCode')).focus();\r\n                                }\r\n                                else {\r\n                                    let msg = AtParConstants.Updated_Msg.replace(\"1%\", 'Reason Code').replace(\"2%\", this.newItem.REASON_CODE);\r\n                                    this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n                                    (<HTMLInputElement>document.getElementById('txtDesc')).focus();\r\n                                }\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage = [];\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            } catch (exMsg) {\r\n                this.clientErrorMsg(exMsg);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    ddlOrgIDChanged() {\r\n        if (this.newItem.REASON_CODE == null || this.newItem.REASON_CODE == undefined) {\r\n            this.newItem.REASON_CODE = \"\";\r\n        }\r\n        if (this.blnShowOrgGroupDD) {\r\n            if (this.selectedOrgGroupId == \"Select One\" || this.selectedOrgGroupId == undefined || this.selectedOrgGroupId == null || this.selectedOrgGroupId == \"\") {\r\n                this.ddlOrgIDStatus = 1;\r\n            }\r\n            else {\r\n                this.ddlOrgIDStatus = 0;\r\n            }\r\n        }\r\n        if (this.Title == \"Update\" || this.blnShowOrgGroupLabel) {\r\n            this.ddlOrgIDStatus = 0;\r\n        }\r\n        if (this.reasonCodeStatus == 0 && this.ddlOrgIDStatus == 0 && this.newItem.REASON_CODE != \"\") {\r\n            if (this.descStatus == null || this.descStatus == undefined || this.descStatus == 0) {\r\n                this.loading = false;\r\n            }\r\n            else {\r\n                this.loading = true;\r\n            }\r\n        }\r\n        else {\r\n            this.loading = true;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    async dataFilter(evtdata, filed, filterMatchMode) {\r\n        let filterData;\r\n        this.growlMessage = [];\r\n\r\n        this.lstReasonCodes.length = 0;\r\n\r\n        if (this.statusType.toString() == \"true\") {\r\n            filterData = this.mainlstGridData.filter(x => x.STATUS == true)\r\n        } else if (this.statusType.toString() == \"false\") {\r\n            filterData = this.mainlstGridData.filter(x => x.STATUS == false)\r\n        } else {\r\n            filterData = this.mainlstGridData\r\n        }\r\n        if (filterData != null) {\r\n            for (let x = 0; x < filterData.length; x++) {\r\n                let lstSetupcodeDetails = new TKIT_REASON_CODES();\r\n                lstSetupcodeDetails.ORG_GROUP_ID = filterData[x].ORG_GROUP_ID;\r\n                lstSetupcodeDetails.REASON_CODE = filterData[x].REASON_CODE;\r\n                lstSetupcodeDetails.REASON_DESCR = filterData[x].REASON_DESCR;\r\n\r\n                lstSetupcodeDetails.UPDATE_DATE = filterData[x].UPDATE_DATE;\r\n                lstSetupcodeDetails.UPDATE_USERID = filterData[x].UPDATE_USERID;\r\n                lstSetupcodeDetails.STATUS = filterData[x].STATUS;\r\n\r\n                this.lstReasonCodes.push(lstSetupcodeDetails);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-setup-reason-codes.component.ts","import { Component } from '@angular/core';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./tkit-transaction-report.component.html')\r\n})\r\n\r\nexport class TransactionReportComponent {\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-transaction-report.component.ts","import { Component } from '@angular/core';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./trackit.component.html')\r\n})\r\n\r\n\r\nexport class TrackITComponent { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/trackit.component.ts","export class TKIT_DEPT {\r\n    public ORG_GROUP_ID: string;\r\n    public DEPT_ID: string;\r\n    public DESCRIPTION: string;\r\n    public UPDATE_DATE?: Date;\r\n    public UPDATE_USER_ID: string;\r\n    public STATUS: string;\r\n    public checkvalue: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/TKIT_DEPT.ts","export class TKIT_ITEM_INVENTORY {\r\n    public ORG_GROUP_ID: string;\r\n    public ITEM_TYPE: string;\r\n    public ITEM_ID: string;\r\n    public SERIAL_NO: string;\r\n    public LOT_NO: string;\r\n    public ITEM_QTY?: number;\r\n    public STORAGE_LOCATION: string;\r\n    public SERVICE_DT_TIME?: Date;\r\n    public STATUS?: boolean;\r\n    public USER_FIELD_1: string;\r\n    public USER_FIELD_2: string;\r\n    public AVAILABILITY?: boolean;\r\n    public OWNER: string;\r\n    public OWNER_TYPE: string;\r\n    public CHECKIN_DATE?: Date;\r\n    public UPDATE_DATE?: Date;\r\n    public UPDATE_USER_ID: string;\r\n    public ROW_INDEX: number;\r\n    public Disable: boolean;\r\n    public ASSET_ID: string;\r\n    public ASSET_IDPART1: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/TKIT_ITEM_INVENTORY.ts","export class TKIT_ITEM_MASTER {\r\n    public ORG_GROUP_ID: string;\r\n    public ITEM_TYPE: string;\r\n    public ITEM_ID: string;\r\n    public ITEM_DESCR: string;\r\n    public MANUFACTURER: string;\r\n    public VENDOR: string;\r\n    public IMAGE: string;\r\n    public COMMENTS: string;\r\n    public DESTRUCTION_DATE?: Date;\r\n    public ITEM_INACTIVATED: boolean;\r\n    public CREATE_USERID: string;\r\n    public CREATE_DATE?: Date;\r\n    public ASSET_ID: string;\r\n    public CHK_VALUE : number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/TKIT_ITEM_MASTER.ts","export class TKIT_ITEM_TYPE {\r\n    public ORG_GROUP_ID: string;\r\n    public ITEM_TYPE: string;\r\n    public ITEM_TYPE_INDICATOR: string;\r\n    public ITEM_TYPE_DESCR: string;\r\n    public ITEM_TYPE_INDICATOR_DESC: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/TKIT_ITEM_TYPE.ts","export class TKIT_REASON_CODES {\r\n    public ORG_GROUP_ID: string;\r\n    public REASON_CODE: string;\r\n    public REASON_DESCR: string;\r\n    public UPDATE_DATE?: Date;\r\n    public UPDATE_USERID: string;\r\n    public STATUS?: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/TKIT_REASON_CODES.ts","export class VM_TKIT_ITEM_DETAILS {\r\n\r\n    public ORG_GROUP_ID: string;\r\n    public ITEM_TYPE: string\r\n    public ITEM_ID: string\r\n    public ITEM_DESCR: string;\r\n    public ITEM_QTY: number;\r\n    public MANUFACTURER: string;\r\n    public VENDOR: string;\r\n    public IMAGE: string;\r\n    public COMMENTS: string;\r\n    public DESTRUCTION_DATE: Date;\r\n    public CREATE_DATE: Date;\r\n    public UPDATE_DATE: Date;\r\n    public ITEM_INACTIVATED: boolean;\r\n    public DESCRIPTION: string\r\n    public STORAGE_LOCATION: string;\r\n    public OWNER: string;\r\n    public OWNER_TYPE: string;\r\n    public UPDATEUSERNAME: string;\r\n    public CREATEUSERNAME: string;\r\n    public DEPT_ID: string;\r\n    public CHK_VALUE: number;\r\n    public IMAGE_PATH: string\r\n   \r\n    public Disable: boolean;\r\n    public showImage: boolean;\r\n\r\n    public DEPT_IDS: string;\r\n    public SERIAL_NO: string;\r\n    public ASSET_ID: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/VM_TKIT_ITEM_DETAILS.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\n\r\n//import { VM_TKIT_ITEM_DEPT } from '../../app/Entities/VM_TKIT_ITEM_DEPT';\r\n\r\n\r\n@Injectable()\r\nexport class DeliveryReportService {\r\n\r\n    constructor(private httpservice: HttpService) {\r\n\r\n    }\r\n\r\n\r\n    async getHeirarchyUsersList(appID, userID, orgGroupID) {\r\n        return await this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/IssueReport/GetHeirarchyUsersList\",\r\n            params: {\r\n                appID: appID,\r\n                userID: userID,\r\n                orgGrpID: orgGroupID\r\n            }\r\n        })\r\n    }\r\n\r\n    getTrackITDetpartments(deptID, status) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/DeliveryTrackITReport/GetTKITDepts\",\r\n            params: {\r\n                \"deptID\": deptID,\r\n                \"status\": status,\r\n                 }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    getTkITDeliverReport(fromDate, toDate, request, recipient, userId, departmentId, itemId, vendorName, descr, location,\r\n        reqId, status) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/DeliveryTrackITReport/GetTkITDeliverReport\",\r\n            params: {\r\n                \"fromDate\": fromDate,\r\n                \"toDate\": toDate,\r\n                \"request\": request,\r\n                \"recipient\": recipient,\r\n                \"userId\": userId,\r\n                \"departmentId\": departmentId,\r\n                \"itemId\": itemId,\r\n                \"vendorName\": vendorName,\r\n                \"descr\": descr,\r\n                \"location\": location,\r\n                \"reqId\": reqId,\r\n                \"status\": status,\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    getRequestors(inactiveStatusChk) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/DeliveryTrackITReport/GetRequestors\",\r\n            params: {\r\n                \"inactiveStatusChk\": inactiveStatusChk,\r\n               \r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-delivery-report.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { VM_TKIT_INACTIVE_ITEMS } from '../../app/Entities/VM_TKIT_INACTIVE_ITEMS';\r\nimport { TKIT_ITEM_MASTER } from '../../app/Entities/TKIT_ITEM_MASTER';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\n\r\n@Injectable()\r\nexport class TrackITInactiveItemsService{\r\n\r\n    constructor(private httpservice: HttpService) {\r\n    }\r\n\r\n    getItemsToInActivate(typeIndicator, destDate, deviceTokenEntry) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/InactivateItems/GetItemsToInActivate\",\r\n            params: {\r\n                \"typeIndicator\": typeIndicator,\r\n                \"destDate\": destDate,\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        }).map(res => <AtParWebApiResponse<VM_TKIT_INACTIVE_ITEMS>>res.json()).catch(this.handleError);\r\n    }\r\n  \r\n    inactivateItems(lstItemMaster , deviceTokenEntry) {\r\n        return this.httpservice.create({\r\n            apiMethod: \"/api/InactivateItems/InactivateItem\",\r\n            formData: lstItemMaster,\r\n            params: {\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        }).map(res => res.json()).catch(this.handleError);\r\n\r\n    }\r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-inactivate-items.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { MT_ATPAR_SECURITY_AUDIT } from '../Entities/MT_ATPAR_SECURITY_AUDIT';\r\n\r\n@Injectable()\r\n\r\nexport class ManageDepartmentsService {\r\n\r\n    constructor(private httpService: HttpService, public http: Http) { }\r\n\r\n    public getDepartments(department, status, orgGroupID) {\r\n\r\n        return this.httpService.getSync({\r\n            apiMethod: \"/api/ManageDepartments/GetTKITAllDepts\",\r\n            params: {\r\n                \"deptID\": department,\r\n                \"status\": status,\r\n                \"OrgGrpID\": orgGroupID\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    public saveDepartment(deptID, desc, status, mode, orgGroupID, userID) {\r\n        return this.httpService.create({\r\n            apiMethod: \"/api/ManageDepartments/SaveDeptData\",\r\n            params: {\r\n                \"deptID\": deptID,\r\n                \"deptDescr\": desc,\r\n                \"status\": status,\r\n                \"mode\": mode,\r\n                \"orgGrpID\": orgGroupID,\r\n                \"userID\": userID\r\n            }\r\n        }).toPromise();\r\n    }\r\n    \r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-manage-departments.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\n\r\n//import { VM_TKIT_ITEM_DEPT } from '../../app/Entities/VM_TKIT_ITEM_DEPT';\r\n\r\n\r\n@Injectable()\r\nexport class ManageEquipmentItemsService {\r\n\r\n    constructor(private httpservice: HttpService) {\r\n\r\n    }\r\n\r\n    async  GetMasterItems() {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/ManageEquipmentItems/GetMasterItems\"      \r\n        });\r\n    }\r\n\r\n\r\n    async  GetMasterItemsdetails(itemID, description) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/ManageEquipmentItems/GetMasterItems\",\r\n            params: {\r\n                \"itemID\": itemID,\r\n                \"description\": description\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    async  GetEquipmentTypes(itemIndicator, orgGrpId) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/ManageEquipmentItems/GetEquipmentTypes\",\r\n            params: {\r\n                \"itemIndicator\": itemIndicator,\r\n                \"orgGrpId\": orgGrpId\r\n               \r\n\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    async GetItemsForSelectedEqType(equipmentType, itemId) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/ManageEquipmentItems/GetItemsForSelectedEqType\",\r\n            params: {\r\n                \"equipmentType\": equipmentType,\r\n                \"itemId\": itemId\r\n                \r\n\r\n\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n     GetLatestValue( appId,  fieldName) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/CommonTrackIT/GetLatestValue\",\r\n            params: {\r\n                \"appId\": appId,\r\n                \"fieldName\": fieldName\r\n\r\n\r\n\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n     GetLatestAssetIDValue(appId, fieldName) {\r\n         return this.httpservice.getSync({\r\n             apiMethod: \"/api/CommonTrackIT/GetLatestValue\",\r\n             params: {\r\n                 \"appId\": appId,\r\n                 \"fieldName\": fieldName\r\n\r\n\r\n\r\n             }\r\n\r\n         });\r\n     }\r\n\r\n\r\n    GetItemDepartments(itemId, orgGrpId) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/ManageEquipmentItems/GetItemDepartments\",\r\n\r\n            params: {\r\n\r\n\r\n                \"itemId\": itemId,\r\n                \"orgGrpId\": orgGrpId\r\n\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    IsItemOrdered(itemId) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/ManageEquipmentItems/IsItemOrdered\",\r\n\r\n            params: {\r\n\r\n\r\n                \"itemId\": itemId\r\n              \r\n\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    GetTypeItems(itemType, itemId) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/ManageEquipmentItems/GetTypeItems\",\r\n\r\n            params: {\r\n\r\n\r\n                \"itemType\": itemType,\r\n                \"itemId\": itemId\r\n\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    UpdateItems(lstItemDetails, itemTypeIndicator) {\r\n\r\n       \r\n        return this.httpservice.create({\r\n            apiMethod: \"/api/ManageEquipmentItems/UpdateItems\",\r\n            formData: lstItemDetails,\r\n            params: {\r\n\r\n\r\n                \"lstItemDetails\": lstItemDetails,\r\n                \"itemTypeIndicator\": itemTypeIndicator\r\n\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    SaveItemDetails(lstItemDetails, lstItemInvDetails, itemTypeIndicator, mode) {\r\n        var dicitemdetails = { \"lstItemDetails\": lstItemDetails, \"lstItemInvDetails\": lstItemInvDetails };\r\n\r\n        return this.httpservice.create({\r\n\r\n            apiMethod: \"/api/ManageEquipmentItems/SaveItemDetails\",\r\n            formData: dicitemdetails,\r\n            params: {\r\n                \"itemTypeIndicator\": itemTypeIndicator,\r\n                \"mode\": mode\r\n\r\n\r\n            }\r\n\r\n        }).toPromise();\r\n    }\r\n\r\n\r\n\r\n\r\n    getVendorDetails(orgGroupID, vendorID, search) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/CommonTrackIT/GetVendorDetails\",\r\n            params: {\r\n                \"orgGroupID\": orgGroupID,\r\n                \"vendorID\": vendorID,\r\n                \"search\": search,\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-manage-equipment-items.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { MT_ATPAR_SECURITY_AUDIT } from '../Entities/MT_ATPAR_SECURITY_AUDIT';\r\n\r\n@Injectable()\r\n\r\nexport class ManageEqTypeService {\r\n\r\n    constructor(private httpService: HttpService, public http: Http) { }\r\n\r\n    public updateEqTypeData(itemType) {\r\n\r\n        return this.httpService.create({\r\n            apiMethod: \"/api/ManageEquipmentType/UpdateEqTypeData\",\r\n            formData: itemType\r\n        }).toPromise();\r\n    }\r\n\r\n    public saveEqTypeData(itemType) {\r\n        return this.httpService.create({\r\n            apiMethod: \"/api/ManageEquipmentType/SaveEqTypeData\",\r\n            formData: itemType\r\n        }).toPromise();\r\n    }\r\n\r\n    public getEquipmentTypes(itemIndicator, orgGrpId, searchEqTypeOrDesc) {\r\n\r\n        return this.httpService.getSync({\r\n            apiMethod: \"/api/CommonTrackIT/GetEquipmentTypes\",\r\n            params: {\r\n                \"itemIndicator\": itemIndicator,\r\n                \"orgGrpId\": orgGrpId,\r\n                \"searchEqTypeOrDesc\": searchEqTypeOrDesc\r\n            }\r\n        });\r\n    }\r\n\r\n    public getEqIndicators() {\r\n\r\n        return this.httpService.getSync({\r\n            apiMethod: \"/api/CommonTrackIT/GetEqIndicators\"            \r\n        });\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-manage-equipment-type.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { MT_ATPAR_SECURITY_AUDIT } from '../Entities/MT_ATPAR_SECURITY_AUDIT';\r\n\r\n@Injectable()\r\n\r\nexport class ReasonCodeService {\r\n\r\n    constructor(private httpService: HttpService, public http: Http) { }\r\n\r\n    public getReasonCodes(reasonCode, desc) {\r\n\r\n        return this.httpService.getSync({\r\n            apiMethod: \"/api/SetupReasonCodes/GetReasonCodes\",\r\n            params: {\r\n                \"reasonCode\": reasonCode,\r\n                \"desc\": desc\r\n            }\r\n        });\r\n    }\r\n\r\n    public updateReasonCodes(reasonCode, desc) {\r\n        return this.httpService.create({\r\n            apiMethod: \"/api/SetupReasonCodes/UpdateReasonCodes\",\r\n            params: {\r\n                \"reasonCode\": reasonCode,\r\n                \"desc\": desc\r\n            }\r\n        }).toPromise();\r\n    }\r\n\r\n    public deleteReasonCode(reasonCode, status) {\r\n        return this.httpService.create({\r\n            apiMethod: \"/api/SetupReasonCodes/DeleteReasonCode\",\r\n            params: {\r\n                \"reasonCode\": reasonCode,\r\n                \"status\": status\r\n            }\r\n        }).toPromise();\r\n    }\r\n\r\n    public createReasonCodes(reasonCode, desc, orgGroupID) {\r\n        return this.httpService.create({\r\n            apiMethod: \"/api/SetupReasonCodes/CreateReasonCodes\",\r\n            params: {\r\n                \"reasonCode\": reasonCode,\r\n                \"desc\": desc,\r\n                \"orgGrpID\": orgGroupID\r\n            }\r\n        }).toPromise();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/tkit-setup-reason-codes.service.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\nimport { TrackITComponent } from './trackit.component';\r\n\r\nimport { AllocateLocationGroupsComponent } from './tkit-allocate-location-groups.component';\r\nimport { ChargeReportComponent } from './tkit-charge-report.component';\r\nimport { CheckIn_CheckOutComponent } from './tkit-check-in_check-out.component';\r\nimport { CheckOutComponent } from './tkit-check-out.component';\r\nimport { DailyActivityComponent } from './tkit-daily-activity.component';\r\nimport { DailyUserActivityComponent } from './tkit-daily-user-activity.component';\r\nimport { DeliveryReportComponent } from './tkit-delivery-report.component';\r\nimport { DestructionReportComponent } from './tkit-destruction-report.component';\r\nimport { EquipmentTrackingReportComponent } from './tkit-equipment-tracking-report.component';\r\nimport { InactivateItemsComponent } from './tkit-inactivate-items.component';\r\nimport { ItemMasterReportComponent } from './tkit-item-master-report.component';\r\nimport { ManageDepartmentsComponent } from './tkit-manage-departments.component';\r\nimport { ManageEquipmentItemsComponent } from './tkit-manage-equipment-items.component';\r\nimport { ManageEquipmentTypeComponent } from './tkit-manage-equipment-type.component';\r\nimport { ManageRequestorHomeComponent } from './tkit-manage-requestor-home.component';\r\nimport { ManageRequestorModifyComponent } from './tkit-manage-requestor-modify.component';\r\nimport { ManageRequestorComponent } from './tkit-manage-requestor.component';\r\nimport { NewItemAuditReportComponent } from './tkit-newitem-audit-report.component';\r\nimport { SetupReasonCodesComponent } from './tkit-setup-reason-codes.component';\r\nimport { TransactionReportComponent } from './tkit-transaction-report.component';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: TrackITComponent,\r\n        children: [\r\n            { path: 'allocatelocationgroups', component: AllocateLocationGroupsComponent },\r\n            { path: 'chargereport', component: ChargeReportComponent },\r\n            { path: 'checkinitems', component: CheckIn_CheckOutComponent },\r\n            { path: 'checkoutitems', component: CheckOutComponent },\r\n            { path: 'dailyactivity', component: DailyActivityComponent },\r\n            { path: 'dailyuseractivity', component: DailyUserActivityComponent },\r\n            { path: 'deliveryreport', component: DeliveryReportComponent },\r\n            { path: 'destructionreport', component: DestructionReportComponent },\r\n            { path: 'equipmenttrackingreport', component: EquipmentTrackingReportComponent },\r\n            { path: 'inactivateitems', component: InactivateItemsComponent },\r\n            { path: 'itemmasterreport', component: ItemMasterReportComponent },\r\n            { path: 'managedepartments', component: ManageDepartmentsComponent },\r\n            { path: 'manageequipmentitems', component: ManageEquipmentItemsComponent },\r\n            { path: 'manageequipmenttype', component: ManageEquipmentTypeComponent },\r\n            {\r\n                path: 'managerequestor', component: ManageRequestorComponent,\r\n                children: [\r\n                    { path: '', component: ManageRequestorHomeComponent },\r\n                    { path: 'addormodify', component: ManageRequestorModifyComponent }\r\n                ]\r\n            },\r\n            { path: 'newitemauditreport', component: NewItemAuditReportComponent },\r\n            { path: 'setupreasoncodes', component: SetupReasonCodesComponent },\r\n            { path: 'transactionreport', component: TransactionReportComponent },\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class TrackITRoutingModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/trackit-routing.module.ts","import { NgModule } from '@angular/core';\r\n\r\n\r\nimport { TrackITComponent } from './trackit.component';\r\n\r\n\r\nimport { AllocateLocationGroupsComponent } from './tkit-allocate-location-groups.component';\r\nimport { ChargeReportComponent } from './tkit-charge-report.component';\r\nimport { CheckIn_CheckOutComponent } from './tkit-check-in_check-out.component';\r\nimport { CheckOutComponent } from './tkit-check-out.component';\r\nimport { DailyActivityComponent } from './tkit-daily-activity.component';\r\nimport { DailyUserActivityComponent } from './tkit-daily-user-activity.component';\r\nimport { DeliveryReportComponent } from './tkit-delivery-report.component';\r\nimport { DestructionReportComponent } from './tkit-destruction-report.component';\r\nimport { EquipmentTrackingReportComponent } from './tkit-equipment-tracking-report.component';\r\nimport { InactivateItemsComponent } from './tkit-inactivate-items.component';\r\nimport { ItemMasterReportComponent } from './tkit-item-master-report.component';\r\nimport { ManageDepartmentsComponent } from './tkit-manage-departments.component';\r\nimport { ManageEquipmentItemsComponent } from './tkit-manage-equipment-items.component';\r\nimport { ManageEquipmentTypeComponent } from './tkit-manage-equipment-type.component';\r\nimport { ManageRequestorHomeComponent } from './tkit-manage-requestor-home.component';\r\nimport { ManageRequestorModifyComponent } from './tkit-manage-requestor-modify.component';\r\nimport { ManageRequestorComponent } from './tkit-manage-requestor.component';\r\nimport { NewItemAuditReportComponent } from './tkit-newitem-audit-report.component';\r\nimport { SetupReasonCodesComponent } from './tkit-setup-reason-codes.component';\r\nimport { TransactionReportComponent } from './tkit-transaction-report.component';\r\n\r\nimport { TrackITRoutingModule } from './trackit-routing.module';\r\nimport { SharedModule } from '../Shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        TrackITRoutingModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        TrackITComponent,\r\n        AllocateLocationGroupsComponent,\r\n        ChargeReportComponent,\r\n        CheckIn_CheckOutComponent,\r\n        CheckOutComponent,\r\n        DailyActivityComponent,\r\n        DailyUserActivityComponent,\r\n        DeliveryReportComponent,\r\n        DestructionReportComponent,\r\n        EquipmentTrackingReportComponent,\r\n        InactivateItemsComponent,\r\n        ItemMasterReportComponent,\r\n        ManageDepartmentsComponent,\r\n        ManageEquipmentItemsComponent,\r\n        ManageEquipmentTypeComponent,\r\n        ManageRequestorComponent,\r\n        ManageRequestorHomeComponent,\r\n        ManageRequestorModifyComponent,\r\n        NewItemAuditReportComponent,\r\n        SetupReasonCodesComponent,\r\n        TransactionReportComponent\r\n    ]\r\n})\r\n\r\nexport class TrackITModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/TrackIT/trackit.module.ts","module.exports = \"\\r\\n<div>\\r\\n    <atpar-allocate-location-groups [appId]=\\\"trackITAppId\\\"></atpar-allocate-location-groups>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-allocate-location-groups.component.html\n// module id = 2132\n// module chunks = 10","module.exports = \"<div>\\r\\n    <span>This is TrackIT Charge Report Screen.</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-charge-report.component.html\n// module id = 2133\n// module chunks = 10","module.exports = \"<style>\\r\\n    .no-shadow {\\r\\n        box-shadow: none !important;\\r\\n    }\\r\\n\\r\\n    .bdr-1 {\\r\\n        border: 1px solid #eee !important;\\r\\n    }\\r\\n\\r\\n    .panel-green {\\r\\n        box-shadow: 0 0 6px 0 hsla(0,0%,66%,.5) !important;\\r\\n        border: 1px solid #e1e1e1 !important;\\r\\n    }\\r\\n\\r\\n        .panel-green > .panel-body {\\r\\n            border-left: 10px solid #7cb82f;\\r\\n        }\\r\\n\\r\\n    .panel-blue {\\r\\n        /*border-color: #79ebfd !important;*/\\r\\n        box-shadow: 0 0 6px 0 hsla(0,0%,66%,.5) !important;\\r\\n        border: 1px solid #e1e1e1 !important;\\r\\n    }\\r\\n\\r\\n        .panel-blue > .panel-body {\\r\\n            border-left: 10px solid #00aeb3;\\r\\n        }\\r\\n\\r\\n    .panel-pink {\\r\\n        /*border-color: #de60f5 !important;*/\\r\\n        box-shadow: 0 0 6px 0 hsla(0,0%,66%,.5) !important;\\r\\n        border: 1px solid #e1e1e1 !important;\\r\\n    }\\r\\n\\r\\n        .panel-pink > .panel-body {\\r\\n            border-left: 10px solid #de60f5;\\r\\n        }\\r\\n\\r\\n    .scrl-pnl {\\r\\n        height: auto;\\r\\n        overflow-x: hidden;\\r\\n        overflow-y: auto;\\r\\n        max-height: 411px;\\r\\n    }\\r\\n\\r\\n    .ui-datatable tbody tr td .form-control, table tbody tr td .form-control {\\r\\n        height: auto !important;\\r\\n        margin-top: -10px;\\r\\n    }\\r\\n\\r\\n    .table-inner-style, tbody tr td {\\r\\n        padding: 12px;\\r\\n    }\\r\\n\\r\\n    .col-md-6 .border-panel > .row {\\r\\n        border-bottom: 1px solid #e1e1e1;\\r\\n    }\\r\\n\\r\\n    .ten-padding {\\r\\n        padding: 10px;\\r\\n    }\\r\\n\\r\\n    .thirty-padding {\\r\\n        padding: 25px;\\r\\n    }\\r\\n\\r\\n    .margin-border {\\r\\n        border-bottom: 1px solid #e1e1e1;\\r\\n        padding: 4px;\\r\\n    }\\r\\n\\r\\n    .new-ht td .input-group .input-group-addon {\\r\\n        line-height: 0 !important;\\r\\n    }\\r\\n</style>\\r\\n<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\" *ngIf=\\\"true\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Item ID/ Assets ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n                                        <div class=\\\"input-group\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"itemIdSearch\\\" [name]=\\\"txtORGI1\\\" [id]=\\\"'ORGI1'\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'alpha_numeric_underscore_nospace'\\\" [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\" *ngIf=\\\"hasSerialId\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Serial #</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n                                        <div class=\\\"input-group\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"serialIdSearch\\\" [name]=\\\"txtORGI1s\\\" [id]=\\\"'ORGI1s'\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'alpha_numeric_underscore_nospace'\\\" [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"go()\\\" *ngIf=\\\"isGo\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"pop\\\">\\r\\n                            <ul class=\\\"list-inline\\\">\\r\\n                                <li><i class=\\\"fa fa-square\\\" style=\\\"color:#7cb82f;\\\"></i> &nbsp; Box Item</li>\\r\\n                                <li><i class=\\\"fa fa-square\\\" style=\\\"color:#00aeb3;\\\"></i>  &nbsp; Equipment Item</li>\\r\\n                                <li><i class=\\\"fa fa-square\\\" style=\\\"color:#de60f5;\\\"></i>  &nbsp; Furniture Item</li>\\r\\n                            </ul>\\r\\n                            <div class=\\\"panel panel-default no-shadow bdr-1\\\">\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-md-5 col-sm-12\\\">\\r\\n                                        <table class=\\\"table table-bordered table-inner-style qty-table\\\">\\r\\n                                            <tbody>\\r\\n                                                <tr>\\r\\n                                                    <td>Item ID</td>\\r\\n                                                    <td>{{itemDetails.ITEM_ID}}</td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Asset ID</td>\\r\\n                                                    <td>{{itemDetails.ASSET_ID}}</td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Description</td>\\r\\n                                                    <td>{{itemDetails.ITEM_DESCR}}</td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Storage Location</td>\\r\\n                                                    <td>{{itemDetails.DELIVER_LOCATION}}</td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Manufacturer</td>\\r\\n                                                    <td>{{itemDetails.MANUFACTURER}}</td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Vendor</td>\\r\\n                                                    <td>{{itemDetails.VENDOR}}</td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>System Qty</td>\\r\\n                                                    <td>{{itemDetails.itemQty}}</td>\\r\\n                                                </tr>\\r\\n                                                <tr class=\\\"new-ht\\\">\\r\\n                                                    <td>Checkin Qty</td>\\r\\n                                                    <td>\\r\\n                                                        <div class=\\\"input-group\\\" style=\\\"width:150px;\\\">\\r\\n                                                            <span class=\\\"input-group-addon\\\" [attr.disabled]=\\\"isDisabled\\\" [style.cursor]=\\\"cursor\\\"> <a class=\\\"text-default\\\" (click)=\\\"decreaseQuantity()\\\" [attr.disabled]=\\\"isDisabled\\\" [style.cursor]=\\\"cursor\\\"> - </a></span>\\r\\n                                                            <atpar-text [id]=\\\"'txtDf'\\\" [name]=\\\"txtDf\\\" [style]=\\\"{'height':'34px'}\\\" [(ngModel)]=\\\"itemDetails.checkinQty\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'alpha_numeric_underscore_nospace'\\\" [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\" [disabled]=\\\"isDisabled\\\"></atpar-text>\\r\\n                                                            <span class=\\\"input-group-addon\\\" [attr.disabled]=\\\"isDisabled\\\" [style.cursor]=\\\"cursor\\\"> <a class=\\\"text-default\\\" (click)=\\\"increaseQuantity()\\\" [attr.disabled]=\\\"isDisabled\\\" [style.cursor]=\\\"cursor\\\"> + </a> </span>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td colspan=\\\"2\\\">\\r\\n                                                        <button class=\\\"btn btn-purple sbtn pull-right\\\" (click)=\\\"Add()\\\">Add &nbsp; <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-md-7 col-sm-12\\\" *ngIf=\\\"isADD\\\">\\r\\n                                        <div class=\\\"panel panel-default no-shadow bdr-1 scrl-pnl\\\">\\r\\n                                            <div class=\\\"panel-body\\\" style=\\\"padding:8px;\\\">\\r\\n                                                <div class=\\\"col-xs-12\\\" style=\\\"padding:0px\\\" *ngFor=\\\"let itemDetails of checkOutItemsList\\\">\\r\\n                                                    <div class={{this.itemDetails.color}}>\\r\\n                                                        <div class=\\\"panel-body no-padding\\\">\\r\\n                                                            <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"col-md-3\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Item ID-Serial# : {{itemDetails.ITEM_ID}}</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-6 border-panel\\\">\\r\\n                                                                    <div class=\\\"row margin-border\\\">\\r\\n                                                                        <p>Item Description : {{itemDetails.ITEM_DESCR}}</p>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\">\\r\\n                                                                            <p>Assets Id : {{itemDetails.ASSET_ID}}</p>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\" style=\\\"border-left: 1px solid #e1e1e1;\\\">\\r\\n                                                                            <p>Storage Location : {{itemDetails.DELIVER_LOCATION}}</p>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-2\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Checkin qty : {{itemDetails.checkinQty}}</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-1\\\" style=\\\"margin-top: 25px;\\\">\\r\\n                                                                    <i class=\\\"fa fa-close fa-bg bg-red danger\\\" (click)=\\\"onCloseItemClick(itemDetails,$event)\\\"></i>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <!--<div class=\\\"col-xs-12 no-padding\\\">\\r\\n                                                    <div class=\\\"panel panel-blue no-shadow bdr-1\\\">\\r\\n                                                        <div class=\\\"panel-body no-padding\\\">\\r\\n                                                            <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"col-md-3\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Item ID-Serial#</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-6 border-panel\\\">\\r\\n                                                                    <div class=\\\"row margin-border\\\">\\r\\n                                                                        <p>Item Description</p>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\">\\r\\n                                                                            <p>Assets Id</p>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\" style=\\\"border-left: 1px solid #e1e1e1;\\\">\\r\\n                                                                            <p>Storage Location</p>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-2\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Checkin qty</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-1\\\" style=\\\"margin-top: 25px;\\\">\\r\\n                                                                    <i class=\\\"fa fa-close fa-bg bg-red danger\\\"></i>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-xs-12 no-padding\\\">\\r\\n                                                    <div class=\\\"panel panel-pink no-shadow bdr-1\\\">\\r\\n                                                        <div class=\\\"panel-body no-padding\\\">\\r\\n                                                            <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"col-md-3\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Item ID-Serial#</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-6 border-panel\\\">\\r\\n                                                                    <div class=\\\"row margin-border\\\">\\r\\n                                                                        <p>Item Description</p>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\">\\r\\n                                                                            <p>Assets Id</p>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\" style=\\\"border-left: 1px solid #e1e1e1;\\\">\\r\\n                                                                            <p>Storage Location</p>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-2\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Checkin qty</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-1\\\" style=\\\"margin-top: 25px;\\\">\\r\\n                                                                    <i class=\\\"fa fa-close fa-bg bg-red danger\\\"></i>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-xs-12 no-padding\\\">\\r\\n                                                    <div class=\\\"panel panel-green no-shadow bdr-1\\\">\\r\\n                                                        <div class=\\\"panel-body no-padding\\\">\\r\\n                                                            <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"col-md-3\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Item ID-Serial#</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-6 border-panel\\\">\\r\\n                                                                    <div class=\\\"row margin-border\\\">\\r\\n                                                                        <p>Item Description</p>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\">\\r\\n                                                                            <p>Assets Id</p>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\" style=\\\"border-left: 1px solid #e1e1e1;\\\">\\r\\n                                                                            <p>Storage Location</p>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-2\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Checkin qty</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-1\\\" style=\\\"margin-top: 25px;\\\">\\r\\n                                                                    <i class=\\\"fa fa-close fa-bg bg-red danger\\\"></i>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>-->\\r\\n                                                <!--<div class=\\\"col-xs-12 no-padding\\\">\\r\\n                                                    <div class=\\\"panel panel-green no-shadow bdr-1\\\">\\r\\n                                                        <div class=\\\"panel-body no-padding\\\">\\r\\n                                                            <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"col-md-3\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Item ID-Serial#</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-6 border-panel\\\">\\r\\n                                                                    <div class=\\\"row margin-border\\\">\\r\\n                                                                        <p>Item Description</p>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\">\\r\\n                                                                            <p>Assets Id</p>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\" style=\\\"border-left: 1px solid #e1e1e1;\\\">\\r\\n                                                                            <p>Storage Location</p>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-2\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Checkin qty</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-1\\\" style=\\\"margin-top: 25px;\\\">\\r\\n                                                                    <i class=\\\"fa fa-close fa-bg bg-red danger\\\"></i>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>-->\\r\\n                                                <div class=\\\"clear\\\"></div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-xs-12\\\">\\r\\n                                            <button class=\\\"btn btn-purple sbtn pull-right\\\" (click)=\\\"checkInOutItems()\\\">Check In &nbsp; <i class=\\\"fa fa-check\\\"></i></button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<atpar-growl [value]=\\\"msgs\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n<style>\\r\\n    .disabled {\\r\\n        cursor:none;\\r\\n    }\\r\\n\\r\\n</style>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-check-in_check-out.component.html\n// module id = 2134\n// module chunks = 10","module.exports = \"\\r\\n<style>\\r\\n    .no-shadow {\\r\\n        box-shadow: none !important;\\r\\n    }\\r\\n\\r\\n    .bdr-1 {\\r\\n        border: 1px solid #eee !important;\\r\\n    }\\r\\n\\r\\n    .panel-green {\\r\\n        box-shadow: 0 0 6px 0 hsla(0,0%,66%,.5) !important;\\r\\n        border: 1px solid #e1e1e1 !important;\\r\\n    }\\r\\n\\r\\n        .panel-green > .panel-body {\\r\\n            border-left: 10px solid #7cb82f;\\r\\n        }\\r\\n\\r\\n    .panel-blue {\\r\\n        box-shadow: 0 0 6px 0 hsla(0,0%,66%,.5) !important;\\r\\n        border: 1px solid #e1e1e1 !important;\\r\\n    }\\r\\n\\r\\n        .panel-blue > .panel-body {\\r\\n            border-left: 10px solid #00aeb3;\\r\\n        }\\r\\n\\r\\n    .panel-pink {\\r\\n        box-shadow: 0 0 6px 0 hsla(0,0%,66%,.5) !important;\\r\\n        border: 1px solid #e1e1e1 !important;\\r\\n    }\\r\\n\\r\\n        .panel-pink > .panel-body {\\r\\n            border-left: 10px solid #de60f5;\\r\\n        }\\r\\n\\r\\n    .scrl-pnl {\\r\\n        height: auto;\\r\\n        overflow-x: hidden;\\r\\n        overflow-y: auto;\\r\\n        max-height: 481px;\\r\\n    }\\r\\n\\r\\n    .ui-datatable tbody tr td .form-control, table tbody tr td .form-control {\\r\\n        height: auto !important;\\r\\n        margin-top: -10px;\\r\\n    }\\r\\n\\r\\n    .table-inner-style, tbody tr td {\\r\\n        padding: 12px;\\r\\n    }\\r\\n\\r\\n    .col-md-6 .border-panel > .row {\\r\\n        border-bottom: 1px solid #e1e1e1;\\r\\n    }\\r\\n\\r\\n    .ten-padding {\\r\\n        padding: 10px;\\r\\n    }\\r\\n\\r\\n    .thirty-padding {\\r\\n        padding: 25px;\\r\\n    }\\r\\n\\r\\n    .margin-border {\\r\\n        border-bottom: 1px solid #e1e1e1;\\r\\n        padding: 4px;\\r\\n    }\\r\\n\\r\\n    th {\\r\\n        text-align: center;\\r\\n    }\\r\\n\\r\\n    .new-ht td .input-group .input-group-addon {\\r\\n        line-height: 0 !important;\\r\\n    }\\r\\n</style>\\r\\n<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n\\r\\n        <div class=\\\"container x_panel no-border\\\" *ngIf=\\\"true\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" novalidate>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-3 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Item ID/ Assets ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n                                        <div class=\\\"input-group\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"itemIdSearch\\\" [name]=\\\"txtItemId\\\" [id]=\\\"'txtItemId'\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'alpha_numeric_underscore_nospace'\\\" [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-3 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Serial #</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n                                        <div class=\\\"input-group\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"serialIdSearch\\\" [name]=\\\"txtserialIdSearch\\\" [id]=\\\"'txtserialIdSearch'\\\" (focusout)=\\\"serialIdCheck()\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'alpha_numeric_underscore_nospace'\\\" [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-2 form-group\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"getItem()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-3 col-sm-6\\\">Requestor</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n                                        <atpar-select [id]=\\\"'ddlrequestor'\\\" [required]=\\\"true\\\" [options]=\\\"requestorData\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [style]=\\\"{'width':'100%'}\\\" [(ngModel)]=\\\"selectedRequestor\\\">\\r\\n                                        </atpar-select>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-3\\\">\\r\\n                                        <button class=\\\"btn btn-purple sbtn\\\">Check Out</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"pop\\\">\\r\\n\\r\\n                            <ul class=\\\"list-inline\\\">\\r\\n                                <li><i class=\\\"fa fa-square\\\" style=\\\"color:#7cb82f;\\\"></i> &nbsp; Box Item</li>\\r\\n                                <li><i class=\\\"fa fa-square\\\" style=\\\"color:#00aeb3;\\\"></i>  &nbsp; Equipment Item</li>\\r\\n                                <li><i class=\\\"fa fa-square\\\" style=\\\"color:#de60f5;\\\"></i>  &nbsp; Furniture Item</li>\\r\\n                            </ul>\\r\\n\\r\\n                            <div class=\\\"panel panel-default no-shadow bdr-1\\\">\\r\\n\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n\\r\\n                                    <div class=\\\"col-xs-12 col-md-5 col-sm-12\\\">\\r\\n                                        <table class=\\\"table table-bordered qty-table\\\">\\r\\n                                            <tbody>\\r\\n                                                <tr>\\r\\n                                                    <td>Item ID</td>\\r\\n                                                    <td><p>{{itemDetails.ITEM_ID}}</p></td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Asset ID</td>\\r\\n                                                    <td><p>{{itemDetails.ITEM_ID}}</p></td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Description</td>\\r\\n                                                    <td><p>{{itemDetails.ITEM_DESCR}}</p></td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Storage Location</td>\\r\\n                                                    <td><p>{{itemDetails.DELIVER_LOCATION}}</p></td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Manufacturer</td>\\r\\n                                                    <td><p>{{itemDetails.MANUFACTURER}}</p></td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Vendor</td>\\r\\n                                                    <td><p>{{itemDetails.VENDOR}}</p></td>\\r\\n                                                </tr>\\r\\n\\r\\n                                                <tr *ngIf=\\\"strPatientCharge=='Y'\\\">\\r\\n                                                    <td>Select Patien</td>\\r\\n                                                    <td>\\r\\n                                                        <a style=\\\"color:purple;\\\" class=\\\"grid-link text-primary\\\" (click)=\\\"onClickPatient()\\\"><u> Select </u></a>  \\r\\n                                                   </td>\\r\\n                                                </tr>\\r\\n\\r\\n                                                <tr *ngIf=\\\"strPatientCharge=='Y'\\\">\\r\\n                                                    <td>Procedure Code</td>\\r\\n                                                    <td><p>{{itemDetails.PROCEDURE_CODE}}</p></td>\\r\\n                                                </tr>\\r\\n                                                \\r\\n                                                <tr>\\r\\n                                                    <td>System Qty</td>\\r\\n                                                    <td><p>{{itemDetails.ITEM_QTY}}</p></td>\\r\\n                                                </tr>\\r\\n                                                <tr class=\\\"new-ht\\\">\\r\\n                                                    <td>Checkout Qty</td>\\r\\n                                                    <td>\\r\\n                                                        <div class=\\\"input-group\\\" style=\\\"width:150px;\\\" *ngIf=\\\"itemTypeIndicator == 'F'\\\">\\r\\n                                                            <span class=\\\"input-group-addon\\\" (click)=\\\"decreaseQuantity()\\\"> <a class=\\\"text-default\\\"> - </a></span>\\r\\n                                                            <atpar-text [id]=\\\"'txtQantity'\\\" [name]=\\\"txtQantity\\\" [style]=\\\"{'height':'34px'}\\\" [(ngModel)]=\\\"itemQuantity\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'alpha_numeric_underscore_nospace'\\\" [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"></atpar-text>\\r\\n                                                            <span class=\\\"input-group-addon\\\" (click)=\\\"increaseQuantity()\\\"> <a class=\\\"text-default\\\"> + </a> </span>\\r\\n                                                        </div>\\r\\n\\r\\n                                                        <p>{{itemDetails.ITEM_QTY}}</p>\\r\\n\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td>Delivery Location</td>\\r\\n                                                    <td><atpar-select [options]=\\\"ddlDeliveryLoc\\\" [id]=\\\"'ddlDeliveryLoc'\\\" [(ngModel)]=\\\"selectedDeliveryLoc\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\"></atpar-select></td>\\r\\n                                                </tr>\\r\\n                                                <tr>\\r\\n                                                    <td colspan=\\\"2\\\">\\r\\n                                                        <button class=\\\"btn btn-purple sbtn pull-right\\\" (click)=\\\"Add()\\\">Add &nbsp; <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"col-xs-12 col-md-7 col-sm-12\\\" *ngIf=\\\"isAdd\\\">\\r\\n                                        <div class=\\\"panel panel-default no-shadow bdr-1 scrl-pnl\\\">\\r\\n                                            <div class=\\\"panel-body\\\">\\r\\n                                                <div class=\\\"col-xs-12\\\">\\r\\n                                                    <div class=\\\"panel panel-green no-shadow bdr-1\\\">\\r\\n                                                        <div class=\\\"panel-body no-padding\\\">\\r\\n                                                            <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"col-md-3\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Item ID-Serial#</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-6 border-panel\\\">\\r\\n                                                                    <div class=\\\"row margin-border\\\">\\r\\n                                                                        <p>Item Description</p>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\">\\r\\n                                                                            <p>Assets Id</p>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\" style=\\\"border-left: 1px solid #e1e1e1;\\\">\\r\\n                                                                            <p>Storage Location</p>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-2\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Checkin qty</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-1\\\" style=\\\"margin-top: 25px;\\\">\\r\\n                                                                    <i class=\\\"fa fa-close fa-bg bg-red danger\\\"></i>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-xs-12\\\">\\r\\n                                                    <div class=\\\"panel panel-blue no-shadow bdr-1\\\">\\r\\n                                                        <div class=\\\"panel-body no-padding\\\">\\r\\n                                                            <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"col-md-3\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Item ID-Serial#</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-6 border-panel\\\">\\r\\n                                                                    <div class=\\\"row margin-border\\\">\\r\\n                                                                        <p>Item Description</p>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\">\\r\\n                                                                            <p>Assets Id</p>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\" style=\\\"border-left: 1px solid #e1e1e1;\\\">\\r\\n                                                                            <p>Storage Location</p>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-2\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Checkin qty</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-1\\\" style=\\\"margin-top: 25px;\\\">\\r\\n                                                                    <i class=\\\"fa fa-close fa-bg bg-red danger\\\"></i>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-xs-12\\\">\\r\\n                                                    <div class=\\\"panel panel-pink no-shadow bdr-1\\\">\\r\\n                                                        <div class=\\\"panel-body no-padding\\\">\\r\\n                                                            <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"col-md-3\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Item ID-Serial#</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-6 border-panel\\\">\\r\\n                                                                    <div class=\\\"row margin-border\\\">\\r\\n                                                                        <p>Item Description</p>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\">\\r\\n                                                                            <p>Assets Id</p>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\" style=\\\"border-left: 1px solid #e1e1e1;\\\">\\r\\n                                                                            <p>Storage Location</p>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-2\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Checkin qty</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-1\\\" style=\\\"margin-top: 25px;\\\">\\r\\n                                                                    <i class=\\\"fa fa-close fa-bg bg-red danger\\\"></i>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-xs-12\\\">\\r\\n                                                    <div class=\\\"panel panel-blue no-shadow bdr-1\\\">\\r\\n                                                        <div class=\\\"panel-body no-padding\\\">\\r\\n                                                            <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"col-md-3\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Item ID-Serial#</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-6 border-panel\\\">\\r\\n                                                                    <div class=\\\"row margin-border\\\">\\r\\n                                                                        <p>Item Description</p>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\">\\r\\n                                                                            <p>Assets Id</p>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\" style=\\\"border-left: 1px solid #e1e1e1;\\\">\\r\\n                                                                            <p>Storage Location</p>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-2\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Checkin qty</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-1\\\" style=\\\"margin-top: 25px;\\\">\\r\\n                                                                    <i class=\\\"fa fa-close fa-bg bg-red danger\\\"></i>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-xs-12\\\">\\r\\n                                                    <div class=\\\"panel panel-blue no-shadow bdr-1\\\">\\r\\n                                                        <div class=\\\"panel-body no-padding\\\">\\r\\n                                                            <div class=\\\"row\\\">\\r\\n                                                                <div class=\\\"col-md-3\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Item ID-Serial#</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-6 border-panel\\\">\\r\\n                                                                    <div class=\\\"row margin-border\\\">\\r\\n                                                                        <p>Item Description</p>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\\\"row\\\">\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\">\\r\\n                                                                            <p>Assets Id</p>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-md-6 ten-padding\\\" style=\\\"border-left: 1px solid #e1e1e1;\\\">\\r\\n                                                                            <p>Storage Location</p>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-2\\\">\\r\\n                                                                    <div class=\\\"row text-center thirty-padding\\\">\\r\\n                                                                        <p>Checkin qty</p>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-md-1\\\" style=\\\"margin-top: 25px;\\\">\\r\\n                                                                    <i class=\\\"fa fa-close fa-bg bg-red danger\\\"></i>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"clear\\\"></div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"content-section implementation\\\">\\r\\n            <atpar-confirmdialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\"></atpar-confirmdialog>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <atpar-growl [value]=\\\"msgs\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n</div>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-check-out.component.html\n// module id = 2135\n// module chunks = 10","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border:1px #eee\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px 0 0 0\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" novalidate>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <br />\\r\\n                                <div class=\\\"pull-right\\\" id=\\\"tdExports\\\" *ngIf=\\\"tdExports\\\">\\r\\n                                    <ul class=\\\"list-inline\\\">\\r\\n                                        <li class=\\\"no-padding\\\">\\r\\n                                            <i class=\\\"fa fa-envelope-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgMail\\\" title=\\\"Send mail\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"onSendMailIconClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                        <li class=\\\"no-padding\\\">\\r\\n                                            <i class=\\\"fa fa-print fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgPrint\\\" title=\\\"Print\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"onPrintClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                        <li class=\\\"no-padding\\\">\\r\\n                                            <i class=\\\"fa fa-file-excel-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgExcel\\\" style=\\\"cursor:pointer;\\\" title=\\\"Excel Format\\\" (click)=\\\"onExportToExcelClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-4\\\">Date</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'DatePicker'\\\" [(ngModel)]=\\\"SelectedDate\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1950:2050\\\" [placeholder]=\\\"'From Date'\\\" [dateFormat]=\\\"'mm/dd/yy'\\\" [readonlyInput]=\\\"true\\\" [required]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></p-calendar>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-6  form-group\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"btnGo_Click()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>   \\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <br />\\r\\n                        <div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"isVisible\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <atpar-datatable [value]=\\\"lstDailyActivityDetails\\\"  [pageLinks]=\\\"3\\\" [rows]=\\\"rowsPerPage\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\" (filteredData)=\\\"onChargesFilterData($event)\\\">                                    \\r\\n                                    <p-column header=\\\"User\\\" field=\\\"USERNAME\\\"  [style]=\\\"{'width':'25px','text-align':'center'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column header=\\\"No Of Locations Delivered To\\\" field=\\\"NO_LOCATIONS_DELIVERED\\\" [style]=\\\"{'width':'25px','text-align':'center'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column header=\\\"No Of Items Delivered\\\" field=\\\"NO_ITEMS_DELIVERED\\\" [style]=\\\"{'width':'25px','text-align':'center'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column header=\\\"Avg. Time Taken For An Item (Secs)\\\" field=\\\"AVG_DELIVER_TIME\\\"  [style]=\\\"{'width':'50px','text-align':'center'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>                                    \\r\\n                                    <p-column header=\\\"\\\" [style]=\\\"{'width':'10px'}\\\">\\r\\n                                        <template let-details=\\\"rowData\\\" pTemplate type=\\\"body\\\">\\r\\n                                            <a class=\\\"grid-link\\\" id=\\\"lnkbtnDetails\\\" (click)=\\\"onDetailsClick(details)\\\" style=\\\"cursor:pointer;color:#6c276a;\\\">Details</a>\\r\\n                                        </template>\\r\\n                                    </p-column>                                    \\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>   \\r\\n</div>\\r\\n\\r\\n<atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n\\r\\n<mail-dialog header=\\\"Enter Recipient`s Email Address\\\" [width]=\\\"450\\\" (onClose)=\\\"closeMailPopup()\\\" [(visible)]=\\\"isMailDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\">\\r\\n    <div class=\\\"ui-grid ui-grid-responsive ui-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-2 col-md-2 col-sm-3 col-xs-3\\\">\\r\\n                <span>To : </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-8 col-xs-8\\\">\\r\\n                <atpar-text [(ngModel)]=\\\"toMailAddr\\\" [name]=\\\"txtToMailAddr\\\" [id]=\\\"'txtToMailAddr'\\\"></atpar-text>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-2 col-sm-3 col-xs-3\\\">\\r\\n                <span><button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"onSendMailClick()\\\">Send &nbsp;<i class=\\\"fa fa-share-square-o\\\" aria-hidden=\\\"true\\\"></i></button> </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mail-dialog>\\r\\n\\r\\n<style>\\r\\n    .modal-content {\\r\\n        top: 50% !important;\\r\\n    }\\r\\n</style>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-daily-activity.component.html\n// module id = 2136\n// module chunks = 10","module.exports = \"<div>\\r\\n    <span>this is trackit daily user activity screen.</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-daily-user-activity.component.html\n// module id = 2137\n// module chunks = 10","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:10px 0px 10px 0px;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"pull-right\\\" id=\\\"tdExports\\\" *ngIf=\\\"showexport\\\">\\r\\n                                    <ul class=\\\"list-inline\\\">\\r\\n                                        <li class=\\\"no-padding\\\" style=\\\"cursor:pointer\\\">\\r\\n                                            <i class=\\\"fa fa-envelope-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgMail\\\" title=\\\"Send mail\\\"  (click)=\\\"onSendMailIconClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                        <li class=\\\"no-padding\\\" style=\\\"cursor:pointer\\\">\\r\\n                                            <i class=\\\"fa fa-print fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgPrint\\\" title=\\\"Print\\\" (click)=\\\"onPrintClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                        <li class=\\\"no-padding\\\" style=\\\"cursor:pointer\\\">\\r\\n                                            <i class=\\\"fa fa-file-excel-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgExcel\\\" title=\\\"Excel Format\\\" (click)=\\\"onExportToExcelClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Request#</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"PoId\\\" [id]=\\\"'Request'\\\" [name]=\\\"'request'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Recipient</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"Recipient\\\" [id]=\\\"'Recipient'\\\" [name]=\\\"'recipient'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Location</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"Location\\\" [id]=\\\"'location'\\\" [name]=\\\"'location'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Vendor Name</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"VendorName\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'vendorName'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">User ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n\\r\\n                                        <atpar-select [options]=\\\"lstUsers\\\" [id]=\\\"'ddlUser'\\\" [required]=\\\"false\\\" [(ngModel)]=\\\"userId\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Requestor ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstRequestor\\\" [id]=\\\"'ddlRequestor'\\\" [required]=\\\"false\\\" [(ngModel)]=\\\"selectedRequestor\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Desc</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"ItmDesc\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'descr'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">ItemID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"ItemId\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'itemId'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Department ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstDeptDetails\\\" [id]=\\\"'ddlDepartment'\\\" [required]=\\\"false\\\" [(ngModel)]=\\\"selectedDeptID\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Status</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstStatus\\\" [id]=\\\"'ddlStatus'\\\" [required]=\\\"false\\\" [(ngModel)]=\\\"selectedStatus\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">From Date</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'fromDate'\\\" [(ngModel)]=\\\"fromDate\\\" [placeholder]=\\\"'From Date'\\\" [dateFormat]=\\\"'mm/dd/yy'\\\" [required]=\\\"true\\\" [readonlyInput]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1950:2050\\\"></p-calendar>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">To Date</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'toDate'\\\" [(ngModel)]=\\\"toDate\\\" [placeholder]=\\\"'To Date'\\\" [dateFormat]=\\\"'mm/dd/yy'\\\" [required]=\\\"true\\\" [readonlyInput]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1950:2050\\\"></p-calendar>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-md-offset-5\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"getDeliveryDetails()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </form>\\r\\n\\r\\n                        <div class=\\\"col-xs-12 table-responsive\\\" id=\\\"Exportdiv\\\" *ngIf=\\\"showGrid\\\">\\r\\n                            <atpar-datatable [value]=\\\"deliverHeaders\\\" [paginator]=\\\"true\\\" id=\\\"DelvTable\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"deliverDetailRows\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\" (filteredData)=\\\"onDeliverFilterData($event)\\\" resizableColumns=\\\"true\\\">\\r\\n\\r\\n                                <p-column header=\\\"Transaction ID\\\" field=\\\"TRANS_ID\\\" *ngIf=\\\"false\\\"></p-column>\\r\\n                                <p-column expander=\\\"true\\\" styleClass=\\\"col-icon\\\"  [style]=\\\"{'width':'35px'}\\\"></p-column>\\r\\n                                <p-column header=\\\"Request# - Desc\\\" field=\\\"ORDER_NO\\\"  [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n                                    <template let-heddetail=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <span style=\\\"float:left\\\">{{heddetail.ORDER_NO}}</span>\\r\\n                                        <span>-</span>\\r\\n                                        <span>{{heddetail.REPORT_DATA_8}}</span>\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n                                <p-column header=\\\"Location\\\" field=\\\"LOCATION\\\" [style]=\\\"{'width':'150px'}\\\"  [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Vendor Name\\\" field=\\\"VENDOR_NAME\\\"  [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Requestor\\\" field=\\\"DELIVERED_TO\\\"  [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Status\\\" field=\\\"STATUS\\\"  [style]=\\\"{'width':'120px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Department ID\\\" field=\\\"REPORT_DATA_25\\\"  [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                 <template let-header pTemplate=\\\"rowexpansion\\\">\\r\\n                                   <atpar-datatable [value]=\\\"header.DETAILS\\\" [paginator]=\\\"false\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"5\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                        <p-column header=\\\"Event\\\" field=\\\"EVENT_STATUS_MESSAGE\\\" [style]=\\\"{'width':'120px'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"Event Date\\\" field=\\\"UPDATE_DATE\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"User\\\" field=\\\"USERNAME\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"Recipient\\\" field=\\\"RECEPIENT\\\" [style]=\\\"{'width':'120px'}\\\"></p-column>                                      \\r\\n                                        <p-column header=\\\"Signature\\\" field=\\\"SIGNATURE_ID\\\">\\r\\n                                            <template let-col let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n\\r\\n                                                <img src=\\\"data:image/jpg;base64,{{ven.SIGNATURE_ID}}\\\" *ngIf=\\\"ven.EVENT_STATUS_MESSAGE=='Deliver'?true:false\\\">\\r\\n                                            </template>\\r\\n\\r\\n                                        </p-column>\\r\\n                                    </atpar-datatable>                               \\r\\n                                   \\r\\n                                </template>\\r\\n                            </atpar-datatable>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"popUp\\\">\\r\\n                            <mail-dialog header=\\\"Enter Recipient`s Email Address\\\" [width]=\\\"450\\\" (onClose)=\\\"closeMailPopup()\\\" [(visible)]=\\\"isMailDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\">\\r\\n                                <div class=\\\"ui-grid ui-grid-responsive ui-fluid\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-lg-2 col-md-2 col-sm-3 col-xs-3\\\">\\r\\n                                            <span>To : </span>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-lg-6 col-md-6 col-sm-8 col-xs-8\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"toMailAddr\\\" [name]=\\\"txtToMailAddr\\\" [id]=\\\"'txtToMailAddr'\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-lg-2 col-md-2 col-sm-3 col-xs-3\\\">\\r\\n                                            <span><button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"onSendMailClick()\\\">Send &nbsp;<i class=\\\"fa fa-share-square-o\\\" aria-hidden=\\\"true\\\"></i></button> </span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </mail-dialog>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<style>\\r\\n     /* [style]=\\\"{'width':'50%','position':'absolute','left':'50%','top':'50%','transform':'translate(-50%, -50%)'}\\\"\\r\\n    */\\r\\n     img.gray-icon-img:hover {\\r\\n         filter: grayscale(0);\\r\\n         transition-property: filter;\\r\\n         transition-duration: 1s;\\r\\n         background: purple;\\r\\n         -webkit-filter: grayscale(0%) brightness(122%) contrast(478%);\\r\\n         /*-webkit-filter: sepia(100%);\\r\\n     background: transparent;*/\\r\\n     }\\r\\n\\r\\n     .popUp {\\r\\n         /*width:50%!important;\\r\\n     position: absolute !important;\\r\\n     left: 50% !important;\\r\\n     top: 0% !important;\\r\\n     transform: translate(-50%, -50%) !important;*/\\r\\n     }\\r\\n</style>\\r\\n<style>\\r\\n    .modal-content {\\r\\n        top: 50% !important;\\r\\n    }\\r\\n</style>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-delivery-report.component.html\n// module id = 2138\n// module chunks = 10","module.exports = \"<div>\\r\\n    <span>this is trackit destruction report screen.</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-destruction-report.component.html\n// module id = 2139\n// module chunks = 10","module.exports = \"<div>\\r\\n    <span>this is trackit equipment tracking report screen.</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-equipment-tracking-report.component.html\n// module id = 2140\n// module chunks = 10","module.exports = \"\\r\\n<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px 0 10px 0;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" novalidate>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Select Indicator</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"indicatorType\\\" [(ngModel)]=\\\"selectedIndicator\\\" [id]=\\\"'ddlErpsy'\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [required]=\\\"true\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Destruction Date</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'destructionDatePicker'\\\" [required]=\\\"true\\\" (onBlur)=\\\"validateDestructionDate()\\\" [(ngModel)]=\\\"destructionDate\\\" [minDate]=\\\"minDateValue1\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></p-calendar>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"getItemsToInActivate()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"isVisible\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <atpar-datatable [value]=\\\"lstDBData\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"pazeSize\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\" (filteredData)=\\\"filterdata($event)\\\">\\r\\n                                    <p-column field=\\\"ITEM_TYPE\\\" header=\\\"Equipment Type\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'12%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"ITEM_ID\\\" header=\\\"Item ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'12%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"ITEM_DESCR\\\" header=\\\"Description\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'18%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"STORAGE_LOCATION\\\" header=\\\"Storage Location\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'10%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"DESTRUCTION_DATE\\\" header=\\\"Destruction Date\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'8%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"COMMENTS\\\" header=\\\"Comments\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'18%'}\\\"></p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'7%', 'text-align':'center'}\\\" header=\\\"Select\\\">\\r\\n                                        <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                            <ul class=\\\"list-inline li-all-none\\\">\\r\\n                                                <li>\\r\\n\\r\\n                                                    <span (click)=\\\"checkAll()\\\" style=\\\"cursor:pointer\\\">All</span>\\r\\n                                                </li> |\\r\\n                                                <li>\\r\\n                                                    <span (click)=\\\"unCheckAll()\\\" style=\\\"cursor:pointer\\\">None</span>\\r\\n\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </template>\\r\\n                                        <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <atpar-switch (change)=\\\"selectedRow(ven,$event)\\\" [(ngModel)]=\\\"ven.checkvalue\\\"></atpar-switch>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                </atpar-datatable>\\r\\n                                <br />\\r\\n                                <div class=\\\"col-md-4 col-md-offset-5 col-sm-6 col-sm-offset-5 col-xs-12\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"inactivateItems()\\\" type=\\\"button\\\">Update &nbsp;<i class=\\\"fa fa-check\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-inactivate-items.component.html\n// module id = 2141\n// module chunks = 10","module.exports = \"<div>\\r\\n    <span>This is trackit item master report screen.</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-item-master-report.component.html\n// module id = 2142\n// module chunks = 10","module.exports = \"<!--<div>\\r\\n    <span>This is trackit Manage departments screen.</span>\\r\\n</div>-->\\r\\n<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px 0 10px 0;\\\">\\r\\n                        <div class=\\\"container\\\">\\r\\n                            <form class=\\\"form-horizontal form-label-left\\\" *ngIf=\\\"showAddButton\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-4\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"departmentIDSearch\\\" [name]=\\\"txtdepartmentID\\\" [validations]=\\\"'except_less_greater_symbols'\\\" [id]=\\\"'departmentIdSearch'\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [placeholder]=\\\"'Department / Description'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-4\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-purple sbtn\\\" name=\\\"btnGo\\\" (click)=\\\"BindGrid()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-purple sbtn\\\" name=\\\"btnAdd\\\" (click)=\\\"adddepartment()\\\">Add Department &nbsp;<i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"table\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <atpar-datatable [value]=\\\"lstDepts\\\" [paginator]=\\\"true\\\" #dt [pageLinks]=\\\"3\\\" [rows]=\\\"pageSize\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n\\r\\n                                    <p-column field=\\\"\\\" header=\\\"Action\\\" [style]=\\\"{'width':'4%','text-align':'center'}\\\">\\r\\n                                        <template let-dept=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <i class=\\\"fa fa-pencil fa-bg bg-red\\\" title=\\\"Edit\\\" (click)=\\\"edit(dept)\\\" style=\\\"cursor:pointer;\\\"></i>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"ORG_GROUP_ID\\\" header=\\\"Org Group ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width': '10%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"DEPT_ID\\\" header=\\\"Department ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width': '22%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"DESCRIPTION\\\" header=\\\"Description\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"checkvalue\\\" header=\\\"Status\\\" [filter]=\\\"true\\\" [style]=\\\"{'width': '8%','overflow':'visible','text-align':'center'}\\\" filterMatchMode=\\\"equals\\\">\\r\\n                                        <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                            <atpar-select [options]=\\\"ddlStatusType\\\" [(ngModel)]=\\\"statusType\\\" [style]=\\\"{'width':'100%'}\\\" [id]=\\\"'ddlddlStatusType'\\\" [required]=\\\"false\\\" \\r\\n                                                          \\r\\n                                                                         (onChange)=\\\"dataFilter($event.value,col.field,col.filterMatchMode)\\\"\\r\\n                                                        ></atpar-select>\\r\\n                                            <!--(onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\"-->\\r\\n                                        </template>\\r\\n                                        <template let-col let-dept=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <!--<atpar-switch name=\\\"changeStatus\\\" [(ngModel)]=\\\"dept.checkvalue\\\" (change)=\\\"changeStatus(dept)\\\"></atpar-switch>-->\\r\\n                                            <atpar-switch name=\\\"changeStatus\\\" [(ngModel)]=\\\"dept.checkvalue\\\" [checked]=dept[col.field] (change)=\\\"changeStatus(dept)\\\"></atpar-switch>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                </atpar-datatable> \\r\\n                            </div>\\r\\n                            <br>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\" *ngIf=\\\"form\\\">\\r\\n                            <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Org Group ID</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{orgGrpId}}</label>\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [isfocus]=\\\"blnShowOrgGroupDD\\\" [(ngModel)]=\\\"selectedOrgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\" (onChange)=\\\"ddlOrgIDChanged()\\\" [selectOnKeyPress]=\\\"true\\\"></atpar-select>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Department ID</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtDeptID'\\\" [name]=\\\"txtDeptID\\\" [(ngModel)]=\\\"newItem.DEPT_ID\\\" *ngIf=\\\"!blnShowOrgGroupDD && !showLable\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=50,alpha_numeric_underscore_nospace'\\\" [title]=\\\"'Dept ID - Allows alphabets,numbers and underscore(_)'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [isFocused]=\\\"'true'\\\"></atpar-text>\\r\\n                                        <atpar-text [id]=\\\"'txtDeptID'\\\" [name]=\\\"txtDeptID\\\" [(ngModel)]=\\\"newItem.DEPT_ID\\\" *ngIf=\\\"blnShowOrgGroupDD && !showLable\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=50,alpha_numeric_underscore_nospace'\\\" [title]=\\\"'Dept ID - Allows alphabets,numbers and underscore(_)'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" ></atpar-text>\\r\\n                                        <label class=\\\"control-label lbl-left\\\" *ngIf=\\\"showLable\\\">{{newItem.DEPT_ID}}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                               \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Description</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtDesc'\\\" [name]=\\\"txtDesc\\\" [(ngModel)]=\\\"newItem.DESCRIPTION\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=50,everything_except_space_as_fstchar'\\\" [title]=\\\"'Dept Desc - Allows any character A-Z,a-z,0-9,!,#,$...'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" *ngIf=\\\"showTextBox\\\"></atpar-text>\\r\\n                                        <atpar-text [id]=\\\"'txtDesc'\\\" [name]=\\\"txtDesc\\\" [(ngModel)]=\\\"newItem.DESCRIPTION\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=50,everything_except_space_as_fstchar'\\\" [title]=\\\"'Dept Desc - Allows any character A-Z,a-z,0-9,!,#,$...'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" *ngIf=\\\"!showTextBox\\\" [isFocused]=\\\"'true'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4 col-md-offset-5 col-sm-6 col-sm-offset-5 col-xs-12\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" [disabled]=\\\"loading\\\" (click)=\\\"saveOrUpdateDepartment()\\\">{{Title}} &nbsp;<i class=\\\"fa fa-{{bindSymbal}}\\\"></i></button>\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" (click)=\\\"close()\\\"><i class=\\\"fa fa-arrow-left\\\"></i> &nbsp;Go Back</button>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-manage-departments.component.html\n// module id = 2143\n// module chunks = 10","module.exports = \"<!--<div>\\r\\n    <span>This is trackit Manage equipment items screen.</span>\\r\\n</div>-->\\r\\n<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:10px 0px 10px 0px;\\\">\\r\\n\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" *ngIf=\\\"page\\\">\\r\\n                           \\r\\n                            <div class=\\\"col-xs-12 col-lg-12 col-sm-12 col-md-12\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-6 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\"> Org Group ID</label>\\r\\n                                        <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                            <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{orgGrpIDData}}</label>\\r\\n                                            <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedOrgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\" (onChange)=\\\"ddlOrgGrpIdChanged()\\\"></atpar-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-6 form-group\\\">\\r\\n\\r\\n\\r\\n                                        <div class=\\\"col-xs-12\\\">\\r\\n                                            <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Item ID/Asset ID</label>\\r\\n                                            <div class=\\\"col-xs-12 col-md-6 col-sm-6\\\">\\r\\n                                                <atpar-ac-server [(ngModel)]=\\\"selectedItemAsset\\\" \\r\\n                                                                   [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                                  [mandatory]=\\\"'true'\\\"\\r\\n                                                                  [id]=\\\"'itemidassetid'\\\"  \\r\\n                                                                  [suggestions]=\\\"lstFilteredItems\\\" (completeMethod)=\\\"fillItemsAuto($event)\\\"></atpar-ac-server>\\r\\n                                            \\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"clearfix\\\"></div>\\r\\n                                        <br>\\r\\n\\r\\n                                        <div class=\\\"col-xs-12\\\">\\r\\n                                            <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Description/Comments</label>\\r\\n                                            <div class=\\\"col-xs-12 col-md-6 col-sm-6\\\">\\r\\n\\r\\n\\r\\n                                                <atpar-text [(ngModel)]=\\\"enteredDescription\\\" [name]=\\\"txtenteredDescription\\\" [validations]=\\\"'except_less_greater_symbols'\\\" [id]=\\\"'txtenteredDescription'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n\\r\\n                                            \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-xs-12 col-sm-6 col-md-2\\\">\\r\\n                                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"search()\\\">Search &nbsp; <i class=\\\"fa fa-search\\\"></i></button>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n                                        <div class=\\\"col-xs-12 col-sm-12 col-md-6 form-group\\\">\\r\\n                                            <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Equipment Type</label>\\r\\n                                            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n                                                <atpar-select [options]=\\\"lstEquipmentTypes\\\" [(ngModel)]=\\\"selectedEquipmentType\\\" [id]=\\\"'ddlEquipmentType'\\\" filter=\\\"filter\\\" (onChange)=\\\"ddlEquipmentTypeChanged()\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-xs-12 col-sm-6 col-md-2\\\">\\r\\n                                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"addNewItem()\\\">Add New Item &nbsp; <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"row\\\">\\r\\n\\r\\n                                        <div class=\\\"col-xs-12 col-sm-12 col-md-6 form-group\\\">\\r\\n                                            <div class=\\\"col-xs-12\\\">\\r\\n                                                <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Item ID/Asset ID</label>\\r\\n                                                <div class=\\\"col-xs-12 col-md-6 col-sm-6\\\">\\r\\n\\r\\n\\r\\n                                                    <atpar-select [options]=\\\"lstItemDetails\\\" (onChange)=\\\"ddlItemIDsChanged()\\\" [(ngModel)]=\\\"selectedItemID\\\" [id]=\\\"'ddlItemIDs'\\\" filter=\\\"filter\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n\\r\\n\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-xs-12 col-sm-6 col-md-2\\\">\\r\\n\\r\\n                                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"btnGo_Click()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n\\r\\n                                                    <!--<button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"btnGo_Click()\\\"> &nbsp;<i class=\\\"fa fa-arrow-right\\\"></i>Go</button>-->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n                                            <div class=\\\"clearfix\\\"></div>\\r\\n                                            <br>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n\\r\\n                        <div class=\\\"col-xs-12 table-responsive \\\">\\r\\n\\r\\n                           \\r\\n\\r\\n                            <div class=\\\"col-xs-12 table-responsive \\\">\\r\\n\\r\\n                                <div class=\\\"container\\\" *ngIf=\\\"showCommentsGrid\\\">\\r\\n\\r\\n                                    <atpar-datatable [value]=\\\"tkitEquipmentItemDetailsList\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" (filteredData)=\\\"filterdata($event)\\\" [rows]=\\\"pazeSize\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n\\r\\n\\r\\n                                        <p-column field=\\\"\\\" header=\\\"\\\" [style]=\\\"{'width':'6%'}\\\">\\r\\n                                            <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                                <i class=\\\"fa fa-pencil fa-bg bg-red\\\" (click)=\\\"editItemDetails(ven)\\\"></i>\\r\\n                                            </template>\\r\\n                                        </p-column>\\r\\n\\r\\n                                        <p-column field=\\\"ITEM_TYPE\\\" header=\\\"Equipment Type\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n\\r\\n                                        <p-column field=\\\"ITEM_ID\\\" header=\\\"ItemID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n                                            <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                                <a style=\\\"cursor:pointer\\\" (click)=\\\"add()\\\">{{ven.ITEM_ID}}</a>\\r\\n                                            </template>\\r\\n                                        </p-column>\\r\\n\\r\\n                                        <p-column field=\\\"ITEM_DESCR\\\" header=\\\"Description\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n\\r\\n\\r\\n                                        <p-column field=\\\"COMMENTS\\\" header=\\\"Comments\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n\\r\\n                                    </atpar-datatable>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div class=\\\"col-md-12\\\" *ngIf=\\\"showitemdetailsFields\\\">\\r\\n                            <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                                <div class=\\\"pull-left col-md-4\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Equipment Type</label>\\r\\n                                    <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                                        <label class=\\\"control-label lbl-left\\\">Operation Table</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <button *ngIf=\\\"showAddSerailbutton\\\" class=\\\"btn btn-purple sbtn pull-right\\\" (click)=\\\"addNewserials()\\\" style=\\\"margin-right:10px;\\\">Add Serial &nbsp; <i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                <br>\\r\\n                                <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                                    <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Item ID</label>\\r\\n                                            <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                                                <atpar-text [id]=\\\"'txtItemDvalue'\\\"\\r\\n                                                            [name]=\\\"txtItemDvalue\\\"\\r\\n                                                            [disabled]=\\\"newItem.Disable\\\"\\r\\n                                                            [(ngModel)]=\\\"newItem.ITEM_ID\\\"\\r\\n                                                            \\r\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                            [validations]=\\\"'mandatory,max=16,alpha_numeric_underscore_nospace'\\\"\\r\\n                                                            [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"\\r\\n                                                            (bindModelDataChange)=\\\"bindModelDataChange($event)\\\"></atpar-text>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Storage Location</label>\\r\\n                                            <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                                                <atpar-text [id]=\\\"'txtStoragelocation'\\\"\\r\\n                                                            [name]=\\\"txtStoragelocation\\\"\\r\\n                                                            [(ngModel)]=\\\"newItem.STORAGE_LOCATION\\\"\\r\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                            [validations]=\\\"'mandatory,max=16,alpha_numeric_underscore_nospace'\\\"\\r\\n                                                            [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"\\r\\n                                                            (bindModelDataChange)=\\\"bindModelDataChange($event)\\\"></atpar-text>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\" *ngIf=\\\"showMfrColumn\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Manufacturer</label>\\r\\n                                            <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                                                <atpar-text [id]=\\\"'txtManu'\\\"\\r\\n                                                            [name]=\\\"txtManu\\\"\\r\\n                                                            [(ngModel)]=\\\"newItem.MANUFACTURER\\\"\\r\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                            [validations]=\\\"'max=16,alpha_numeric_underscore_nospace'\\\"\\r\\n                                                            [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"></atpar-text>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Owner</label>\\r\\n                                            <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n\\r\\n                                                <atpar-select [options]=\\\"lstOwnerDetails\\\" (onChange)=\\\"ddlOwnerChanged()\\\" [(ngModel)]=\\\"selectedOwner\\\" [id]=\\\"'ddlOWNER'\\\" filter=\\\"filter\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Comments</label>\\r\\n                                            <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                                                <textarea [id] =\\\"'txtcomments'\\\" name=\\\"txtcomments\\\" [(ngModel)]=\\\"newItem.COMMENTS\\\" class=\\\"form-control\\\" style=\\\"resize: none; z-index: 3; position: relative; line-height: 20px; font-size: 14px; transition: none; background: transparent !important;\\\">{{newItem.COMMENTS}}</textarea>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div class=\\\"form-group\\\" *ngIf=\\\"showDestructionColumn\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Destruction / Max Storage Date</label>\\r\\n                                            <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n\\r\\n\\r\\n                                                <p-calendar [showIcon]=\\\"true\\\"\\r\\n                                                            [id]=\\\"'MaxStorageDater'\\\"\\r\\n                                                            [(ngModel)]=\\\"newItem.DESTRUCTION_DATE\\\"\\r\\n                                                            [required]=\\\"true\\\"\\r\\n                                                            [monthNavigator]=\\\"true\\\" \\r\\n                                                            [yearNavigator]=\\\"true\\\" \\r\\n                                                            yearRange=\\\"2000:2030\\\"\\r\\n                                                            [placeholder]=\\\"'From Date'\\\"\\r\\n                                                            [readonlyInput]=\\\"true\\\"\\r\\n                                                            (onFocus)=\\\"onfocusToCalendar($event)\\\"\\r\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                            [dateFormat]=\\\"'mm/dd/yy'\\\"></p-calendar>\\r\\n\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-lg-6 col-md-6 col-sm-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Description</label>\\r\\n                                            <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                                                <atpar-text [id]=\\\"'txtDescription'\\\"\\r\\n                                                            [name]=\\\"txtDescription\\\"\\r\\n                                                            [(ngModel)]=\\\"newItem.ITEM_DESCR\\\"\\r\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                            [validations]=\\\"'mandatory,max=50,everything_except_space_as_fstchar'\\\"\\r\\n                                                            [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"\\r\\n                                                            (bindModelDataChange)=\\\"bindModelDataChange($event)\\\"></atpar-text>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div class=\\\"form-group\\\" *ngIf=\\\"showVendorColumn\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Vendor</label>\\r\\n                                            <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                                                <atpar-select [options]=\\\"lstVendorDetails\\\" (onChange)=\\\"ddlvendorChanged()\\\" [(ngModel)]=\\\"selectedVendor\\\" [id]=\\\"'ddlVENDOR'\\\" filter=\\\"filter\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n                                                <!--<atpar-text [id]=\\\"'txtvendor'\\\"\\r\\n                                                            [name]=\\\"txtvendor\\\"\\r\\n                                                            [(ngModel)]=\\\"newItem.VENDOR\\\"\\r\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                            [validations]=\\\"'max=16,alpha_numeric_underscore_nospace'\\\"\\r\\n                                                            [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"></atpar-text>-->\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Owner Type</label>\\r\\n                                            <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n\\r\\n                                                <atpar-select [options]=\\\"lstOwnerType\\\"  (onChange)=\\\"ddlOwnerTypeChanged()\\\" [(ngModel)]=\\\"selectedOwnerType\\\" [id]=\\\"'ddlOWNERTYPE'\\\" filter=\\\"filter\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div class=\\\"form-group\\\" *ngIf=\\\"showDepartmentsColumn\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Requesting Department</label>\\r\\n\\r\\n\\r\\n                                            <atpar-listbox [options]=\\\"lstDeptDetails\\\" [(ngModel)]=\\\"selectedDeptIDs\\\" (onChange)=\\\"ddlDeptIDChanged()\\\"   multiple=\\\"multiple\\\" [id]=\\\"'ddldd'\\\"  checkbox=\\\"checkbox\\\" filter=\\\"filter\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-listbox>\\r\\n\\r\\n\\r\\n                                            <!--<atpar-multiSelect [options]=\\\"lstDeptDetails\\\" [(ngModel)]=\\\"selectedDeptIDs\\\" (onChange)=\\\"ddlDeptIDChanged()\\\"  [id]=\\\"'ddldd'\\\"   [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-multiSelect>-->\\r\\n\\r\\n                                        </div>\\r\\n\\r\\n\\r\\n                                        <div class=\\\"form-group\\\" *ngIf=\\\"showImageColumn\\\">\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Image</label>\\r\\n\\r\\n\\r\\n                                            <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n\\r\\n                                                <img *ngIf=\\\"newItem.showImage\\\" [src]=\\\"newItem.IMAGE_PATH\\\"  style=\\\"width:20px; height:20px\\\">\\r\\n\\r\\n                                                <div class=\\\"input-group image-preview \\\">\\r\\n                                                    <input class=\\\"form-control image-preview-filename\\\" disabled=\\\"disabled\\\" placeholder=\\\"No File Chosen\\\" type=\\\"text\\\" title=\\\"{{userSelectedFile}}\\\" [(ngModel)]=\\\"userSelectedFile\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                    <span class=\\\"input-group-btn\\\">\\r\\n                                                        <button class=\\\"btn btn-default image-preview-clear\\\" style=\\\"display:none;\\\" type=\\\"button\\\"> <span class=\\\"glyphicon glyphicon-remove\\\"></span> Clear </button>\\r\\n                                                        <div class=\\\"btn btn-default image-preview-input\\\">\\r\\n                                                            <span class=\\\"glyphicon glyphicon-folder-open\\\"></span> <span class=\\\"image-preview-input-title\\\">Browse</span>\\r\\n                                                            <input type=\\\"file\\\" id=\\\"FileImage\\\" accept=\\\"image/*\\\" (change)=\\\"fileUpload($event)\\\" name=\\\"input-file-preview\\\" />\\r\\n                                                        </div>\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div *ngIf=\\\"showQuantityColumn\\\">\\r\\n                                            <label  for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Quantity</label>\\r\\n                                                <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                                                    <atpar-text\\r\\n                                                                [id]=\\\"'txtQuantity'\\\" [name]=\\\"txtQuantity\\\"\\r\\n                                                                [(ngModel)]=\\\"newItem.ITEM_QTY\\\"\\r\\n                                                                [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                                [validations]=\\\"'mandatory,max=16,numeric'\\\"\\r\\n                                                                [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"\\r\\n                                                                (bindModelDataChange)=\\\"bindModelDataChange($event)\\\">\\r\\n\\r\\n                                                    </atpar-text>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n\\r\\n                                            <div  *ngIf=\\\"showQuantityLabel\\\">\\r\\n\\r\\n                                                <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">Quantity</label>\\r\\n                                                <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n\\r\\n                                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">{{newItem.ITEM_QTY}}</label>\\r\\n                                                   \\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n                                            <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-2 col-sm-2 col-xs-12\\\">Inactivate Item</label>\\r\\n                                            <div class=\\\"col-md-2 col-sm-2 col-xs-12\\\">\\r\\n                                                <atpar-switch [(ngModel)]=\\\"newItem.ITEM_INACTIVATED\\\" (change)=\\\"ItemActiveInActive(newItem,$event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-switch>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"clear\\\"></div>\\r\\n                                    <br>\\r\\n\\r\\n\\r\\n                                    <div class=\\\"container\\\" *ngIf=\\\"showlotserialsgrid\\\">\\r\\n                                        <atpar-datatable [value]=\\\"tkitEqItmLotSerailList\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"5\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n\\r\\n                                            <p-column field=\\\"\\\" header=\\\"\\\" [style]=\\\"{'width':'6%'}\\\">\\r\\n                                                <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                                    <i class=\\\"fa fa-pencil fa-bg bg-red\\\" (click)=\\\"editserial(ven)\\\"></i>\\r\\n                                                </template>\\r\\n                                            </p-column>\\r\\n\\r\\n                                            <p-column field=\\\"SERIAL_NO\\\" header=\\\"Serial #\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                            <p-column field=\\\"LOT_NO\\\" header=\\\"Lot #\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                            <p-column field=\\\"ASSET_ID\\\" header=\\\"Assets ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                            <p-column field=\\\"USER_FIELD_1\\\" header=\\\"User Field\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n\\r\\n                                            <p-column field=\\\"SERVICE_DT_TIME\\\" header=\\\"Next Service Date-Time(HH:MM)\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n\\r\\n                                            <p-column field=\\\"STATUS\\\" header=\\\"Active/Inactive\\\">\\r\\n                                                <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                                    <atpar-switch [(ngModel)]=\\\"ven.STATUS\\\" (change)=\\\"selectedLotSerialAvailability(ven,$event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-switch>\\r\\n                                                </template>\\r\\n                                            </p-column>\\r\\n                                        </atpar-datatable>\\r\\n                                    </div>\\r\\n\\r\\n\\r\\n                                    <div class=\\\"col-md-4 col-md-offset-5 col-sm-6 col-sm-offset-5 col-xs-12\\\">\\r\\n                                        <button *ngIf=\\\"additemflag\\\" class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" [disabled]=\\\"disableButton\\\" (click)=\\\"createandprint()\\\">Create and Print-label &nbsp;<i class=\\\"fa fa-print\\\"></i></button>\\r\\n                                        <button *ngIf=\\\"edititemflag\\\" class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" [disabled]=\\\"disableButton\\\" (click)=\\\"updateandprint()\\\">Update and Print-label &nbsp;<i class=\\\"fa fa-print\\\"></i></button>\\r\\n                                        <button *ngIf=\\\"additemflag\\\" class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" [disabled]=\\\"disableButton\\\" (click)=\\\"create()\\\">Create &nbsp;<i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                        <button *ngIf=\\\"edititemflag\\\" class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" [disabled]=\\\"disableButton\\\" (click)=\\\"update()\\\">Update &nbsp;<i class=\\\"fa fa-check\\\"></i></button>\\r\\n                                        <button class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" (click)=\\\"gobackFromItemdetails()\\\"><i class=\\\"fa fa-arrow-left\\\"></i>&nbsp; Go Back </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <!--adding lot serails of equipment type-->\\r\\n\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" *ngIf=\\\"showLotSerialFields\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Serial ID</label>\\r\\n                                <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                    <atpar-text [id]=\\\"'txtSD1'\\\"\\r\\n                                                [name]=\\\"txtSD1\\\"\\r\\n                                                 [(ngModel)]=\\\"newItemLotSerial.SERIAL_NO\\\"\\r\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                [validations]=\\\"'mandatory,max=16,alpha_numeric_underscore_nospace'\\\"\\r\\n                                                [disabled]=\\\"newItemLotSerial.Disable\\\"\\r\\n                                                [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"\\r\\n                                                (bindModelDataChange)=\\\"bindModelDataChange($event)\\\">\\r\\n\\r\\n                                    </atpar-text>\\r\\n                                    <label class=\\\"control-label lbl-left\\\" *ngIf=\\\"showManageEdit\\\">{{addUserData.USER_ID}}</label>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6 col-sm-6 col-xs-12 help_txt\\\">\\r\\n                                    Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Lot ID</label>\\r\\n                                <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                    <atpar-text [id]=\\\"'txtLD1'\\\"\\r\\n                                                [name]=\\\"txtLD1\\\"\\r\\n                                                  [(ngModel)]=\\\"newItemLotSerial.LOT_NO\\\"\\r\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                [validations]=\\\"'mandatory,max=16,alpha_numeric_underscore_nospace'\\\"\\r\\n                                                [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"\\r\\n                                                (bindModelDataChange)=\\\"bindModelDataChange($event)\\\">\\r\\n\\r\\n                                    </atpar-text>\\r\\n                                    <label class=\\\"control-label lbl-left\\\" *ngIf=\\\"showManageEdit\\\">{{addUserData.USER_ID}}</label>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6 col-sm-6 col-xs-12 help_txt\\\">\\r\\n                                    Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Assets ID</label>\\r\\n                                <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtAssetId1'\\\"\\r\\n                                                    [name]=\\\"txtAssetId1\\\"\\r\\n                                                    [(ngModel)]=\\\"newItemLotSerial.ASSET_IDPART1\\\"\\r\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                    [validations]=\\\"'max=4,alpha_numeric_underscore_nospace'\\\"\\r\\n                                                    [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"\\r\\n                                                    (bindModelDataChange)=\\\"bindModelDataChange($event)\\\">\\r\\n\\r\\n                                        </atpar-text>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtAssetId'\\\"\\r\\n                                                    [name]=\\\"txtAssetId\\\"\\r\\n                                                    [disabled]=\\\"true\\\"\\r\\n                                                    [(ngModel)]=\\\"newItemLotSerial.ASSET_ID\\\"\\r\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                    [validations]=\\\"'max=9,alpha_numeric_underscore_nospace'\\\"\\r\\n                                                    [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"\\r\\n                                                    (bindModelDataChange)=\\\"bindModelDataChange($event)\\\">\\r\\n\\r\\n                                        </atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6 col-sm-6 col-xs-12 help_txt\\\">\\r\\n                                    Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"test_step_element_id\\\"\\r\\n                                       class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">UserField</label>\\r\\n\\r\\n                                <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                    <atpar-text [id]=\\\"'txtUserf'\\\"\\r\\n                                                [name]=\\\"txtUserf\\\"\\r\\n                                                [(ngModel)]=\\\"newItemLotSerial.USER_FIELD_1\\\"\\r\\n                                                [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                [validations]=\\\"'mandatory,max=16,alpha_numeric_underscore_nospace'\\\"\\r\\n                                                [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"\\r\\n                                                (bindModelDataChange)=\\\"bindModelDataChange($event)\\\">\\r\\n\\r\\n                                    </atpar-text>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                                    Check here if user is required to use password to access the application on the PDA. This should be checked for Server User\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Next Service Date</label>\\r\\n                                <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n                                        <p-calendar [showIcon]=\\\"true\\\"\\r\\n                                                    [id]=\\\"'nextservicedate'\\\"\\r\\n                                                              [(ngModel)]=\\\"newItemLotSerial.SERVICE_DT_TIME  \\\"\\r\\n                                                    [required]=\\\"true\\\"\\r\\n                                                    [monthNavigator]=\\\"true\\\"\\r\\n                                                    [yearNavigator]=\\\"true\\\"\\r\\n                                                    yearRange=\\\"2000:2030\\\"\\r\\n                                                    [placeholder]=\\\"'From Date'\\\"\\r\\n                                                    [readonlyInput]=\\\"true\\\"\\r\\n                                                    (onFocus)=\\\"onfocusToCalendar($event)\\\"\\r\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                    [dateFormat]=\\\"'mm/dd/yy'\\\"></p-calendar>\\r\\n\\r\\n                                                    <!--<input [ngModel]=\\\"item.value | useMyPipeToFormatThatValue\\\" \\r\\n      (ngModelChange)=\\\"item.value=$event\\\" name=\\\"inputField\\\" type=\\\"text\\\" />-->\\r\\n\\r\\n\\r\\n\\r\\n                                           \\r\\n\\r\\n                                   \\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n                                        <atpar-calendar [(ngModel)]=\\\"newItemLotSerial.SERVICE_DT_TIME\\\"\\r\\n                                                        [timeOnly]=\\\"true\\\"\\r\\n                                                        [hourFormat]=\\\"12\\\"\\r\\n                                                        [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-calendar>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4 col-md-offset-5 col-sm-6 col-sm-offset-5 col-xs-12\\\">\\r\\n                                <button *ngIf=\\\"addserailflag\\\" class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" [disabled]=\\\"disablelotserailButton\\\" (click)=\\\"createLotSerials()\\\">Add &nbsp;<i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                <button *ngIf=\\\"editserailflag\\\" class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" [disabled]=\\\"disablelotserailButton\\\" (click)=\\\"updateLotSerials()\\\">Update &nbsp;<i class=\\\"fa fa-check\\\"></i></button>\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" (click)=\\\"gobackFromAddEditSerial()\\\"><i class=\\\"fa fa-arrow-left\\\"></i> &nbsp;Go Back</button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-manage-equipment-items.component.html\n// module id = 2144\n// module chunks = 10","module.exports = \"\\r\\n<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px 0 10px 0;\\\">\\r\\n                        <div class=\\\"container\\\">\\r\\n                            <form class=\\\"form-horizontal form-label-left\\\" *ngIf=\\\"showAddButton\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-4\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"equipmentIDSearch\\\" [name]=\\\"txtequipmentID\\\" [validations]=\\\"'except_less_greater_symbols'\\\" [id]=\\\"'equipmentTypeSearch'\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [placeholder]=\\\"' Equipment Type / Description'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-4\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-purple sbtn\\\" name=\\\"btnGo\\\" (click)=\\\"BindGrid()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-purple sbtn\\\" name=\\\"btnAdd\\\" (click)=\\\"addEquipment()\\\">Add Equipment &nbsp;<i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"table\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <atpar-datatable [value]=\\\"lstDepts\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"pageSize\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                    <p-column field=\\\"\\\" header=\\\"Action\\\" [style]=\\\"{'width':'5%','text-align':'center'}\\\">\\r\\n                                        <template let-dept=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <i class=\\\"fa fa-pencil fa-bg bg-red\\\" (click)=\\\"edit(dept)\\\" style=\\\"cursor:pointer;\\\" [title]=\\\"'Edit'\\\"></i>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"ORG_GROUP_ID\\\" header=\\\"Org Group ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'10%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"ITEM_TYPE\\\" header=\\\"Equipment Type\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'18%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"ITEM_TYPE_DESCR\\\" header=\\\"Description\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"ITEM_TYPE_INDICATOR_DESC\\\" header=\\\"Indicator\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'11%'}\\\">\\r\\n                                        <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                            <atpar-select [options]=\\\"statusList\\\" [id]=\\\"'ddlIndicator'\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"filterStatus($event.value,col.field,col.filterMatchMode)\\\" [(ngModel)]=\\\"statusType\\\"></atpar-select>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n\\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\" *ngIf=\\\"form\\\">\\r\\n                            <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Org Group ID</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{orgGrpId}}</label>\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedOrgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\" (onChange)=\\\"ddlOrgGpChange()\\\" [isfocus]=\\\"blnShowOrgGroupDD\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Equipment Type</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtEquipment'\\\" [name]=\\\"txtEquipment\\\" [(ngModel)]=\\\"newItem.ITEM_TYPE\\\" *ngIf=\\\"showTextBox && !blnShowOrgGroupLabel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=30,alpha_numeric_underscore_hyphen_nospace'\\\" [title]=\\\"'Equipment Type can only have letters(a-z),(A-Z),numbers(0-9),the underscore(_) and hyphen(-)'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\"></atpar-text>\\r\\n                                        <atpar-text [id]=\\\"'txtEquipment'\\\" [name]=\\\"txtEquipment\\\" [(ngModel)]=\\\"newItem.ITEM_TYPE\\\" *ngIf=\\\"showTextBox && blnShowOrgGroupLabel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=30,alpha_numeric_underscore_hyphen_nospace'\\\" [title]=\\\"'Equipment Type can only have letters(a-z),(A-Z),numbers(0-9),the underscore(_) and hyphen(-)'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [isFocused]=\\\"'true'\\\"></atpar-text>\\r\\n                                        <label class=\\\"control-label lbl-left\\\" *ngIf=\\\"showEquipmentTypelbl\\\">{{equipmentType}}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Description</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtDesc'\\\" [name]=\\\"txtDesc\\\" [(ngModel)]=\\\"newItem.ITEM_TYPE_DESCR\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=50,everything_except_space_as_fstchar'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" *ngIf=\\\"showTextBox\\\" [title]=\\\"'Dept Desc - Allows any character A-Z,a-z,0-9,!,#,$...'\\\"></atpar-text>\\r\\n                                        <atpar-text [id]=\\\"'txtDesc'\\\" [name]=\\\"txtDesc\\\" [(ngModel)]=\\\"newItem.ITEM_TYPE_DESCR\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=50,everything_except_space_as_fstchar'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" *ngIf=\\\"!showTextBox\\\" [isFocused]=\\\"'true'\\\" [title]=\\\"'Dept Desc - Allows any character A-Z,a-z,0-9,!,#,$...'\\\"></atpar-text>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Indicator</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <label class=\\\"control-label lbl-left\\\" *ngIf=\\\"showIndicatorlbl\\\">{{Indicator}}</label>\\r\\n                                        <atpar-select [id]=\\\"'ddlIndicator'\\\" *ngIf=\\\"!showIndicatorlbl\\\" [required]=\\\"true\\\" [options]=\\\"ddlIndicatorList\\\" [(ngModel)]=\\\"selectedIndicator\\\" [style]=\\\"{'width':'100%'}\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (onChange)=\\\"ddlIndicatorChange()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4 col-md-offset-5 col-sm-6 col-sm-offset-5 col-xs-12\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" (click)=\\\"saveOrUpdateReasonCode()\\\" [disabled]=\\\"loading\\\">{{Title}} &nbsp;<i class=\\\"fa fa-{{bindSymbal}}\\\"></i></button>\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" (click)=\\\"close()\\\"><i class=\\\"fa fa-arrow-left\\\"></i> &nbsp;Go Back</button>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-manage-equipment-type.component.html\n// module id = 2145\n// module chunks = 10","module.exports = \"\\r\\n<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px 0 10px 0;\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Requestor ID</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtRequetorId'\\\" [isFocused]=\\\"'true'\\\" [name]=\\\"txtRequetorId\\\" [(ngModel)]=\\\"newItem.REQUESTOR_ID\\\" *ngIf=\\\"showTextBox\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=16,alpha_numeric_underscore_nospace'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [title]=\\\"'Use only letters (a-z), numbers (0-9), the underscore (_), and no spaces'\\\"></atpar-text>\\r\\n                                        <label class=\\\"control-label lbl-left\\\" *ngIf=\\\"showLable\\\">{{requestorID}}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Password <span class=\\\"text-red\\\">*</span></label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <input id=\\\"txtPassword\\\"  type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"newItem.PASSWORD\\\" maxlength=\\\"8\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (click)=\\\"onFocusPassword()\\\" (focus)=\\\"onFocusPassword()\\\"  (keyup)=\\\"checkPswdValidation()\\\"  required />\\r\\n                                       \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                               \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">First Name</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtFirstName'\\\" [name]=\\\"txtFirstName\\\" [(ngModel)]=\\\"newItem.FIRST_NAME\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=20,except_less_greater_symbols'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [title]=\\\"'First name of the user –accepts everything except for < or>'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Last Name</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtLastName'\\\" [name]=\\\"txtLastName\\\" [(ngModel)]=\\\"newItem.LAST_NAME\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=20,except_less_greater_symbols'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [title]=\\\"'Last name of the user –accepts everything except for < or>'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Middle Initial</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtMiddleName'\\\" [name]=\\\"txtMiddleName\\\" [(ngModel)]=\\\"newItem.MIDDLE_INIT\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'max=2,except_less_greater_symbols'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [title]=\\\"'Middle initial of the user –accepts everything except for < or>'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Email ID</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtEmail'\\\" [name]=\\\"txtEmail\\\" [(ngModel)]=\\\"newItem.EMAIL\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'max=30,email'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [title]=\\\"'Use the format userid@domainname.com'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Phone #</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtPhone'\\\" [name]=\\\"txtPhone\\\" [(ngModel)]=\\\"newItem.PHONE\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'phone,numeric,max=10'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [title]=\\\"'Use the format 1231231234'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6 col-sm-6 col-xs-12 help_txt\\\">\\r\\n                                        <!--[ Use The Format 1231231234]-->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Fax #</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtFax'\\\" [name]=\\\"txtFax\\\" [(ngModel)]=\\\"newItem.FAX\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'fax,numeric,max=10'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [title]=\\\"'Use the format 1231231234'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Pager #</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtPager'\\\" [name]=\\\"txtPager\\\" [(ngModel)]=\\\"newItem.PAGER\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'max=10,numeric'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [title]=\\\"'Use the format 1231231234'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Records Per Page</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-select [options]=\\\"ddRecordsPerPage\\\" [id]=\\\"'ddlddRecordsPerPage'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"newItem.RECORDS_PER_PAGE\\\" [ngModelOptions]=\\\"{standalone:true}\\\"></atpar-select>\\r\\n                                        <!--<atpar-text [id]=\\\"'ddlddRecordsPerPage'\\\" [name]=\\\"txtddlddRecordsPerPage\\\" [(ngModel)]=\\\"newItem.RECORDS_PER_PAGE\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [validations]=\\\"'mandatory,numeric,max=2'\\\" [title]=\\\"'Use only numbers(1-9)'\\\"></atpar-text>-->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Default Duration In Days</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtDefaultRptDuration'\\\" [name]=\\\"txtDefaultRptDuration\\\" [(ngModel)]=\\\"newItem.DEFAULT_REPORT_DURATION\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [validations]=\\\"'mandatory,numeric,max=2'\\\" [title]=\\\"'Use only numbers(1-9)'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Org Group ID</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-select [id]=\\\"'ddlOrgGroup'\\\" filter=\\\"filter\\\" [required]=\\\"true\\\" (onChange)=\\\"btnEnableDisable()\\\" [options]=\\\"orgGroupData\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [style]=\\\"{'width':'100%'}\\\" [(ngModel)]=\\\"newItem.ORG_GROUP_ID\\\">\\r\\n                                        </atpar-select>\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6 col-sm-6 col-xs-12 help_txt\\\">\\r\\n                                        <!--Select Organization Group-->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Department</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <!--<atpar-listbox [options]=\\\"lstDepartments\\\"  (onChange)=\\\"btnEnableDisable()\\\"  [(ngModel)]=\\\"lstSelectedDepartments\\\" multiple=\\\"multiple\\\" [id]=\\\"'ddlDepartments'\\\" [required]=\\\"true\\\" checkbox=\\\"checkbox\\\" filter=\\\"filter\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-listbox>-->\\r\\n                                        <atpar-multiSelect [options]=\\\"lstDepartments\\\"  [(ngModel)]=\\\"lstSelectedDepartments\\\" (onChange)=\\\"btnEnableDisable()\\\" [id]=\\\"'ddlDepartments'\\\" [required]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-multiSelect>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Default Deliver Location</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-select [options]=\\\"lstLocations\\\" filter=\\\"filter\\\" [id]=\\\"'ddlDeliverLocation'\\\" [required]=\\\"false\\\" [(ngModel)]=\\\"newItem.LOCATION_ID\\\" (onChange)=\\\"locationChange()\\\" [ngModelOptions]=\\\"{standalone:true}\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">User Status</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-switch [(ngModel)]=\\\"newItem.checkStatus\\\" [checked]=\\\"newItem.checkStatus\\\" [ngModelOptions]=\\\"{standalone:true}\\\" style=\\\"cursor:pointer;\\\"></atpar-switch>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                \\r\\n                                <div class=\\\"col-md-4 col-md-offset-5 col-sm-6 col-sm-offset-5 col-xs-12\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" (click)=\\\"createOrModifyRequestor()\\\" [disabled]=\\\"loading\\\">{{Title}} &nbsp;<i class=\\\"fa fa-{{bindSymbal}}\\\"></i></button>\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" (click)=\\\"navigateToRequestorterHome()\\\"><i class=\\\"fa fa-arrow-left\\\"></i> &nbsp;Go Back</button>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<atpar-growl [value]=\\\"msgs\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-manage-requestor-modify.component.html\n// module id = 2146\n// module chunks = 10","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px 0 10px 0;\\\">\\r\\n                        <div class=\\\"container\\\">\\r\\n                            <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-4\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"requestorSearch\\\" [name]=\\\"txtRequestorIdSearch\\\" [validations]=\\\"'except_less_greater_symbols'\\\" [id]=\\\"'requestorIdSearch'\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [placeholder]=\\\"'Requestor ID / First Name / Last Name'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-4\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-purple sbtn\\\" name=\\\"btnGo\\\" (click)=\\\"BindGrid()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-purple sbtn\\\" name=\\\"btnAdd\\\" (click)=\\\"addRequestor()\\\">Add Requestor &nbsp;<i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"isVisible\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <atpar-datatable [value]=\\\"requestorData\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"pazeSize\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                    <p-column field=\\\"\\\" header=\\\"Action\\\" [style]=\\\"{'width':'4%','text-align':'center'}\\\">\\r\\n                                        <template let-requstorData=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <i class=\\\"fa fa-pencil fa-bg bg-red\\\" title=\\\"Edit\\\" (click)=\\\"editRequestor(requstorData)\\\" style=\\\"cursor:pointer;\\\"></i>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"ORG_GROUP_ID\\\" header=\\\"Org Group ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'10%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"REQUESTOR_ID\\\" header=\\\"Requestor ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"FIRST_NAME\\\" header=\\\"First Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"LAST_NAME\\\" header=\\\"Last Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"MIDDLE_INIT\\\" header=\\\"Middle Initial\\\"  [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'10%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"STATUS\\\" header=\\\"Status\\\" [filter]=\\\"true\\\" [style]=\\\"{'width': '8%','overflow':'visible','text-align':'center'}\\\" filterMatchMode=\\\"equals\\\">\\r\\n                                        <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                               <atpar-select [options]=\\\"statusList\\\" [(ngModel)]=\\\"statusType\\\" [style]=\\\"{'width':'100%'}\\\" [id]=\\\"'ddlddlStatusType'\\\" [required]=\\\"false\\\" (onChange)=\\\"dataFilter()\\\"></atpar-select>\\r\\n                                        </template>\\r\\n                                        <template let-col let-requestor=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <atpar-switch  [checked] = \\\"requestor.checkStatus\\\"  (click)=\\\"updateRequestorStatus(requestor)\\\"  style=\\\"cursor:pointer;\\\"></atpar-switch>\\r\\n                                        </template>\\r\\n                                        \\r\\n                                    </p-column>\\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<atpar-growl [value]=\\\"msgs\\\" sticky=\\\"sticky\\\"></atpar-growl>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-manage-requestor.component.html\n// module id = 2147\n// module chunks = 10","module.exports = \"<div>\\r\\n    <span>this is trackit newitem audit report screen.</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-newitem-audit-report.component.html\n// module id = 2148\n// module chunks = 10","module.exports = \"\\r\\n<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px 0 10px 0;\\\">\\r\\n                        <div class=\\\"container\\\">\\r\\n                            <form class=\\\"form-horizontal form-label-left\\\" *ngIf=\\\"showAddButton\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-4\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"reasonCodeSearch\\\" [name]=\\\"reasonCodeSearch\\\" [validations]=\\\"'except_less_greater_symbols'\\\" [id]=\\\"'reasonCodeSearch'\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [placeholder]=\\\"'Reason Code / Description'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-4\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-purple sbtn\\\" name=\\\"btnGo\\\" (click)=\\\"BindGrid()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-purple sbtn\\\" name=\\\"btnAdd\\\" (click)=\\\"addReasonCode()\\\">Add Reason Code &nbsp;<i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                        <br />\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"table\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n\\r\\n                                <atpar-datatable [value]=\\\"lstReasonCodes\\\" [paginator]=\\\"true\\\" #dt [pageLinks]=\\\"3\\\" [rows]=\\\"pageSize\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                    <p-column field=\\\"\\\" header=\\\"Action\\\" [style]=\\\"{'width':'4%','text-align':'center'}\\\">\\r\\n                                        <template let-dept=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <i class=\\\"fa fa-pencil fa-bg bg-red\\\" title=\\\"Edit\\\" (click)=\\\"edit(dept)\\\" style=\\\"cursor:pointer;\\\"></i>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"ORG_GROUP_ID\\\" header=\\\"Org Group ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width': '10%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"REASON_CODE\\\" header=\\\"Reason Code\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'28%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"REASON_DESCR\\\" header=\\\"Description\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"STATUS\\\" header=\\\"Status\\\" [filter]=\\\"true\\\" [style]=\\\"{'width': '8%','overflow':'visible','text-align':'center'}\\\" filterMatchMode=\\\"equals\\\">\\r\\n                                        <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                            <atpar-select [options]=\\\"ddlStatusType\\\" [(ngModel)]=\\\"statusType\\\" [style]=\\\"{'width':'100%'}\\\" [id]=\\\"'ddlddlStatusType'\\\" [required]=\\\"false\\\" \\r\\n                                                          \\r\\n                                                          (onChange)=\\\"dataFilter($event.value,col.field,col.filterMatchMode)\\\"\\r\\n                                                       \\r\\n                                                          ></atpar-select>\\r\\n                                            <!--(onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\"-->\\r\\n                                        </template>\\r\\n                                        <template let-col let-dept=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <atpar-switch name=\\\"changeStatus\\\" [(ngModel)]=\\\"dept.STATUS\\\"  [checked]=dept[col.field] (change)=\\\"changeStatus(dept)\\\"></atpar-switch>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <!--[checked]=\\\"dept.STATUS==false?true:false\\\"--> \\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                            <div class=\\\"clear:both;\\\"></div>\\r\\n                            <br>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-12\\\" *ngIf=\\\"form\\\">\\r\\n                            <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Org Group ID</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{orgGrpId}}</label>\\r\\n                                        <!--<atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedOrgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\"></atpar-select>-->\\r\\n\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [isfocus]=\\\"blnShowOrgGroupDD\\\" [(ngModel)]=\\\"selectedOrgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\" (onChange)=\\\"ddlOrgIDChanged()\\\" [selectOnKeyPress]=\\\"true\\\"></atpar-select>\\r\\n\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Reason Code</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtReasonCode'\\\" [name]=\\\"txtReasonCode\\\" [(ngModel)]=\\\"newItem.REASON_CODE\\\" *ngIf=\\\"showTextBox && blnShowOrgGroupDD\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=30,alpha_numeric_underscore_hyphen_nospace'\\\" [title]=\\\"'Reason Code can only have letters(a-z),(A-Z),numbers(0-9),the underscore(_),and hyphen(-)'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\"  ></atpar-text>\\r\\n                                        <atpar-text [id]=\\\"'txtReasonCode'\\\" [name]=\\\"txtReasonCode\\\" [(ngModel)]=\\\"newItem.REASON_CODE\\\" *ngIf=\\\"showTextBox && !blnShowOrgGroupDD\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'mandatory,max=30,alpha_numeric_underscore_hyphen_nospace'\\\" [title]=\\\"'Reason Code can only have letters(a-z),(A-Z),numbers(0-9),the underscore(_),and hyphen(-)'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [isFocused]=\\\"'true'\\\"></atpar-text>\\r\\n                                        <label class=\\\"control-label lbl-left\\\" *ngIf=\\\"showLable\\\">{{newItem.REASON_CODE}}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Description</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [id]=\\\"'txtDesc'\\\" [name]=\\\"txtDesc\\\" [(ngModel)]=\\\"newItem.REASON_DESCR\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'max=50,everything'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" *ngIf=\\\"showTextBox\\\"></atpar-text>\\r\\n                                        <atpar-text [id]=\\\"'txtDesc'\\\" [name]=\\\"txtDesc\\\" [(ngModel)]=\\\"newItem.REASON_DESCR\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'max=50,everything'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" *ngIf=\\\"!showTextBox\\\" [isFocused]=\\\"'true'\\\"></atpar-text>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4 col-md-offset-5 col-sm-6 col-sm-offset-5 col-xs-12\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" [disabled]=\\\"loading\\\" (click)=\\\"saveOrUpdateReasonCode()\\\">{{Title}} &nbsp;<i class=\\\"fa fa-{{bindSymbal}}\\\"></i></button>\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" type=\\\"button\\\" (click)=\\\"close()\\\"><i class=\\\"fa fa-arrow-left\\\"></i> &nbsp;Go Back</button>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-setup-reason-codes.component.html\n// module id = 2149\n// module chunks = 10","module.exports = \"<div>\\r\\n    <span>This is trackit transaction report  screen.</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/tkit-transaction-report.component.html\n// module id = 2150\n// module chunks = 10","module.exports = \"<div>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TrackIT/trackit.component.html\n// module id = 2151\n// module chunks = 10"],"sourceRoot":""}