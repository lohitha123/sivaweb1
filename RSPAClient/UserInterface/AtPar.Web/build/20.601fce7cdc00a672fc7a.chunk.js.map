{"version":3,"sources":["webpack:///./src/app/AssetManagement/asmt-access-permission.component.ts","webpack:///./src/app/AssetManagement/asmt-location-groups-allocation.component.ts","webpack:///./src/app/AssetManagement/asmt.component.ts","webpack:///./src/app/AssetManagement/asmt-access-permission.service.ts","webpack:///./src/app/AssetManagement/asmt-routing.module.ts","webpack:///./src/app/AssetManagement/asmt.module.ts","webpack:///./src/app/AssetManagement/asmt-access-permission.component.html","webpack:///./src/app/AssetManagement/asmt-location-groups-allocation.component.html","webpack:///./src/app/AssetManagement/asmt.component.html"],"names":[],"mappings":"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","file":"20.601fce7cdc00a672fc7a.chunk.js","sourcesContent":["import { Component, Injectable, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { TokenEntry_Enum, ClientType, ModeEnum } from '../Shared/AtParEnums';\r\nimport { SelectItem, Message } from '../components/common/api';\r\nimport { StatusType, EnumApps } from '../Shared/AtParEnums';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { MT_ATPAR_UI_FIELDS } from '../entities/mt_atpar_ui_fields';\r\nimport { AtParAccessPermissionService } from '../../app/AssetManagement/asmt-access-permission.service';\r\nimport { DataTable } from '../components/datatable/datatable';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n  \r\n    template: require('./asmt-access-permission.component.html'),\r\n    providers: [AtParCommonService, AtParConstants, AtParAccessPermissionService],\r\n})\r\n\r\nexport class AccessPermissionComponent {\r\n    @ViewChild(DataTable) dataTableComponent: DataTable;\r\n    _deviceTokenEntry: any;\r\n    growlMessage: Message[] = [];\r\n    pazeSize: number;\r\n    lstOrgGroups: SelectItem[] = [];\r\n    lstUsers: SelectItem[] = [];\r\n    ORG_GROUP_ID: any;\r\n    LBL_ORG_GROUP_ID: any;\r\n    selectedOrgGroupId: any;\r\n    selectedUser: any;\r\n    showOrgDropdown: boolean;\r\n    gAppID: number = 11;\r\n    lstAccessFields: MT_ATPAR_UI_FIELDS[] = [];\r\n    disableSubmitButton: boolean = false;\r\n\r\n    constructor(\r\n        private spinnerService: SpinnerService,\r\n        private atParCommonService: AtParCommonService,\r\n        private atParAccessPermissionService: AtParAccessPermissionService,\r\n        private httpService: HttpService,\r\n        private http: Http,\r\n        private atParConstant: AtParConstants) {\r\n        this._deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n    }\r\n\r\n    async ngOnInit() {\r\n\r\n        this.pazeSize = +this._deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n        this.spinnerService.start();\r\n        await this.bindOrgDropdown();\r\n    }\r\n\r\n    async bindOrgDropdown() {\r\n        try {\r\n            await this.atParCommonService.getUserOrgGroups(this._deviceTokenEntry[TokenEntry_Enum.UserID], this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID])\r\n                .catch(this.httpService.handleError).then((result:Response) => {\r\n                    let res = result.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    this.lstOrgGroups = [];\r\n                    this.lstUsers = [];\r\n                    this.lstOrgGroups.push({ label: 'Select One', value: 'Select One' });\r\n                    this.lstUsers.push({ label: 'Select User', value: 'Select User' });\r\n                    switch (res.StatType) {\r\n                        case StatusType.Success: {\r\n                            if (res.DataList.length == 1) {\r\n                                this.showOrgDropdown = false;\r\n                                this.LBL_ORG_GROUP_ID = res.DataList[0].ORG_GROUP_ID + ' - ' + res.DataList[0].ORG_GROUP_NAME;\r\n                                this.selectedOrgGroupId = res.DataList[0].ORG_GROUP_ID;\r\n                                this.getUsersList(res.DataList[0].ORG_GROUP_ID);\r\n                                this.spinnerService.stop();\r\n                            }\r\n                            else {\r\n                                this.spinnerService.stop();\r\n                                this.showOrgDropdown = true;\r\n                                for (var i = 0; i < res.DataList.length; i++) {\r\n                                    if (res.DataList[i].ORG_GROUP_ID.toUpperCase() != 'ALL') {\r\n                                        this.lstOrgGroups.push({ label: (res.DataList[i].ORG_GROUP_ID + ' - ' + res.DataList[i].ORG_GROUP_NAME), value: res.DataList[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async ddlOrgGroup_SelectedIndexChanged(e) {\r\n        this.selectedOrgGroupId = this.ORG_GROUP_ID;\r\n        if (e.value != 'Select One') {\r\n            await this.getUsersList(e.value);\r\n        }\r\n        else {\r\n            this.selectedUser = 'Select User';\r\n        }\r\n        this.lstAccessFields = [];\r\n\r\n    }\r\n\r\n    ddlUserChange() {\r\n        this.lstAccessFields = [];\r\n    }\r\n  \r\n\r\n    async getUsersList(orgGroupID) {\r\n        try {\r\n            await this.atParCommonService.getUsersList(this._deviceTokenEntry[TokenEntry_Enum.UserID], this.gAppID, orgGroupID)\r\n                .catch(this.httpService.handleError).then((result:Response) => {\r\n                    let res = result.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    this.lstUsers = [];\r\n                    switch (res.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstUsers.push({ label: 'Select User', value: 'Select User' });\r\n                            for (var i = 0; i < res.DataList.length; i++) {\r\n                                this.lstUsers.push({ label: res.DataList[i].FULLNAME, value: res.DataList[i].USER_ID })\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                })\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async btnGo_Click() {\r\n        try {\r\n            this.growlMessage = [];\r\n\r\n            if (this.showOrgDropdown && (this.ORG_GROUP_ID == 'Select One' || this.ORG_GROUP_ID == '' || this.ORG_GROUP_ID == undefined)) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Select Org Group ID' });\r\n                return;\r\n            }\r\n            if (!this.showOrgDropdown && (this.LBL_ORG_GROUP_ID == '' || this.LBL_ORG_GROUP_ID == undefined)) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Select Org Group ID' });\r\n                return;\r\n            }\r\n            if (this.selectedUser == 'Select User' || this.selectedUser == '' || this.selectedUser == undefined) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Select User ID' });\r\n                return;\r\n            }\r\n            this.spinnerService.start();\r\n            if (this.dataTableComponent != undefined) {\r\n                this.dataTableComponent.reset();\r\n            }\r\n            \r\n\r\n            await this.atParAccessPermissionService.getAccessFields(this.gAppID, this.selectedOrgGroupId, this.selectedUser, 'ASSET ITEMS')\r\n                .catch(this.httpService.handleError).then((result:Response) => {\r\n                    this.spinnerService.stop();\r\n                    let res = result.json() as AtParWebApiResponse<MT_ATPAR_UI_FIELDS>;\r\n                    this.lstAccessFields = [];\r\n                    switch (res.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstAccessFields = res.DataList;\r\n                            for (var i = 0; i < this.lstAccessFields.length; i++) {\r\n                                this.lstAccessFields[i].SCANORDER_ID = 'txtScanOrderId' + i;\r\n                                if (this.lstAccessFields[i].DISPLAY_FLAG == 'N') {\r\n                                    this.lstAccessFields[i].IS_DISPLAY = false;\r\n                                } else {\r\n                                    this.lstAccessFields[i].IS_DISPLAY = true;\r\n                                }\r\n                                if (this.lstAccessFields[i].EDIT_FLAG == 'N') {\r\n                                    this.lstAccessFields[i].IS_EDIT = false;\r\n                                } else {\r\n                                    this.lstAccessFields[i].IS_EDIT = true;\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async btnSubmit_Click() {\r\n        try {\r\n            this.growlMessage = [];\r\n            if (this.showOrgDropdown && (this.ORG_GROUP_ID == 'Select One' || this.ORG_GROUP_ID == '' || this.ORG_GROUP_ID == undefined)) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Select Org Group ID' });\r\n                return;\r\n            }\r\n            if (this.selectedUser == 'Select User' || this.selectedUser == '' || this.selectedUser == undefined) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Select User ID' });\r\n                return;\r\n            }\r\n            for (var i = 0; i < this.lstAccessFields.length; i++) {\r\n                if (this.lstAccessFields[i].IS_DISPLAY == true) {\r\n                    this.lstAccessFields[i].DISPLAY_FLAG = 'Y';\r\n                } else {\r\n                    this.lstAccessFields[i].DISPLAY_FLAG = 'N';\r\n                }\r\n                if (this.lstAccessFields[i].IS_EDIT == true) {\r\n                    this.lstAccessFields[i].EDIT_FLAG = 'Y';\r\n                } else {\r\n                    this.lstAccessFields[i].EDIT_FLAG = 'N';\r\n                }\r\n            }\r\n            this.spinnerService.start();\r\n            this.atParAccessPermissionService.updateAccessFields(this.lstAccessFields, this.selectedOrgGroupId, this.selectedUser)\r\n                .catch(this.httpService.handleError).then((result:Response) => {\r\n                    this.spinnerService.stop();\r\n                    let res = result.json() as AtParWebApiResponse<any>;\r\n                    switch (res.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Updated Successfully' });\r\n                            this.lstAccessFields = [];\r\n                            this.ORG_GROUP_ID = 'Select One';\r\n                            this.selectedUser = 'Select User';\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                })\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    dropDownValidations() {\r\n        if ((this.selectedUser == 'Select User' || this.selectedUser == undefined || this.selectedUser == \"\")) {\r\n            return true;\r\n        }\r\n        if ((this.ORG_GROUP_ID == 'Select One' || this.ORG_GROUP_ID == undefined || this.ORG_GROUP_ID == \"\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    txtScan_Keyup(e, lstPermission) {\r\n        if (e.target.value == '') {\r\n            this.disableSubmitButton = true;\r\n        }\r\n        else {\r\n            for (var i = 0; i < lstPermission.length; i++) {\r\n                if (lstPermission[i].SCAN_ORDER == undefined || lstPermission[i].SCAN_ORDER == null || lstPermission[i].SCAN_ORDER == '') {\r\n                    this.disableSubmitButton = true;\r\n                    break;\r\n                } else {\r\n                    this.disableSubmitButton = false;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString());\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._deviceTokenEntry = [];\r\n        this.pazeSize = null;\r\n        this.growlMessage = [];\r\n        this.lstAccessFields = [];\r\n        this.selectedUser = '';\r\n        this.ORG_GROUP_ID = '';\r\n        this.spinnerService.stop();\r\n        this.spinnerService = null;\r\n    }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/AssetManagement/asmt-access-permission.component.ts","import { Component } from '@angular/core';\r\nimport { EnumApps } from '../Shared/AtParEnums';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./asmt-location-groups-allocation.component.html')\r\n})\r\n\r\nexport class LocationGroupsAllocationComponent {\r\n    assetManagementAppId: number = EnumApps.AssetManagement;\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/AssetManagement/asmt-location-groups-allocation.component.ts","import { Component } from '@angular/core';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n  \r\n    template: require('./asmt.component.html')\r\n})\r\n\r\n\r\nexport class AssetManagementComponent { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/AssetManagement/asmt.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n\r\n\r\n@Injectable()\r\n\r\nexport class AtParAccessPermissionService {\r\n\r\n    constructor(private httpService: HttpService) {\r\n    }\r\n  \r\n    async getAccessFields(appID, orgGroupId, userId, screenName) {\r\n        return await this.httpService.getSync({\r\n            \"apiMethod\": \"/api/AccessPermissions/GetAccessFields\",\r\n            params: {\r\n                \"appId\": appID,\r\n                \"orgGroupId\": orgGroupId,\r\n                \"userId\": userId,\r\n                \"screenName\": screenName\r\n            }\r\n        });\r\n    }\r\n    updateAccessFields(newUser, orgGroupId, userId) {\r\n        return this.httpService.update({\r\n            \"apiMethod\": \"/api/AccessPermissions/UpdateAccessFields\",\r\n            formData: newUser,\r\n            params: {\r\n                orgGroupId: orgGroupId,\r\n                userId: userId\r\n            }\r\n        }).toPromise();\r\n    }\r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/AssetManagement/asmt-access-permission.service.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AssetManagementComponent } from './asmt.component';\r\nimport { AccessPermissionComponent } from './asmt-access-permission.component';\r\nimport { LocationGroupsAllocationComponent } from './asmt-location-groups-allocation.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AssetManagementComponent,\r\n        children: [\r\n            { path: 'accesspermissions', component: AccessPermissionComponent },\r\n            { path: 'allocatelocationgroups', component: LocationGroupsAllocationComponent },\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AssetManagementRoutingModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/AssetManagement/asmt-routing.module.ts","\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AssetManagementComponent } from './asmt.component';\r\nimport { AccessPermissionComponent } from './asmt-access-permission.component';\r\nimport { LocationGroupsAllocationComponent } from './asmt-location-groups-allocation.component';\r\nimport { AssetManagementRoutingModule } from './asmt-routing.module';\r\nimport { SharedModule } from '../Shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        AssetManagementRoutingModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        AssetManagementComponent,\r\n        AccessPermissionComponent,\r\n        LocationGroupsAllocationComponent\r\n    ]\r\n})\r\n\r\nexport class AssetManagementModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/AssetManagement/asmt.module.ts","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                <div class=\\\"panel-body\\\" style=\\\"padding:0px;\\\">\\r\\n                    <div class=\\\"col-xs-12 \\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">Org Group ID</label>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                    <label class=\\\"control-label lbl-left\\\" *ngIf=\\\"!showOrgDropdown\\\">{{LBL_ORG_GROUP_ID}}</label>\\r\\n                                    <atpar-select [options]=\\\"lstOrgGroups\\\" *ngIf=\\\"showOrgDropdown\\\" [required]=\\\"true\\\" [id]=\\\"'ddlOrgGroupId'\\\" [(ngModel)]=\\\"ORG_GROUP_ID\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" (onChange)=\\\"ddlOrgGroup_SelectedIndexChanged($event)\\\"></atpar-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">User ID</label>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                    <atpar-select [options]=\\\"lstUsers\\\" [required]=\\\"true\\\" [id]=\\\"'ddlUser'\\\" [(ngModel)]=\\\"selectedUser\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" (onChange)=\\\"ddlUserChange()\\\"></atpar-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12 col-sm-12 col-md-2 form-group\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"btnGo_Click()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"lstAccessFields.length>0\\\">\\r\\n                        <div class=\\\"container\\\" style=\\\"text-align:center\\\">\\r\\n                            <atpar-datatable [value]=\\\"lstAccessFields\\\" [style]=\\\"{'width':'75%'}\\\" [paginator]=\\\"false\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"pazeSize\\\" [rowsPerPageOptions]=\\\"[10,20, 30, 40, 50, 60, 70, 80, 90, 100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                <p-column field=\\\"FIELD_NAME\\\" header=\\\"Field\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'30%'}\\\"> </p-column>\\r\\n                                <p-column header=\\\"Display\\\">\\r\\n                                    <template let-col let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <input type=\\\"checkbox\\\" class=\\\"checkbox\\\" [(ngModel)]=\\\"ven.IS_DISPLAY\\\" style=\\\"margin-left:121px;width:15%\\\" >\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n                                <p-column header=\\\"Edit\\\">\\r\\n                                    <template let-col let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <input type=\\\"checkbox\\\" class=\\\"checkbox\\\" [(ngModel)]=\\\"ven.IS_EDIT\\\" style=\\\"margin-left:121px;\\\">\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n                                <p-column header=\\\"Scan Order\\\">\\r\\n                                    <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <atpar-text-grid [name]=\\\"txtSCorder\\\" [id]=\\\"ven.SCANORDER_ID\\\" [(ngModel)]=\\\"ven.SCAN_ORDER\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"'numeric'\\\" (keyup)=\\\"txtScan_Keyup($event,lstAccessFields)\\\"></atpar-text-grid>\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n                            </atpar-datatable>\\r\\n                        </div>\\r\\n                        <br />\\r\\n                        <div class=\\\"col-xs-12 col-md-4 col-md-offset-5 col-sm-6 col-sm-offset-3\\\">\\r\\n                            <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"btnSubmit_Click()\\\" [disabled]=\\\"disableSubmitButton\\\">Submit &nbsp;<i class=\\\"fa fa-check\\\"></i></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/AssetManagement/asmt-access-permission.component.html\n// module id = 1910\n// module chunks = 20","module.exports = \"\\r\\n<div>\\r\\n    <atpar-allocate-location-groups [appId]=\\\"assetManagementAppId\\\"></atpar-allocate-location-groups>\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/AssetManagement/asmt-location-groups-allocation.component.html\n// module id = 1911\n// module chunks = 20","module.exports = \"<div>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/AssetManagement/asmt.component.html\n// module id = 1912\n// module chunks = 20"],"sourceRoot":""}