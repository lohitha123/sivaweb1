{"version":3,"sources":["webpack:///./src/app/Deliver/deliver-allocate-business-units.component.ts","webpack:///./src/app/Deliver/deliver-allocate-location-groups.component.ts","webpack:///./src/app/Deliver/deliver-assign-signatories.component.ts","webpack:///./src/app/Deliver/deliver-carrier-information.component.ts","webpack:///./src/app/Deliver/deliver-daily-activity.component.ts","webpack:///./src/app/Deliver/deliver-daily-user-activity.component.ts","webpack:///./src/app/Deliver/deliver-delivery-report.component.ts","webpack:///./src/app/Deliver/deliver-exclude-locations.component.ts","webpack:///./src/app/Deliver/deliver-productivity-report.component.ts","webpack:///./src/app/Deliver/deliver-release-packages.component.ts","webpack:///./src/app/Deliver/deliver-setup-drop-off-locations.component.ts","webpack:///./src/app/Deliver/deliver-shiptoid-allocation-for-delivery-of-stock-items.component.ts","webpack:///./src/app/Deliver/deliver-user-parameters.component.ts","webpack:///./src/app/Deliver/deliver.component.ts","webpack:///./src/app/Deliver/deliver-allocate-business-units.component.services.ts","webpack:///./src/app/Deliver/deliver-assign-signatories.services.ts","webpack:///./src/app/Deliver/deliver-delivery-report.service.ts","webpack:///./src/app/Deliver/deliver-exclude-locations.services.ts","webpack:///./src/app/Deliver/deliver-productivity-report.component.service.ts","webpack:///./src/app/Deliver/deliver-release-packages.service.component.ts","webpack:///./src/app/Deliver/deliver-routing.module.ts","webpack:///./src/app/Deliver/deliver-setup-dropoff-location-services.ts","webpack:///./src/app/Deliver/deliver-shiptoid-allocation-for-delivery-of-stock-items.services.ts","webpack:///./src/app/Deliver/deliver.module.ts","webpack:///./src/app/Entities/MT_DELV_COST_CENTER_AUTH_PERSON.ts","webpack:///./src/app/Entities/VM_CYCLETIME_DETAILS.ts","webpack:///./src/app/Entities/VM_DELV_PO_COMMENTS.ts","webpack:///./src/app/Entities/VM_DELV_PROD.ts","webpack:///./src/app/Entities/VM_RESULTS.ts","webpack:///./src/app/Entities/VM_TABLE_AVG.ts","webpack:///./src/app/entities/mt_delv_loc_details.ts","webpack:///./src/app/Deliver/deliver-allocate-business-units.component.html","webpack:///./src/app/Deliver/deliver-allocate-location-groups.component.html","webpack:///./src/app/Deliver/deliver-assign-signatories.component.html","webpack:///./src/app/Deliver/deliver-carrier-information.component.html","webpack:///./src/app/Deliver/deliver-daily-activity.component.html","webpack:///./src/app/Deliver/deliver-daily-user-activity.component.html","webpack:///./src/app/Deliver/deliver-delivery-report.component.html","webpack:///./src/app/Deliver/deliver-exclude-locations.component.html","webpack:///./src/app/Deliver/deliver-productivity-report.component.html","webpack:///./src/app/Deliver/deliver-release-packages.component.html","webpack:///./src/app/Deliver/deliver-setup-drop-off-locations.component.html","webpack:///./src/app/Deliver/deliver-shiptoid-allocation-for-delivery-of-stock-items.component.html","webpack:///./src/app/Deliver/deliver-user-parameters.component.html","webpack:///./src/app/Deliver/deliver.component.html"],"names":[],"mappings":"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OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,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","file":"12.601fce7cdc00a672fc7a.chunk.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { MT_ATPAR_ORG_GROUP_BUNITS } from '../../app/Entities/MT_ATPAR_ORG_GROUP_BUNITS';\r\nimport { MT_ATPAR_SECURITY_AUDIT } from '../../app/Entities/MT_ATPAR_SECURITY_AUDIT';\r\nimport { MT_ATPAR_USER } from '../../app/Entities/mt_atpar_user';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { SelectItem } from '../components/common/api';\r\nimport { ConfirmationService } from '../components/common/api';\r\nimport { TokenEntry_Enum } from '../Shared/AtParEnums';\r\nimport { BusinessType } from '../Shared/AtParEnums';\r\nimport { StatusType } from '../Shared/AtParEnums';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { SpinnerSentEvent } from '../components/spinner/spinner.sent.event';\r\nimport { Message } from '../components/common/api';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { MT_DELV_BU_ALLOCATION } from '../../app/Entities/MT_DELV_BU_ALLOCATION';\r\nimport { VM_ATPAR_IBU_ALLOCATION } from '../../app/Entities/VM_ATPAR_IBU_ALLOCATION';\r\nimport { EnumApps } from '../Shared/AtParEnums';\r\nimport { DeliverAllocateBunitServices } from '../Deliver/deliver-allocate-business-units.component.services';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./deliver-allocate-business-units.component.html'),\r\n    providers: [HttpService, ConfirmationService, AtParConstants, AtParCommonService, DeliverAllocateBunitServices],\r\n})\r\n\r\nexport class AllocateBusinessUnitsComponent implements OnInit {\r\n    /*Varaible Declaration*/\r\n    intAppId: number;\r\n    startIndex: number;\r\n    EndIndex: number;\r\n    recordsPerPageSize: number;\r\n    orgGrpId: string = \"\";\r\n    orgGrpIDData: string = \"\";\r\n    selectedOrgGroupId: string = \"\";\r\n    selectedDropDownUserId: string = \"\";\r\n    selectedBunit: string = \"\";\r\n    selectedDescription: string = \"\";\r\n    orgGroupIDForDBUpdate: string = \"\";\r\n    custom: string = \"custom\";\r\n    isAuditRequired: string = \"\";\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    blnShowOrgGroupDD: boolean = false;\r\n    blnsortbycolumn: boolean = true;\r\n    preField: string = \"\";\r\n    isVisible: boolean = false;\r\n    showAllocGroup: boolean = false;\r\n    showGrid: boolean = false;\r\n    deviceTokenEntry: string[] = [];\r\n    public lstUsers: SelectItem[] = [];\r\n    userDataList: MT_ATPAR_USER[];\r\n    lstOrgGroups: SelectItem[] = [];\r\n    dataCheckedSorting: VM_ATPAR_IBU_ALLOCATION[] = [];\r\n    dataUncheckedSorting: Array<VM_ATPAR_IBU_ALLOCATION>;\r\n    sortedcheckedrec: VM_ATPAR_IBU_ALLOCATION[];\r\n    sorteduncheckedrec: VM_ATPAR_IBU_ALLOCATION[];\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n    lstCheckedBUnits: Array<VM_ATPAR_IBU_ALLOCATION>;\r\n    lstDBData: VM_ATPAR_IBU_ALLOCATION[];\r\n    lstgridfilterData: VM_ATPAR_IBU_ALLOCATION[];\r\n    growlMessage: Message[] = [];\r\n    lstBUnits: any = [];\r\n    lstFilteredBUnits: any = [];\r\n    lblSearched: string;\r\n\r\n    /**\r\n   * Constructor\r\n   * @param DeliverAllocateBunitServices\r\n   * @param ConfirmationService\r\n   * @param httpService\r\n   * @param spinnerService\r\n   * @param atParConstant\r\n   */\r\n    constructor(private httpService: HttpService,\r\n        private spinnerService: SpinnerService,\r\n        private commonService: AtParCommonService,\r\n        private confirmationService: ConfirmationService,\r\n        private atParConstant: AtParConstants,\r\n        private deliverAllocateBunitServices: DeliverAllocateBunitServices) { }\r\n\r\n    /**\r\n    * Init Function  for binding OrgGroupIds to the dropdown when page loading \r\n    */\r\n    async ngOnInit() {\r\n        try {\r\n            this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n            this.intAppId = EnumApps.Deliver;\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n            this.lstCheckedBUnits = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n            this.dataCheckedSorting = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n            this.dataUncheckedSorting = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n            this.lstFilteredBUnits = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n            this.recordsPerPageSize = + this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n            this.checkAuditAllowed();\r\n            await this.bindOrgGroups();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Getting OrgGroupIds,Bunits,users data from database when page loading\r\n    */\r\n    async bindOrgGroups() {\r\n        this.spinnerService.start();\r\n        try {\r\n            await this.commonService.getUserOrgGroups(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n                            this.spinnerService.stop();\r\n                            if (this.orgGroupData.length == 1) {\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.orgGrpIDData = this.orgGroupData[0].ORG_GROUP_ID + \" - \" + this.orgGroupData[0].ORG_GROUP_NAME;\r\n                                this.orgGrpId = this.orgGroupData[0].ORG_GROUP_ID;\r\n                                this.populateBunitsDdlst();\r\n                                this.bindUsersList();\r\n                                break;\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.blnShowOrgGroupDD = true;\r\n                                this.lstUsers = [];\r\n                                this.lstUsers.push({ label: \"Select User\", value: \"Select User\" })\r\n                                this.lstOrgGroups = [];\r\n                                this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" })\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID !== \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + \" - \" + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n                                break;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindOrgGroups\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Getting  Users data from database \r\n    */\r\n    async bindUsersList() {\r\n        if (this.blnShowOrgGroupLabel == true) {\r\n            this.orgGroupIDForDBUpdate = this.orgGrpId;\r\n        }\r\n        else {\r\n            this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n        }\r\n        this.lstUsers = [];\r\n        this.lstUsers.push({ label: \"Select User\", value: \"Select User\" });\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.commonService.getUsersList(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.intAppId, this.orgGroupIDForDBUpdate)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_USER>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.userDataList = data.DataList;\r\n                            for (let i = 0; i < data.DataList.length; i++) {\r\n                                this.lstUsers.push({\r\n                                    label: data.DataList[i].FULLNAME,\r\n                                    value: data.DataList[i].USER_ID\r\n                                })\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage = [];\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage = [];\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage = [];\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindUsersList\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when user selecting  OrgGrpId in dropdown and using for getting users,bunits data from database\r\n    */\r\n    async  ddlOrgGrpIdChanged() {\r\n        this.isVisible = false;\r\n        this.growlMessage = [];\r\n\r\n        if (this.selectedOrgGroupId == \"Select One\") {\r\n            this.lstUsers = [];\r\n            this.lstUsers.push({ label: \"Select User\", value: \"Select User\" });\r\n            return;\r\n        }\r\n        this.selectedDropDownUserId = \"\";\r\n        this.lstDBData = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n        this.spinnerService.start();\r\n        try {\r\n            await this.bindUsersList();\r\n            await this.populateBunitsDdlst();\r\n            this.spinnerService.stop();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ddlOrgGrpIdChanged\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when user selecting UserId in dropdown\r\n    */\r\n    ddlUserChanged() {\r\n        this.growlMessage = [];\r\n        this.isVisible = false;\r\n    }\r\n\r\n    /**\r\n     * checking audition for this page\r\n     */\r\n    async checkAuditAllowed() {\r\n        try {\r\n            await this.commonService.getAuditAllowed(this.intAppId, \"mt_delv_bunit_alloc.aspx\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.isAuditRequired = data.Data;\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkAuditAllowed\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Insert AuditData for this page\r\n     */\r\n    async insertAuditData() {\r\n        try {\r\n            let auditSecurity: MT_ATPAR_SECURITY_AUDIT;\r\n            let auditSecurityLst: Array<MT_ATPAR_SECURITY_AUDIT>;\r\n            auditSecurityLst = new Array<MT_ATPAR_SECURITY_AUDIT>();\r\n\r\n            for (let intCnount = 0; intCnount <= this.lstCheckedBUnits.length - 1; intCnount++) {\r\n                if (this.lstCheckedBUnits[intCnount].CHK_VALUE == 1) {\r\n                    auditSecurity = new MT_ATPAR_SECURITY_AUDIT();\r\n                    auditSecurity.FIELD_NAME = \"CHK_VALUE\";\r\n                    auditSecurity.OLD_VALUE = \"0\";\r\n                    auditSecurity.NEW_VALUE = \"1\";\r\n                    auditSecurity.KEY_1 = this.deviceTokenEntry[TokenEntry_Enum.UserID];\r\n                    auditSecurity.KEY_2 = this.intAppId.toString();\r\n                    auditSecurity.KEY_3 = this.lstCheckedBUnits[intCnount].BUSINESS_UNIT;\r\n                    auditSecurity.KEY_4 = \"\";\r\n                    auditSecurity.KEY_5 = \"\";\r\n                    auditSecurityLst.push(auditSecurity);\r\n                }\r\n            }\r\n            let strScreenName = \"mt_delv_bunit_alloc.aspx\";\r\n            await this.commonService.insertAuditData(auditSecurityLst, this.deviceTokenEntry[TokenEntry_Enum.UserID], strScreenName).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let response = res.json() as AtParWebApiResponse<MT_ATPAR_SECURITY_AUDIT>;\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstDBData = [];\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"insertAuditData\");\r\n        }\r\n    }\r\n\r\n    /** \r\n     * Getting Bunits  \r\n     */\r\n    async fillBUnitsAuto(event) {\r\n        this.lstFilteredBUnits = [];\r\n        let query = event.query;\r\n        if (this.blnShowOrgGroupLabel == true) {\r\n            this.orgGroupIDForDBUpdate = this.orgGrpId;\r\n        }\r\n        else {\r\n            this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n        }\r\n\r\n        if (this.orgGroupIDForDBUpdate == undefined || this.orgGroupIDForDBUpdate == \"Select One\") {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select OrgGroupID\" });\r\n            return;\r\n        }\r\n        try {\r\n            await this.commonService.getOrgBusinessUnits(this.orgGroupIDForDBUpdate, BusinessType.AllBunits).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUP_BUNITS>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstBUnits = data.DataList;\r\n                            this.lstFilteredBUnits = this.filterBusinessUnits(query, this.lstBUnits)\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        //case StatusType.Warn: {\r\n                        //    this.spinnerService.stop();\r\n                        //    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                        //    break;\r\n                        //}\r\n                        //case StatusType.Error: {\r\n                        //    this.spinnerService.stop();\r\n                        //    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                        //    break;\r\n                        //}\r\n                        //case StatusType.Custom: {\r\n                        //    this.spinnerService.stop();\r\n                        //    this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                        //    break;\r\n                        //}\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"fillBUnitsAuto\");\r\n        }\r\n    }\r\n\r\n    /** \r\n     * Filtering Bunits  \r\n     */\r\n    filterBusinessUnits(query, businessunits: any[]): any[] {\r\n        try {\r\n            let filtered : any[] = [];\r\n\r\n            if (query == \"%\") {\r\n                for (let i = 0; i < businessunits.length; i++) {\r\n                    let Bunitvalue = businessunits[i];\r\n                    filtered.push(Bunitvalue);\r\n                }\r\n            }\r\n            else {\r\n                if (query.length >= 1) {\r\n                    for (let i = 0; i < businessunits.length; i++) {\r\n                        let Bunitvalue = businessunits[i];\r\n                        if (Bunitvalue.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n                            filtered.push(Bunitvalue);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return filtered;\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"filterBusinessUnits\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when click on CheckAll Button in Datatable\r\n    */\r\n    \r\n\r\n    /**\r\n    * This method is calling when click on UnCheckAll Button in Datatable\r\n    */\r\n   \r\n\r\n    checkAll() {\r\n        try {\r\n            this.lstCheckedBUnits = [];\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n            if (this.lstgridfilterData != null && this.lstgridfilterData != undefined) {\r\n                if (this.EndIndex > this.lstgridfilterData.length) {\r\n                    this.EndIndex = this.lstgridfilterData.length;\r\n                }\r\n                for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                    this.lstgridfilterData[i].checkvalue = true;\r\n                    this.lstgridfilterData[i].CHK_VALUE = 1;\r\n                    \r\n                }\r\n            }\r\n            else {\r\n                if (this.EndIndex > this.lstDBData.length) {\r\n                    this.EndIndex = this.lstDBData.length;\r\n                }\r\n                for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                    this.lstDBData[i].checkvalue = true;\r\n                    this.lstDBData[i].CHK_VALUE = 1;\r\n                    \r\n                    this.lstCheckedBUnits.push(this.lstDBData[i]);\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkAll\");\r\n        }\r\n    }\r\n\r\n    unCheckAll() {\r\n        try {\r\n            this.lstCheckedBUnits = [];\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n            if (this.lstgridfilterData != null && this.lstgridfilterData != undefined) {\r\n                if (this.EndIndex > this.lstgridfilterData.length) {\r\n                    this.EndIndex = this.lstgridfilterData.length;\r\n                }\r\n                for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                    this.lstgridfilterData[i].checkvalue = false;\r\n                    this.lstgridfilterData[i].CHK_VALUE = 0;\r\n                    \r\n                }\r\n            }\r\n            else {\r\n                if (this.EndIndex > this.lstDBData.length) {\r\n                    this.EndIndex = this.lstDBData.length;\r\n                }\r\n                for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                    this.lstDBData[i].checkvalue = false;\r\n                    this.lstDBData[i].CHK_VALUE = 0;\r\n                   \r\n                    this.lstCheckedBUnits.push(this.lstDBData[i]);\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"unCheckAll\");\r\n        }\r\n    }\r\n    /*\r\n    * This method is calling when we selecting particular record in DataTable and getting selected record data\r\n    */\r\n    selectedRow(values: any, event) {\r\n        try {\r\n            if (event == true) {\r\n                values.CHK_VALUE = 1;\r\n            }\r\n            else {\r\n                values.CHK_VALUE = 0;\r\n            }\r\n\r\n            for (var i = 0; i < this.lstCheckedBUnits.length; i++) {\r\n                if (this.lstCheckedBUnits[i].BUSINESS_UNIT === values.BUSINESS_UNIT) {\r\n                    var index = this.lstCheckedBUnits.indexOf(this.lstCheckedBUnits[i], 0)\r\n                    this.lstCheckedBUnits.splice(index, 1);\r\n                }\r\n            }\r\n            this.lstCheckedBUnits.push(values);\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"selectedRow\");\r\n        }\r\n    }\r\n\r\n    /*\r\n   * Storing data for sorting in two different  lists one for allocated and another for Unallocated \r\n   */\r\n    BindDataGrid() {\r\n        try {\r\n            var lstDBDataList;\r\n            this.dataCheckedSorting = [];\r\n            this.dataUncheckedSorting = [];\r\n\r\n            for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                if (this.lstDBData[i].CHK_ALLOCATED == 1) {\r\n                    this.dataCheckedSorting.push(this.lstDBData[i]);\r\n                }\r\n                else {\r\n                    this.dataUncheckedSorting.push(this.lstDBData[i]);\r\n                }\r\n            }\r\n            this.showGrid = true;\r\n            this.isVisible = true;\r\n            this.spinnerService.stop();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"BindDataGrid\");\r\n        }\r\n    }\r\n\r\n    /*\r\n    * This method is for sorting the data  based on seleted column in DataTable\r\n    */\r\n    customSort1(event) {\r\n        try {\r\n            var element = event;\r\n            this.lstDBData = [];\r\n            this.blnsortbycolumn = !this.blnsortbycolumn;\r\n            this.sortedcheckedrec = [];\r\n            this.sorteduncheckedrec = [];\r\n            this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] < b[element.field])\r\n                    return -1;\r\n                if (a[element.field] > b[element.field])\r\n                    return 1;\r\n                return 0;\r\n            });\r\n            this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] < b[element.field])\r\n                    return -1;\r\n                if (a[element.field] > b[element.field])\r\n                    return 1;\r\n                return 0;\r\n            });\r\n            if (this.blnsortbycolumn == false) {\r\n                this.lstDBData = [];\r\n                this.lstDBData = this.sortedcheckedrec.reverse().concat(this.sorteduncheckedrec.reverse());\r\n            }\r\n            else {\r\n                this.lstDBData = [];\r\n                this.lstDBData = this.sortedcheckedrec.concat(this.sorteduncheckedrec);\r\n            }\r\n            this.sortedcheckedrec = [];\r\n            this.sorteduncheckedrec = [];\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"customSort\");\r\n        }\r\n    }\r\n\r\n\r\n    customSort(event, field) {\r\n        var element = event;\r\n        if (this.preField == element.field) {\r\n            if (element.order == 1) {\r\n                element.order = -1;\r\n            } else {\r\n                element.order = 1;\r\n            }\r\n            // element.order = !element.order;\r\n\r\n        } else {\r\n            element.order = 1;\r\n        }\r\n        this.preField = element.field;\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n        let result = null;\r\n        let order: boolean;\r\n\r\n        try {\r\n            this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] == null && b[element.field] != null)\r\n                    result = -1;\r\n                else if (a[element.field] != null && b[element.field] == null)\r\n                    result = 1;\r\n                else if (a[element.field] == null && b[element.field] == null)\r\n                    result = 0;\r\n                else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                    result = a[element.field].localeCompare(b[element.field]);\r\n                else\r\n                    result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                return (element.order * result);\r\n            });\r\n\r\n            this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] == null && b[element.field] != null)\r\n                    result = -1;\r\n                else if (a[element.field] != null && b[element.field] == null)\r\n                    result = 1;\r\n                else if (a[element.field] == null && b[element.field] == null)\r\n                    result = 0;\r\n                else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                    result = a[element.field].localeCompare(b[element.field]);\r\n                else\r\n                    result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                return (element.order * result);\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"customSort\");\r\n        }\r\n\r\n        this.lstDBData = [];\r\n        this.lstDBData = this.sortedcheckedrec.concat(this.sorteduncheckedrec);\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n    }\r\n\r\n    filterdata(event) {\r\n        this.lstgridfilterData = [];\r\n        this.lstgridfilterData = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n        this.lstgridfilterData = event;\r\n    }\r\n\r\n    /*\r\n    * Getting OrgBunits from database\r\n    */\r\n    async populateBunitsDdlst(): Promise<boolean> {\r\n        let isOrgBUnitsExist: boolean = false;\r\n\r\n        if (this.blnShowOrgGroupLabel == true) {\r\n            this.orgGroupIDForDBUpdate = this.orgGrpId;\r\n        }\r\n        else {\r\n            this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n        }\r\n\r\n        this.spinnerService.start();\r\n        if ((this.orgGroupIDForDBUpdate == null || this.orgGroupIDForDBUpdate == undefined || this.orgGroupIDForDBUpdate == \"\" || this.orgGroupIDForDBUpdate == \"Select One\") && this.blnShowOrgGroupDD) {\r\n            this.growlMessage = [];\r\n            this.spinnerService.stop();\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select OrgGroupID\" });\r\n            return;\r\n        }\r\n        try {\r\n            await this.commonService.getOrgBusinessUnits(this.orgGroupIDForDBUpdate, BusinessType.AllBunits).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUP_BUNITS>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.spinnerService.stop();\r\n                            this.lstFilteredBUnits = data.DataList;\r\n                            isOrgBUnitsExist = true;\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.showGrid = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            isOrgBUnitsExist = false;\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.showGrid = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            isOrgBUnitsExist = false;\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.showGrid = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            isOrgBUnitsExist = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            return Promise.resolve(isOrgBUnitsExist);\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"populateBunitsDdlst\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when click on Go button\r\n    */\r\n    async getAllBUnits() {\r\n        this.growlMessage = [];\r\n        this.isVisible = false;\r\n        this.lstgridfilterData = null;\r\n\r\n        try {\r\n            if (this.blnShowOrgGroupLabel == true) {\r\n                this.orgGroupIDForDBUpdate = this.orgGrpId;\r\n            }\r\n            else {\r\n                this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n            }\r\n            if ((this.orgGroupIDForDBUpdate == null || this.orgGroupIDForDBUpdate == undefined || this.orgGroupIDForDBUpdate == \"\" || this.orgGroupIDForDBUpdate == \"Select One\") && this.blnShowOrgGroupDD) {\r\n\r\n                this.growlMessage = [];\r\n                this.spinnerService.stop();\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid Org Group ID\" });\r\n                return;\r\n            }\r\n            if (this.selectedDropDownUserId === \"Select User\" || this.selectedDropDownUserId === \"undefined\" || this.selectedDropDownUserId == \"\") {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please select valid User ID' });\r\n\r\n                this.showGrid = false;\r\n                return false;\r\n            }\r\n            if ((this.selectedBunit != null && this.selectedBunit != undefined && this.selectedBunit != '') || (this.selectedDescription != null && this.selectedDescription != undefined && this.selectedDescription != '')) {\r\n                this.lblSearched =\"0\";\r\n            }\r\n            this.lstDBData = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n            let isBUnitsExists = await this.populateBunitsDdlst();\r\n            if (isBUnitsExists == true) {\r\n                this.spinnerService.start();\r\n                await this.deliverAllocateBunitServices.getBUnits(this.lstFilteredBUnits, this.selectedDropDownUserId, this.selectedBunit, this.selectedDescription, this.deviceTokenEntry[TokenEntry_Enum.UserID])\r\n                    .forEach((response) => {\r\n                        switch (response.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.spinnerService.stop();\r\n                                this.lstDBData = [];\r\n                                this.lstDBData = response.DataList;\r\n\r\n                                for (let i = 0; i <= response.DataList.length - 1; i++) {\r\n                                    if (response.DataList[i].CHK_ALLOCATED == 1) {\r\n                                        response.DataList[i].checkvalue = true;\r\n                                    }\r\n                                    else {\r\n                                        response.DataList[i].checkvalue = false;\r\n                                    }\r\n                                }\r\n                                this.lstDBData = response.DataList;\r\n                                this.BindDataGrid();\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.isVisible = false;\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.isVisible = false;\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.isVisible = false;\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getAllBUnits\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when user click on Submit Button \r\n    */\r\n    async allocateBUnits() {\r\n        let strsearched: boolean;\r\n        if (this.lblSearched != null && this.lblSearched != '' && this.lblSearched != undefined) {\r\n            strsearched = true;\r\n        }\r\n        else {\r\n            strsearched = false;\r\n        }\r\n        if (this.selectedDropDownUserId === \"Select User\" || this.selectedDropDownUserId === \"undefined\" || this.selectedDropDownUserId == \"\") {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please select valid User ID' });\r\n            return;\r\n        }\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.deliverAllocateBunitServices.allocateBUnits(this.selectedDropDownUserId, this.deviceTokenEntry[TokenEntry_Enum.UserID], this.lstFilteredBUnits, strsearched, this.lstDBData)\r\n                .subscribe((response) => {\r\n                    this.growlMessage = [];\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.selectedDropDownUserId = \"\";\r\n                            this.selectedDescription = \"\";\r\n                            this.selectedBunit = \"\";\r\n                            this.isVisible = false;\r\n                            if (this.isAuditRequired == \"Y\") {\r\n                                this.insertAuditData();\r\n                                this.spinnerService.stop();\r\n                            } else {\r\n                                this.spinnerService.stop();\r\n                            }\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Updated Successfully' });\r\n                            this.lstDBData = [];\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            this.showGrid = false;\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            this.showGrid = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"allocateBUnits\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is for display error message\r\n    */\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    /**\r\n    * This method is for clearing all the variables\r\n    */\r\n    ngOnDestroy() {\r\n        this.deviceTokenEntry = null;\r\n        this.lstOrgGroups = null;\r\n        this.lstUsers = null;\r\n        this.lstOrgGroups = null;\r\n        this.intAppId = null;\r\n        this.lstBUnits = null;\r\n        this.lstFilteredBUnits = null;\r\n        this.lstCheckedBUnits = null;\r\n        this.lstDBData = null;\r\n        this.growlMessage = null;\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n        this.orgGrpIDData = null;\r\n        this.orgGrpId = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-allocate-business-units.component.ts","import { Component } from '@angular/core';\r\nimport { EnumApps } from '../Shared/AtParEnums';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./deliver-allocate-location-groups.component.html')\r\n})\r\n\r\nexport class AllocateLocationGroupsComponent {\r\n    deliverAppId: number = EnumApps.Deliver;\r\n} \r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-allocate-location-groups.component.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { ConfirmationService } from '../components/common/api';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { Message } from '../components/common/api';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { TokenEntry_Enum } from '../Shared/AtParEnums';\r\nimport { AssignSignatoriesService } from './deliver-assign-signatories.services';\r\nimport { StatusType } from '../Shared/AtParEnums';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { MT_DELV_COST_CENTER_AUTH_PERSON } from '../Entities/MT_DELV_COST_CENTER_AUTH_PERSON';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { SelectItem } from '../components/common/api';\r\nimport { List, Enumerable } from 'linqts';\r\nimport { asEnumerable } from 'linq-es5';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./deliver-assign-signatories.component.html'),\r\n    providers: [HttpService, ConfirmationService, AssignSignatoriesService, AtParCommonService, AtParConstants]\r\n})\r\n\r\nexport class AssignSignatoriesComponent {\r\n    /*Variable Declaration*/\r\n    pop: boolean = false;\r\n    table: boolean = false;\r\n    form: boolean = false;\r\n    form2: boolean = false;\r\n    filter: boolean = true;\r\n    ven: any;\r\n    deleteToken: boolean = false;\r\n    editUser: boolean = false;\r\n    loading: boolean = true;\r\n    growlMessage: Message[] = [];\r\n    lstDBData: MT_DELV_COST_CENTER_AUTH_PERSON[];\r\n    lstDBDataSearch: MT_DELV_COST_CENTER_AUTH_PERSON[];\r\n    lstDBDataTotal: MT_DELV_COST_CENTER_AUTH_PERSON[];\r\n    lstSignDBData: MT_DELV_COST_CENTER_AUTH_PERSON[];\r\n    codes: string;\r\n    newItem: MT_DELV_COST_CENTER_AUTH_PERSON;\r\n    startIndex: number;\r\n    EndIndex: number;\r\n    @ViewChild(DataTable) dataTableComponent: DataTable;\r\n    deviceTokenEntry: string[] = [];\r\n    recordsPerPageSize: number;\r\n    existingCostCenterCode: string;\r\n    isEditMode: boolean = false;\r\n    codeStatus: number;\r\n    userIDStatus: number;\r\n    userNameStatus: number;\r\n    middileNameStatus: number;\r\n    lastNameStatus: number;\r\n    disableButton: boolean = true;\r\n    disableButtonUser: boolean = true;\r\n    tableData: boolean = false;\r\n    strData: string = '';\r\n    breadCrumbMenu: Menus;\r\n\r\n    constructor(private httpService: HttpService,\r\n        private spinnerService: SpinnerService,\r\n        private confirmationService: ConfirmationService,\r\n        private assignSignatoriesService: AssignSignatoriesService,\r\n        private commonService: AtParCommonService,\r\n        private atParConstant: AtParConstants) {\r\n        this.breadCrumbMenu = new Menus();\r\n        this.ven = new MT_DELV_COST_CENTER_AUTH_PERSON();\r\n        this.codes = \"\";\r\n    }\r\n\r\n\r\n    async ngOnInit() {\r\n        try {\r\n            this.growlMessage = [];\r\n            this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n            this.recordsPerPageSize = + this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n            this.newItem = new MT_DELV_COST_CENTER_AUTH_PERSON();\r\n            await this.getCodes();\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Auto Complete event for seraching Cost Center\r\n     * @param event\r\n     */\r\n    async searchAutoCompleteCode(event) {\r\n        try {\r\n            let query = event.query;\r\n            this.lstDBDataSearch = [];\r\n            setTimeout(() => {\r\n                this.lstDBDataSearch = this.filterCostCenter(query, this.lstDBDataTotal);\r\n            }, 50)\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"searchAutoCompleteCode\");\r\n        }\r\n    }\r\n\r\n    private filterCostCenter(query, lstDBData: any[]): any[] {\r\n        this.growlMessage = [];\r\n        try {\r\n            let filtered : any[] = [];\r\n            if (query.length >= 1) {\r\n                for (let i = 0; i < lstDBData.length; i++) {\r\n                    let lstDBDataValue = lstDBData[i];\r\n                    if (lstDBDataValue.COST_CENTER_CODE.toString().toLowerCase().indexOf(query.toString().toLowerCase()) == 0) {\r\n                        filtered.push(lstDBDataValue.COST_CENTER_CODE);\r\n                    }\r\n                }\r\n            }\r\n            return filtered;\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"filterCostCenter\");\r\n        }\r\n    }\r\n\r\n    onMenuSearchKeyPress(event) {\r\n        var charCode = (event.which) ? event.which : event.keyCode;\r\n        if ((charCode > 31 && charCode <= 47) || (charCode >= 58 && charCode <= 64) || (charCode >= 91 && charCode <= 96) || (charCode >= 123 && charCode <= 126)) {\r\n            this.codes = \"\";\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Special Characters are not allowed' });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function is called when we click go button\r\n     */\r\n    async go() {\r\n        this.pop = false;\r\n        this.form = false;\r\n        this.form2 = false;\r\n        this.table = false;\r\n        this.filter = true;\r\n        this.isEditMode = false;\r\n        this.lstDBData = [];\r\n        this.lstSignDBData = [];\r\n        this.growlMessage = [];\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.getCodes();\r\n            this.spinnerService.stop();\r\n\r\n            if (this.lstDBData != null && this.lstDBData.length > 0 && this.lstDBData != undefined) {\r\n                this.pop = true;\r\n            }\r\n            if (this.lstDBData.length == 0) {\r\n                if (this.deleteToken == true) {\r\n                    this.deleteToken = false;\r\n                }\r\n                else {\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'No Codes(s) Found' });\r\n\r\n                }\r\n                this.pop = false;\r\n            }\r\n\r\n        } catch (ex) {\r\n            this.displayCatchException(ex, \"go\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Getting Cost Center Codes\r\n     */\r\n    async getCodes() {\r\n        try {\r\n            await this.assignSignatoriesService.getCodes(this.codes).catch(this.httpService.handleError).then((res: Response) => {\r\n                let data = res.json() as AtParWebApiResponse<MT_DELV_COST_CENTER_AUTH_PERSON>;\r\n                switch (data.StatType) {\r\n                    case StatusType.Success: {\r\n                        this.lstDBData = data.DataList;\r\n                        if (this.codes == '' || this.codes == undefined || this.codes == null) {\r\n                            this.lstDBDataTotal = data.DataList;\r\n                        }\r\n                    }\r\n                }\r\n                if (data.StatType != 4) { this.commonErrorHandling(data); }\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"getCodes\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function is called when we click on goback\r\n     */\r\n    goBack() {\r\n        try {\r\n            this.breadCrumbMenu.SUB_MENU_NAME = '';\r\n            this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n            this.form = false;\r\n            this.form2 = false;\r\n            this.table = false;\r\n            this.filter = true;\r\n            this.isEditMode = false;\r\n            this.pop = false;\r\n            this.growlMessage = [];\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"goBack\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function is called when we click add button\r\n     */\r\n    addCostCenterCode() {\r\n        try {\r\n            // this.filter = false;\r\n            this.growlMessage = [];\r\n            if (this.isEditMode == true) {\r\n                if (this.isEditMode) {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please  update or cancel before continuing!!!\" });\r\n                    return;\r\n                }\r\n                this.disableButton = false;\r\n            }\r\n            else {\r\n                this.disableButton = true;\r\n            }\r\n            this.codes = '';\r\n            this.form = true;\r\n            this.pop = false;\r\n            this.newItem = new MT_DELV_COST_CENTER_AUTH_PERSON();\r\n            this.newItem.COST_CENTER_CODE = \"\";\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"addCostCenterCode\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is for disable submit button untill all basic info is entered \r\n     * @param event\r\n     */\r\n    bindModelDataChange(event: any) {\r\n        try {\r\n            if (\"Code\" == event.TextBoxID.toString()) {\r\n                this.codeStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"userID\" == event.TextBoxID.toString()) {\r\n                this.userIDStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"fName\" == event.TextBoxID.toString()) {\r\n                this.userNameStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtLastName\" == event.TextBoxID.toString()) {\r\n                this.middileNameStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (\"txtMiddleName\" == event.TextBoxID.toString()) {\r\n                this.lastNameStatus = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n\r\n            if (this.form2 != true) {\r\n                if ((this.codeStatus == 0)) {\r\n                    this.disableButton = false;\r\n                }\r\n                else {\r\n                    this.disableButton = true;\r\n                }\r\n            }\r\n            if (this.form2 == true) {\r\n                if ((this.userIDStatus == 0) && (this.userNameStatus == 0)) {\r\n                    if ((this.middileNameStatus == undefined || this.middileNameStatus == 0) && (this.lastNameStatus == undefined || this.lastNameStatus == 0) ) {\r\n                        this.disableButtonUser = false;\r\n                    }\r\n                    else {\r\n                        this.disableButtonUser = true;\r\n                    }\r\n                   // this.disableButtonUser = false;\r\n                }\r\n                else {\r\n                    this.disableButtonUser = true;\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"bindModelDataChange\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function is called when click on edit button \r\n     * @param costCenterCode\r\n     */\r\n    editCostCenterCode(costCenterCode: MT_DELV_COST_CENTER_AUTH_PERSON) {\r\n        try {\r\n            //this.filter = false;\r\n            this.isEditMode = true;\r\n            this.form = true;\r\n            this.pop = false;\r\n            this.disableButton = false;\r\n            this.newItem = Object.assign({}, costCenterCode);\r\n            this.existingCostCenterCode = costCenterCode.COST_CENTER_CODE;\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"editCostCenterCode\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function is called when we want to update the Cost Center Code\r\n     */\r\n    private updateSignatoryCode() {\r\n        try {\r\n            this.assignSignatoriesService.updateAuthSign(this.newItem.COST_CENTER_CODE, this.existingCostCenterCode).forEach(resp => {\r\n                switch (resp.StatType) {\r\n                    case StatusType.Success: {\r\n                        this.growlMessage = [];\r\n                        var msg = AtParConstants.Updated_Msg.replace(\"1%\", 'Cost Center Code').replace(\"2%\", this.newItem.COST_CENTER_CODE);\r\n                        this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n                        this.isEditMode = true;\r\n                        this.form = true;\r\n                        break;\r\n                    }\r\n                }\r\n                this.commonErrorHandling(resp);\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"updateSignatoryCode\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function is called when we click on save button when adding cost code\r\n     */\r\n    saveSignatoryCode() {\r\n        try {\r\n            this.form = false;\r\n            if (this.isEditMode) {\r\n                this.updateSignatoryCode();\r\n            } else {\r\n                this.assignSignatories(this.newItem);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"saveSignatoryCode\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function is called when we want to insert user information for particular cost code\r\n     */\r\n    saveAuthSignatoryCode() {\r\n        try {\r\n            this.assignSignatoriesService.addAuthSign(this.newItem.COST_CENTER_CODE, this.newItem.AUTH_USER_ID, this.newItem.FIRST_NAME, this.newItem.LAST_NAME, this.newItem.MIDDLE_NAME).forEach(resp => {\r\n                switch (resp.StatType) {\r\n                    case StatusType.Success: {\r\n                        this.growlMessage = [];\r\n\r\n                        let msg = '';\r\n                        // if (this.newItem.AUTH_USER_ID != null || this.newItem.AUTH_USER_ID !== '') {\r\n                        msg = AtParConstants.Created_Msg.replace(\"1%\", 'Cost Center Code').replace(\"2%\", this.newItem.COST_CENTER_CODE);\r\n                        //}\r\n                        //else {\r\n                        //    msg = AtParConstants.Created_Msg.replace(\"1%\", 'User ID').replace(\"2%\", this.newItem.AUTH_USER_ID);\r\n                        //}\r\n                        this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n                        this.newItem.AUTH_USER_ID = '';\r\n                        this.newItem.FIRST_NAME = '';\r\n                        this.newItem.LAST_NAME = '';\r\n                        this.newItem.MIDDLE_NAME = '';\r\n                        this.disableButton = true;\r\n                        this.disableButtonUser = true;\r\n                        document.getElementById('userID').focus();\r\n\r\n                        this.userIDStatus = 1;\r\n                        this.userNameStatus = 1; \r\n                         \r\n                        //  this.assignSignatories(this.newItem);\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage = [];\r\n                        let msg = AtParConstants.AlreadyExist_Msg.replace(\"1%\", 'User ID').replace(\"2%\", this.newItem.AUTH_USER_ID);\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: msg });\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage = [];\r\n                        this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: resp.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Custom: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage = [];\r\n                        this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: resp.StatusMessage });\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"saveAuthSignatoryCode\");\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * This function is called when  getting data of cost center code\r\n     * @param costCenterAuthPerson\r\n     */\r\n    async assignSignatories(costCenterAuthPerson) {\r\n        this.breadCrumbMenu.SUB_MENU_NAME = 'Assign Signatories ';\r\n        this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n        this.form2 = false;\r\n        this.form = false;\r\n        this.pop = false;\r\n        this.filter = false;\r\n        this.table = true;\r\n        this.newItem.COST_CENTER_CODE = costCenterAuthPerson.COST_CENTER_CODE;\r\n        this.lstSignDBData = [];\r\n        this.editUser = true;\r\n        if (this.table == true || this.tableData == true) {\r\n            this.strData = 'Cost Center Code : ' + costCenterAuthPerson.COST_CENTER_CODE;\r\n        }\r\n\r\n        try {\r\n            this.spinnerService.start();\r\n            if (costCenterAuthPerson == \"\" || costCenterAuthPerson == null || costCenterAuthPerson == undefined) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Enter Cost Center Code...' });\r\n                this.spinnerService.stop();\r\n                return;\r\n            }\r\n            else {\r\n                await this.assignSignatoriesService.getAuthSign(costCenterAuthPerson.COST_CENTER_CODE).catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_DELV_COST_CENTER_AUTH_PERSON>;\r\n                    this.spinnerService.stop();\r\n                    this.lstSignDBData = data.DataList;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            if (this.lstSignDBData != null && this.lstSignDBData.length > 0) {\r\n                                this.tableData = true;\r\n                            }\r\n                            else {\r\n                                this.growlMessage = [];\r\n                                this.tableData = false;\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                return;\r\n                            }\r\n                            for (let i = 0; i < this.lstSignDBData.length; i++) {\r\n                                this.lstSignDBData[i].COST_CENTER_CODE = costCenterAuthPerson.COST_CENTER_CODE;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage = [];\r\n                            if (this.lstSignDBData != null && this.lstSignDBData.length > 0) {\r\n                                this.tableData = true;\r\n                            }\r\n                            else {\r\n                                this.growlMessage = [];\r\n                                this.tableData = false;\r\n                            }\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"assignSignatories\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Common Error Handlingh Method\r\n     * @param data\r\n     */\r\n    private commonErrorHandling(data) {\r\n        try {\r\n            switch (data.StatType) {\r\n                case StatusType.Warn: {\r\n                    this.spinnerService.stop();\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                    break;\r\n                }\r\n                case StatusType.Error: {\r\n                    this.spinnerService.stop();\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                    break;\r\n                }\r\n                case StatusType.Custom: {\r\n                    this.spinnerService.stop();\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"commonErrorHandling\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    confirmDelete(costCenterAuthPerson, isCostCenterCode) {\r\n        try {\r\n            this.growlMessage = [];\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure you want to delete this?',\r\n                accept: () =>\r\n                { this.deleteSignatories(costCenterAuthPerson, isCostCenterCode); }\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"confirmDelete\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * This function is called when we click delete button\r\n     * @param costCenterAuthPerson\r\n     * @param isCostCenterCode\r\n     */\r\n    async deleteSignatories(costCenterAuthPerson, isCostCenterCode) {\r\n        if (this.isEditMode && isCostCenterCode) {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please update or cancel before continuing!!!\" });\r\n            return;\r\n        }\r\n        if (this.lstDBData.length == 1) {\r\n            this.deleteToken = true;\r\n        }\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.assignSignatoriesService.deleteAuthSign(costCenterAuthPerson.COST_CENTER_CODE, costCenterAuthPerson.AUTH_USER_ID).forEach(resp => {\r\n                switch (resp.StatType) {\r\n                    case StatusType.Success: {\r\n                        this.growlMessage = [];\r\n\r\n                        let msg = '';\r\n                        var message = \"Deleted Successfully\";\r\n                        if (!isCostCenterCode) {\r\n                            msg = AtParConstants.Deleted_Msg.replace(\"1%\", 'User ID').replace(\"2%\", costCenterAuthPerson.AUTH_USER_ID);\r\n                            //message = \" User ID \" + costCenterAuthPerson.AUTH_USER_ID + message;\r\n                            this.assignSignatories(costCenterAuthPerson);\r\n                        } else {\r\n                            msg = AtParConstants.Deleted_Msg.replace(\"1%\", 'Cost center code').replace(\"2%\", costCenterAuthPerson.COST_CENTER_CODE);\r\n                            // message = \" Cost center code \" + costCenterAuthPerson.COST_CENTER_CODE + message;\r\n                            this.go();\r\n                        }\r\n                        this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: msg });\r\n                        break;\r\n                    }\r\n                }\r\n                this.commonErrorHandling(resp);\r\n            });\r\n        } catch (ex) {\r\n            this.displayCatchException(ex, \"deleteSignatories\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function is called when we click on cancel\r\n     */\r\n    goCancel() {\r\n        this.form = false;\r\n        this.form2 = false;\r\n        this.table = false;\r\n        this.filter = true;\r\n        this.isEditMode = false;\r\n        this.pop = false;\r\n    }\r\n\r\n    /**\r\n     * This function is called when we click on add button to add user info\r\n     */\r\n    edit() {\r\n        try {\r\n            this.disableButtonUser = true;\r\n            this.breadCrumbMenu.SUB_MENU_NAME = 'Add Signatories ';\r\n            this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n            this.form2 = true;\r\n            this.form = false;\r\n            this.table = false;\r\n            this.pop = false;\r\n            this.newItem.LAST_NAME = '';\r\n            this.newItem.MIDDLE_NAME = '';\r\n            this.growlMessage = [];\r\n            this.userIDStatus = null;\r\n            this.userNameStatus = null;\r\n            setTimeout(function () {\r\n                (<HTMLInputElement>document.getElementById(\"userID\")).focus();\r\n            }, 500);\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"edit\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function is called when we click on goback\r\n     */\r\n    back() {\r\n        this.form2 = false;\r\n        this.table = false;\r\n        this.pop = false;\r\n        this.filter = true;\r\n    }\r\n\r\n    /**\r\n     * This function is called when we click on Close\r\n     */\r\n    close() {\r\n        try {\r\n            this.breadCrumbMenu.SUB_MENU_NAME = '';\r\n            this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n            this.newItem.AUTH_USER_ID = '';\r\n            this.newItem.FIRST_NAME = '';\r\n            this.newItem.LAST_NAME = '';\r\n            this.newItem.MIDDLE_NAME = '';\r\n            this.disableButton = true;\r\n            this.growlMessage = [];\r\n            this.saveSignatoryCode();\r\n        }\r\n        catch (ex) {\r\n            this.displayCatchException(ex, \"close\");\r\n        }\r\n    }\r\n\r\n    /**\r\n  * This method is for displaying catch block error messages \r\n  * @param event\r\n  */\r\n    displayCatchException(ex, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, ex.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    /**\r\n   * delete all the values from variables\r\n   */\r\n    ngOnDestroy() {\r\n        this.deviceTokenEntry = [];\r\n        this.growlMessage = [];\r\n        this.spinnerService.stop();\r\n        this.spinnerService = null;\r\n        this.lstDBData = [];\r\n        this.lstSignDBData = [];\r\n        this.pop = false;\r\n        this.disableButton = true;\r\n        this.form = false;\r\n        this.form2 = false;\r\n        this.filter = true;\r\n    }\r\n} \r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-assign-signatories.component.ts","import { Component } from '@angular/core';\r\nimport { EnumApps } from '../Shared/AtParEnums';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./deliver-carrier-information.component.html')\r\n})\r\n\r\nexport class CarrierInformationComponent {\r\n    dlvrAppId: number = EnumApps.Deliver;\r\n} \r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-carrier-information.component.ts","import { Component } from '@angular/core';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n    template: require('./deliver-daily-activity.component.html')\r\n})\r\n\r\nexport class DailyActivityComponent {\r\n\r\n} \r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-daily-activity.component.ts","import { Component } from '@angular/core';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n    template: require('./deliver-daily-user-activity.component.html')\r\n})\r\n\r\nexport class DailyUserActivityComponent {\r\n\r\n} \r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-daily-user-activity.component.ts","import { Component, CUSTOM_ELEMENTS_SCHEMA, OnDestroy, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { MT_ATPAR_ORG_GROUP_BUNITS } from '../../app/Entities/MT_ATPAR_ORG_GROUP_BUNITS';\r\nimport { HttpServiceUtility } from '../shared/atparhttputilityservice';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { ConfirmationService } from '../components/common/api';\r\nimport { TokenEntry_Enum, ClientType, MailPriority } from '../Shared/AtParEnums';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { BusinessType } from '../Shared/AtParEnums';\r\nimport { StatusType } from '../Shared/AtParEnums';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { Message, SelectItem } from '../components/common/api';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { List, Enumerable } from 'linqts';\r\nimport { asEnumerable } from 'linq-es5';\r\nimport { EnumApps } from '../Shared/AtParEnums'\r\nimport { SSL_CONFIG_DETAILS } from '../Entities/SSL_CONFIG_DETAILS';\r\nimport { NavigationExtras } from '@angular/router';\r\nimport { saveAs } from 'file-saver';\r\nimport { Injectable } from '@angular/core';\r\nimport { VM_DELV_PO_COMMENTS } from '../Entities/VM_DELV_PO_COMMENTS';\r\nimport { MT_ATPAR_USER } from '../../app/Entities/mt_atpar_user';\r\nimport { DeliveryReportServiceComponent } from './deliver-delivery-report.service';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./deliver-delivery-report.component.html'),\r\n    providers: [HttpService, ConfirmationService, AtParCommonService, DeliveryReportServiceComponent],\r\n})\r\n\r\n@Injectable()\r\nexport class DeliveryReportComponent implements OnInit {\r\n    deviceTokenEntry: string[] = [];\r\n    recordsPerPageSize: number;\r\n    growlMessage: Message[] = [];\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    selectedOrgGroupId: string;\r\n    orgGrpId: string = \"\";\r\n    order: string = \"\";\r\n    blnShowOrgGroupDD: boolean = false;\r\n    lstOrgGroups: SelectItem[] = [];\r\n    lstOrgGroupsList: SelectItem[] = [];\r\n    showGrid: boolean = false;\r\n    showexport: boolean = false;\r\n\r\n\r\n\r\n    selectedDisplay: string = \"\";\r\n    showOnAllocateSelection: boolean = false;\r\n    strMenuCode: string = \"mt_deliver_report.aspx\";\r\n    strAuditData: string = \"\";\r\n    strRowFilter: string = \"\";\r\n    startIndex: number;\r\n    EndIndex: number;\r\n    blnsortbycolumn: boolean = true;\r\n    orgGroupIDForDBUpdate: string;\r\n    loading: boolean = true;\r\n    //fromDate: string;\r\n    //toDate: string;\r\n\r\n    lstPackType: SelectItem[] = [];\r\n    lstStatus: SelectItem[] = [];\r\n    lstCurrentStatus: SelectItem[] = [];\r\n    lstDeliverdBy: any[] = [];\r\n\r\n    selectedPackageType: string = \"\";\r\n    selectedStatus: string = \"\";\r\n    selectedCurrStatus: string = \"\";\r\n    selectedDeliverBy: string = \"\";\r\n    selectedOrgGrpId: string = \"\";\r\n\r\n\r\n    deliverHeaders: any[] = [];\r\n    deliverDetails: any[] = [];\r\n    deliverAttempts: any[] = [];\r\n\r\n    deliverPoComments: any[] = [];\r\n    deliverLineComments: any[] = [];\r\n\r\n    statusCode: number = -1;\r\n    noOfRecords: number = 0;\r\n    defDateRange: number = 0;\r\n    deliverDetailRows: number = 0;\r\n\r\n    fromDate: Date;\r\n    toDate: Date;\r\n    currentDate: Date;\r\n\r\n    tdExports: boolean = true;\r\n    plus: boolean = true;\r\n    blnStatus: boolean = false;\r\n    blnCurrStatus: boolean = false;\r\n    pop: boolean = false;\r\n\r\n    gstrProtocal: string;\r\n    gstrServerName: string;\r\n    gstrPortNo: string;\r\n    ipAddress: string;\r\n    txtEventsMail: string;\r\n    isMailDialog: boolean = false;\r\n    toMailAddr: string = '';\r\n    gSendEmailParamval: string = '';\r\n\r\n    pocomments: VM_DELV_PO_COMMENTS[];\r\n\r\n    OrgGroupID: string = \"\"; srvrUserID: string = \"\"; PoId: string = \"\"; DeliverTo: string = \"\";\r\n    TrackingNo: string = \"\"; DeliverdBy: string = \"\"; DeptId: string = \"\"; VendorName: string = \"\";\r\n    ItmDesc: string = \"\"; Loc: string = \"\"; ItemId: string = \"\";\r\n    Carrier: string = \"\"; Requestor: string = \"\"; BlnTflag: string = \"\"; DeliveryLoc: string = \"\";\r\n    Status: string = \"\"; CurrStatus: string = \"\"; LocDescr: string = \"\"; PakageType: string = \"\";\r\n    Pallet: string = \"\"\r\n\r\n    constructor(private httpService: HttpService, private _http: Http,\r\n        private spinnerService: SpinnerService,\r\n        private commonService: AtParCommonService,\r\n        private atParConstant: AtParConstants,\r\n        private DeliveryReportSevice: DeliveryReportServiceComponent,\r\n\r\n    ) {\r\n\r\n    }\r\n    async  ngOnInit() {\r\n\r\n        this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n        this.recordsPerPageSize = + this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n        await this.bindOrgGroups();\r\n\r\n        this.lstPackType = [];\r\n        this.lstPackType.push({ label: \"ALL\", value: \"0\" }, { label: \"PO\", value: \"PO\" }, { label: \"NON PO\", value: \"NON PO\" });\r\n        this.selectedPackageType = this.lstPackType[0].value;\r\n        this.lstStatus.push({ label: \"Select One\", value: \"STATUS\" }, { label: \"ALL\", value: \"ALL\" }, { label: \"Receive\", value: \"0\" }, { label: \"Download\", value: \"1\" }, { label: \"PickUp\", value: \"20\" }, { label: \"Load\", value: \"30\" }, { label: \"UnLoad\", value: \"40\" }, { label: \"Deliver\", value: \"50\" }, { label: \"HandOver\", value: \"100\" }, { label: \"Cancel\", value: \"13\" });\r\n        this.selectedStatus = this.lstStatus[0].value;\r\n        this.lstCurrentStatus.push({ label: \"Select One\", value: \"STATUS\" }, { label: \"Receive\", value: \"0\" }, { label: \"Download\", value: \"1\" }, { label: \"PickUp\", value: \"20\" }, { label: \"Load\", value: \"30\" }, { label: \"UnLoad\", value: \"40\" }, { label: \"Deliver\", value: \"50\" }, { label: \"HandOver\", value: \"100\" }, { label: \"Cancel\", value: \"13\" });\r\n        this.selectedCurrStatus = this.lstCurrentStatus[0].value;\r\n\r\n        await this.getMyPreferences();\r\n        this.bindDeliveredUsersList();\r\n        this.getOrgParamValue();\r\n\r\n        this.currentDate = new Date();\r\n        this.toDate = new Date();\r\n        this.fromDate = new Date();\r\n        if (this.defDateRange.toString() != '' && this.defDateRange != null) {\r\n            this.fromDate = await this.addDays(this.fromDate, -this.defDateRange);\r\n        }\r\n    }\r\n\r\n    async getMyPreferences() {\r\n\r\n        try {\r\n            await this.commonService.getMyPreferences('DEFAULT_REPORT_DURATION', this.deviceTokenEntry)\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<number>;\r\n                    this.statusCode = data.StatusCode;\r\n                    if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                        this.defDateRange = parseInt(data.DataVariable.toString());\r\n                    }\r\n                });\r\n            if (this.statusCode != AtparStatusCodes.ATPAR_OK) {\r\n                return AtparStatusCodes.E_SERVERERROR;\r\n            }\r\n\r\n        } catch (ex) {\r\n            return AtparStatusCodes.E_SERVERERROR;\r\n        }\r\n\r\n\r\n        return AtparStatusCodes.ATPAR_OK;\r\n    }\r\n\r\n    async bindOrgGroups() {\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.commonService.getUserOrgGroups(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n\r\n\r\n                            if (this.orgGroupData.length == 1) {\r\n\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.selectedOrgGroupId = this.orgGroupData[0].ORG_GROUP_ID;\r\n                                this.orgGrpId = this.orgGroupData[0].ORG_GROUP_ID + \" - \" + this.orgGroupData[0].ORG_GROUP_NAME;\r\n                                this.spinnerService.stop();\r\n                                break;\r\n\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.blnShowOrgGroupDD = true;\r\n                                this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" })\r\n                                this.selectedOrgGrpId = this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID].toString();\r\n\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID != \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + \" - \" + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: AtParConstants.ClientErrorMessage });\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async bindDeliveredUsersList() {\r\n        try {\r\n\r\n            if (this.blnShowOrgGroupDD == true) {\r\n\r\n                this.selectedOrgGroupId = this.selectedOrgGrpId;\r\n            }\r\n            this.lstDeliverdBy = [];\r\n            this.lstDeliverdBy.push({ label: \"Select User\", value: \"Select User\" });\r\n            this.spinnerService.start();\r\n            await this.commonService.getUsersList(this.deviceTokenEntry[TokenEntry_Enum.UserID], EnumApps.Deliver, this.selectedOrgGroupId).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_USER>;\r\n\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            for (let i = 0; i < data.DataList.length; i++) {\r\n                                this.lstDeliverdBy.push({\r\n                                    label: data.DataList[i].FULLNAME,\r\n                                    value: data.DataList[i].USER_ID\r\n                                })\r\n                            }\r\n                            if (this.lstDeliverdBy.length <= 0 || this.lstDeliverdBy == null) {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'No users Available' });\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage = [];\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage = [];\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage = [];\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            console.log(ex);\r\n            this.clientErrorMsg(ex);\r\n\r\n        }\r\n    }\r\n\r\n    show() {\r\n        this.plus = !this.plus;\r\n    }\r\n\r\n    async ddlStatusChanged() {\r\n        if (this.selectedStatus != 'STATUS' && this.selectedStatus != '') {\r\n            this.blnCurrStatus = true;\r\n        }\r\n        else {\r\n            this.blnCurrStatus = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async ddlCurrentStatusChanged() {\r\n\r\n        if (this.selectedCurrStatus != 'STATUS' && this.selectedCurrStatus != '') {\r\n            this.blnStatus = true;\r\n        }\r\n        else {\r\n            this.blnStatus = false;\r\n        }\r\n    }\r\n\r\n    async ddlOrgGrpIdChanged() {\r\n        this.growlMessage = [];\r\n        if (this.selectedOrgGrpId == \"Select One\") {\r\n            this.lstDeliverdBy = [];\r\n            this.lstDeliverdBy.push({ label: \"Select User\", value: \"Select User\" });\r\n            // this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \" \" });\r\n            return;\r\n        } else {            \r\n\r\n            this.bindDeliveredUsersList();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    convertDateFormate(strDate) {\r\n        var date = new Date(strDate),\r\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n            day = (\"0\" + date.getDate()).slice(-2);\r\n        return [mnth, day , date.getFullYear()].join(\"/\");\r\n    }\r\n\r\n    confirm() {\r\n        try {\r\n            this.growlMessage = [];\r\n            // var rowData: any;\r\n            var compareDates = new Date(this.toDate);\r\n            var currentDate = new Date();\r\n            if (compareDates.getTime() > currentDate.getTime()) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Todate must be less than or equal to current date \" });\r\n                return;\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async BindDataGrid() {\r\n\r\n        try {\r\n\r\n\r\n            this.strRowFilter = \"\";\r\n            let returnValue: boolean = false;\r\n            returnValue = await this.validateSearchFields();\r\n            if (returnValue) {\r\n                this.spinnerService.start();\r\n                this.srvrUserID = this.deviceTokenEntry[TokenEntry_Enum.UserID].toString();\r\n                this.OrgGroupID = this.selectedOrgGrpId;\r\n\r\n                if (this.selectedStatus == \"ALL\" || this.selectedStatus == \"STATUS\") {\r\n                    this.Status = \"\";\r\n\r\n                }\r\n                else {\r\n                    this.Status = this.selectedStatus;\r\n                }\r\n\r\n                if (this.selectedCurrStatus == \"ALL\" || this.selectedCurrStatus == \"STATUS\") {\r\n                    this.CurrStatus = \"\";\r\n                }\r\n                else {\r\n                    this.CurrStatus = this.selectedCurrStatus;\r\n                }\r\n\r\n                await this.getDeliveryDetails()\r\n\r\n                this.spinnerService.stop();\r\n            }\r\n\r\n\r\n        }\r\n        catch (ex) {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: AtParConstants.ClientErrorMessage });\r\n            this.spinnerService.stop();\r\n        }\r\n\r\n    }\r\n\r\n    validateSearchFields() {\r\n\r\n        this.pop = false;\r\n\r\n        this.growlMessage = [];\r\n        this.showGrid = false;\r\n\r\n        try {\r\n            this.growlMessage = [];\r\n\r\n            if (this.blnCurrStatus == true) {\r\n                if (this.selectedStatus == \"STATUS\" || this.selectedStatus == undefined || this.selectedStatus == \"\") {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Staus\" });\r\n                    return false;\r\n                }\r\n            }\r\n            if (this.blnStatus == true) {\r\n                if (this.selectedCurrStatus == \"STATUS\" || this.selectedCurrStatus == undefined || this.selectedCurrStatus == \"\") {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Current Status\" });\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (this.blnStatus == false && this.blnCurrStatus == false) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Status\" });\r\n                return false;\r\n            }\r\n\r\n            if (this.fromDate == null || this.fromDate.toString() == '' || this.toDate == null || this.toDate.toString() == '') {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please select a valid date range' });\r\n                return false;\r\n            }\r\n\r\n            if (Date.parse(this.fromDate.toString()) && Date.parse(this.toDate.toString())) {\r\n                if (Date.parse(this.convertDateFormate(this.toDate)) > Date.parse(this.convertDateFormate(this.currentDate))) {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"To Date should be less than or equal to Today's Date\" });\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (Date.parse(this.convertDateFormate(this.fromDate)) > Date.parse(this.convertDateFormate(this.toDate))) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"From Date should be less than To Date\" });\r\n                return false;\r\n            }\r\n\r\n\r\n            return true;\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    async getDeliveryDetails() {\r\n\r\n        try {\r\n            this.showGrid = false;\r\n            var Fdate = this.convertDateFormate(this.fromDate.toDateString());\r\n            var Tdate = this.convertDateFormate(this.toDate.toDateString());\r\n\r\n            var repItemlst: List<VM_DELV_PO_COMMENTS>\r\n            var repItem: VM_DELV_PO_COMMENTS\r\n            let DefDateTime: Date;\r\n            let StausDateTime: Date;\r\n            let CycledateTime: Date;\r\n            let PrevCycleDateTime: Date;\r\n            DefDateTime = new Date(\"1/1/0001 12:00:00 AM\");\r\n            let cycTime: Date;\r\n            let TotCycTime: number;\r\n            this.deliverHeaders = [];\r\n            this.deliverDetails = [];\r\n            this.deliverAttempts = [];\r\n            this.showexport = false;\r\n            await this.DeliveryReportSevice.GetDeliveryReportData(this.selectedOrgGroupId, Fdate, Tdate, this.srvrUserID, this.PoId, this.DeliverTo, this.TrackingNo, this.DeliverdBy, this.DeptId, this.VendorName, this.ItmDesc, this.Loc, this.ItemId,\r\n                this.Carrier, this.Requestor, this.BlnTflag, this.DeliveryLoc, this.Status, this.CurrStatus, this.LocDescr, this.selectedPackageType, this.Pallet).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    this.spinnerService.stop();\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success:\r\n                            {\r\n                                this.showGrid = true;\r\n                                this.deliverHeaders = data.DataDictionary[\"deliverHeaders\"];\r\n                                this.deliverDetails = data.DataDictionary[\"deliverDetails\"];\r\n                                this.deliverAttempts = data.DataDictionary[\"deliverAttempts\"];\r\n\r\n                                this.deliverHeaders.forEach(header => {\r\n                                    let details = this.deliverDetails.filter(detail => detail.TRANSACTION_ID == header.TRANSACTION_ID);\r\n                                    this.showexport = true;\r\n                                    TotCycTime = 0;\r\n                                    PrevCycleDateTime = new Date(\"1/1/0001 12:00:00 AM\");\r\n                                    if (details.length > 0) {\r\n\r\n                                        for (let intCnt = 0; intCnt <= details.length - 1; intCnt++) {\r\n                                            details[intCnt][\"CYCLE_TIME\"] = \"\";\r\n                                            CycledateTime = details[intCnt][\"STATUS_TIME\"];\r\n                                            cycTime = new Date(CycledateTime);\r\n\r\n                                            if (PrevCycleDateTime.toDateString() != DefDateTime.toDateString()) {\r\n\r\n                                                var diff = (cycTime.getTime() - PrevCycleDateTime.getTime());\r\n\r\n                                                if (diff > 0) {\r\n                                                    TotCycTime = TotCycTime + diff;\r\n\r\n                                                    details[intCnt][\"CYCLE_TIME\"] = this.GetTimeString(diff);\r\n                                                }\r\n                                            }\r\n                                            //var diffDays = Math.ceil(diff / (1000 * 3600 * 24)); \r\n\r\n                                            PrevCycleDateTime = cycTime;\r\n                                        }\r\n                                    }\r\n\r\n                                    let newTotRow = Object.assign({}, details[0]);\r\n                                    newTotRow[\"CYCLE_TIME\"] = this.GetTimeString(TotCycTime);\r\n                                    newTotRow[\"STATUS_MESSAGE\"] = \"Total Cycle Time\";\r\n                                    newTotRow[\"STATUS_TIME\"] = \"\";\r\n                                    newTotRow[\"STATUS_USER\"] = \"\";\r\n                                    newTotRow[\"RECEPIENT\"] = \"\";\r\n                                    newTotRow[\"DELIVERY_LOCATION\"] = \"\";\r\n                                    newTotRow[\"SIGNATURE\"] = \"\";\r\n                                    details.push(newTotRow);\r\n\r\n\r\n                                    header.DETAILS = details;\r\n\r\n                                    repItem = new VM_DELV_PO_COMMENTS();\r\n                                    repItemlst = new List<VM_DELV_PO_COMMENTS>();\r\n                                    repItem.HEADER_COMMENTS = details[0].HDR_COMMENTS;\r\n                                    repItem.LINE_COMMENTS = details[0].COMMENTS;\r\n\r\n                                    if (details[0].HDR_COMMENTS == \"\") {\r\n                                        header.SHOW_PO_COMMENTS = false;\r\n                                    }\r\n                                    else {\r\n                                        header.SHOW_PO_COMMENTS = true;\r\n                                    }\r\n\r\n\r\n                                    if (details[0].COMMENTS == \"\") {\r\n                                        header.SHOW_LINE_COMMENTS = false;\r\n                                    }\r\n                                    else {\r\n                                        header.SHOW_LINE_COMMENTS = true;\r\n                                    }\r\n\r\n                                    repItemlst.Add(repItem)\r\n                                    header.POCOMMENTS = repItemlst.ToArray();\r\n\r\n\r\n                                    let delAttempts = this.deliverAttempts.filter(attempt => attempt.TRANSACTION_ID == header.TRANSACTION_ID);\r\n                                    header.ATTEMPTS = delAttempts;\r\n                                    if (delAttempts.length > 0) { header.showAttempts = true } else { header.showAttempts = false }\r\n                                });\r\n\r\n                                if (this.recordsPerPageSize == 0) {\r\n                                    this.deliverDetailRows = this.deliverHeaders.length;\r\n                                } else {\r\n                                    this.deliverDetailRows = this.recordsPerPageSize;\r\n                                }\r\n\r\n\r\n                                break;\r\n\r\n                            }\r\n                        case StatusType.Warn:\r\n                            {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.spinnerService.stop();\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async onDeliverFilterData(data) {\r\n        try {\r\n            //  this.lstChargesFilterData = data;\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async addDays(theDate, days) {\r\n        return new Date(theDate.getTime() + days * 24 * 60 * 60 * 1000);\r\n    }\r\n\r\n    clientErrorMsg(strExMsg) {\r\n        this.growlMessage = [];\r\n        this.spinnerService.stop();\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString());\r\n    }\r\n\r\n    async onExportToExcelClick(event) {\r\n        try {\r\n            event.stopImmediatePropagation();\r\n            this.spinnerService.start();\r\n            let html: string = await this.exportReportDetails('Excel');  \r\n            let blob = new Blob([html], {\r\n                type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\r\n            });\r\n            saveAs(blob, \"DeliveryReport.xls\");\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    public GetTimeString(millseconds) {\r\n        var seconds = Math.floor(millseconds / 1000);\r\n        var scndstr: string;\r\n        var hourstr: string;\r\n        var minutesstr: string;\r\n        scndstr = \"\";\r\n        hourstr = \"\";\r\n        minutesstr = \"\";\r\n\r\n        var h = 3600;\r\n        var m = 60;\r\n        var hours = Math.floor(seconds / h);\r\n        var minutes = Math.floor((seconds % h) / m);\r\n        var scnds = Math.floor((seconds % m));\r\n        var timeString = '';\r\n        if (scnds < 10) { scndstr = \"0\" + scnds } else { scndstr = scnds.toString() };\r\n        if (hours < 10) { hourstr = \"0\" + hours } else { hourstr = hours.toString() };\r\n        if (minutes < 10) { minutesstr = \"0\" + minutes } else { minutesstr = minutes.toString() };\r\n        timeString = hourstr + \":\" + minutesstr + \":\" + scndstr;\r\n        return timeString;\r\n    }\r\n\r\n    async exportReportDetails(reqType: string) {\r\n        let htmlBuilder: string = '';\r\n        try {\r\n            this.statusCode = -1;\r\n            this.growlMessage = [];\r\n            let sbMailText: string;\r\n            let _strFrmDt: string;\r\n            let _strToDt: string;\r\n\r\n\r\n            let imgserverPath: string = '';\r\n\r\n            await this.commonService.getServerIP()\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    var data = res.json() as AtParWebApiResponse<string>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.ipAddress = data.DataVariable.toString();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (data.StatType != StatusType.Success) {\r\n                        htmlBuilder = '';\r\n                        return htmlBuilder;\r\n                    }\r\n                });\r\n\r\n\r\n            await this.commonService.getSSLConfigDetails()\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    this.growlMessage = [];\r\n                    var data = res.json() as AtParWebApiResponse<SSL_CONFIG_DETAILS>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.gstrProtocal = data.Data.PROTOCOL.toString();\r\n                            this.gstrServerName = data.Data.SERVER_NAME.toString();\r\n                            this.gstrPortNo = data.Data.PORT_NO.toString();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (data.StatType != StatusType.Success) {\r\n                        htmlBuilder = '';\r\n                        return htmlBuilder;\r\n                    }\r\n\r\n                });\r\n\r\n           imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/AtPar/AtParWebApi/assets/images/'\r\n\r\n\r\n\r\n            let title: string = '\"\"' + \"AtparVersion 3.0\" + '\"\"';\r\n\r\n\r\n            if (1 == 1) {\r\n\r\n\r\n                htmlBuilder = \"<Table align=left width=90% cellpadding=0 cellspacing = 0 vAlign=top>\";\r\n\r\n                if (reqType == 'Print') {\r\n                    htmlBuilder += \"<TR width='100%'><td   colspan=2 align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg title=Atpar Version 2.4.4><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td><td align=left  width='85%' height=63 nowrap><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                        + \"<TR><TD height=27  vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" + \"\" + \"COLOR: #8b4513;FONT-FAMILY: verdana;FONT-SIZE: 8pt\" + \"\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                        + \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                        + \"<tr><td colspan=5 align=left><span class=c2><b> Delivery Report From \" + this.convertDateFormate(this.fromDate) + \" to \" + this.convertDateFormate(this.toDate) + \"</b></span></td><td align=right valign=top>&nbsp;\";\r\n                                       \r\n                    htmlBuilder += \"<A  href=\" + \"\" + \"javascript:window.print()\" + \"><img src=\" + imgserverPath + \"print.jpg></A>\"\r\n                } else {\r\n                    if (reqType == 'Mail') {\r\n                        htmlBuilder += \"<TR height=63><TD align=left colspan=2><IMG height=63 width=18% src=cid:logo title=Atpar 3><img src=cid:topbg width=82% height=63></TD></TR>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<TR height=63><TD align=left colspan=2><IMG height=63 width=18% src=\" + imgserverPath + \"logo.jpg title=Atpar 3><img src=\" + imgserverPath + \"topbg.jpg width=82% height=63></TD></TR>\";\r\n                    }\r\n                    htmlBuilder += \"<TR><TD height=27  vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" + \"\" + \"COLOR: #8b4513;FONT-FAMILY: verdana;FONT-SIZE: 8pt\" + \"\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                        + \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                        + \"<tr><td colspan=3 align=left><span class=c2><b> Delivery Report From \" + this.convertDateFormate(this.fromDate) + \" to \" + this.convertDateFormate(this.toDate) + \" </b></span></td><td align=right valign=top>&nbsp;\";\r\n                }\r\n\r\n                htmlBuilder += \"</td></tr><tr height=20></tr></table></td></tr><tr><td colspan=2> \"\r\n                    + \"<table align=center width=100% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding='4'>\"\r\n                    + \"<tr bgcolor=#d3d3d3>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Order# - Line#</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>External Tracking#</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Internal Tracking#</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Location - Description</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Dept ID</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Qty</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Uom</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Current Owner</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Item ID</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>MfgItem ID</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Item Description</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Carrier</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Receipt Date</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>PickUp User</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Requestor</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Status</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Vendor Name</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Notes</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Pallet</td>\"\r\n                    + \"</tr>\";\r\n\r\n\r\n\r\n                await this.deliverHeaders.forEach(header => {\r\n                    htmlBuilder += \"<tr>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.PO_ID + \" - \" + header.LINE_NO + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.REPORT_DATA_31 + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.REPORT_DATA_3 + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.LOCATION + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.DEPT_ID + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.QTY + \"&nbsp;</td>\";\r\n                    if (header.UOM == null || header.UOM == '') {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.UOM + \"&nbsp;</td>\";\r\n                    }\r\n                    if (header.CURRENT_STATUS_USER == null || header.CURRENT_STATUS_USER == '') {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.CURRENT_STATUS_USER + \"&nbsp;</td>\";\r\n                    }\r\n                    if (header.ITEM_ID == null || header.ITEM_ID == '') {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.ITEM_ID + \"&nbsp;</td>\";\r\n                    }\r\n                    if (header.MFGITEMID == null || header.MFGITEMID == '') {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.MFGITEMID + \"&nbsp;</td>\";\r\n                    }\r\n                      \r\n                    \r\n                    htmlBuilder += \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.REPORT_DATA_8 + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.CARRIER_ID + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.RECEIPT_DATE + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.PICKUP_USER + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.DELIVERED_TO + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.STATUS_MESSAGE + \"(\" + header.STATUS_TIME + \")\" + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.VENDOR_NAME + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff wrap>&nbsp;\" + header.ITEM_NOTES + \"&nbsp;</td>\";\r\n                    if (header.PALLET == null || header.PALLET == '') {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;\" + header.PALLET + \"&nbsp;</td>\";\r\n                    }\r\n                    htmlBuilder += \"</tr>\";\r\n                    htmlBuilder += \"<tr>\"\r\n                        + \"<td colspan='19'> PO Header Comments:\" + header.HDR_COMMENTS + \"</td></tr>\"\r\n\r\n                    if (header.DETAILS.length > 0) {\r\n                        let sigimgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/AtPar/AtParWebApi/Uploaded/';\r\n                        htmlBuilder += \"<tr>\"\r\n                            + \"<td colspan=19>\"\r\n                            + \"<table align=center width=90% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding='4'>\"\r\n                            + \"<tr bgcolor=#E0E0E0>\"\r\n                            + \"<td align=center nowrap width=15%><span class=c3><b>Event</b></span></td>\"\r\n                            + \"<td align=center nowrap width=8%><span class=c3><b> Event Date(mm/dd/yyyy) </b></span></td>\"\r\n                            + \"<td align=center nowrap width=21%><span class=c3><b>Cycle Time</b></span></td>\"\r\n                            + \"<td align=center nowrap width=10%><span class=c3><b>User</b></span></td>\"\r\n                            + \"<td align=center nowrap width=12%><span class=c3><b>Recepient</b></span></td>\"\r\n                            + \"<td align=center nowrap width=12%><span class=c3><b>Delivery Location</b></span></td>\"\r\n                            + \"<td align=center nowrap width=10%><span class=c3><b>Drop Off </b></span></td>\"\r\n                            + \"<td align=center nowrap width=12%><span class=c3><b>Signature</b></span></td>\"\r\n                            + \"</tr>\";\r\n                        header.DETAILS.forEach(detail => {\r\n                            htmlBuilder += \"<tr>\"\r\n                                + \"<td align=left nowrap ><span class=c3>\" + detail.STATUS_MESSAGE + \"</span></td>\"\r\n                                + \"<td align=right nowrap><span class=c3>\" + detail.STATUS_TIME + \"</span></td>\"\r\n                                + \"<td align=left style='mso-number-format:\\@;' ><span class=c3>\" + detail.CYCLE_TIME + \"</span></td>\";\r\n                               \r\n                            if (detail.STATUS_USER == '' || detail.STATUS_USER == null) {\r\n                                htmlBuilder += \"<td align=right nowrap ><span class=c3>&nbsp;</span></td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>\" + detail.STATUS_USER + \"</span></td>\";\r\n                            }\r\n\r\n                            if (detail.RECEPIENT == '' || detail.RECEPIENT == null) {\r\n                                htmlBuilder += \"<td align=right nowrap ><span class=c3>&nbsp;</span></td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>\" + detail.RECEPIENT + \"</span></td>\";\r\n                            }\r\n                            if (detail.DELIVERY_LOCATION == '' || detail.DELIVERY_LOCATION == null) {\r\n                                htmlBuilder += \"<td align=right nowrap ><span class=c3>&nbsp;</span></td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>\" + detail.DELIVERY_LOCATION + \"</span></td>\";\r\n                            }\r\n\r\n                            if (detail.HANDOVER == '' || detail.HANDOVER == null) {\r\n                                htmlBuilder += \"<td align=right nowrap ><span class=c3>&nbsp;</span></td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>\" + detail.HANDOVER + \"</span></td>\";\r\n                            }\r\n                                                       \r\n\r\n\r\n                            if (detail.STATUS_MESSAGE == \"Delivered\") {\r\n\r\n                                if (reqType == 'Mail') {\r\n\r\n                                    if (this.gSendEmailParamval == \"Y\") {\r\n                                        htmlBuilder += \"<td align=right nowrap ><img  src=\" + sigimgserverPath + header.TRANSACTION_ID + \".jpg ></td>\";\r\n                                    }\r\n                                    else {\r\n                                        htmlBuilder += \"<td align=right ><span class=c3></span></td>\";\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    htmlBuilder += \"<td align=right nowrap ><img  src=\" + sigimgserverPath + header.TRANSACTION_ID + \".jpg ></td>\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=right ><span class=c3></span></td>\";\r\n                            }\r\n\r\n\r\n                            htmlBuilder += \"</tr>\";\r\n\r\n                        });\r\n\r\n\r\n\r\n                        htmlBuilder += \"</table>\"\r\n                        htmlBuilder += \"<tr>\"\r\n                            + \"<td colspan=19> PO Line Comments: \" + header.COMMENTS + \"</td></tr>\"\r\n                            + \"</td>\"\r\n                            + \"</tr>\";\r\n                    }\r\n\r\n                    if (header.ATTEMPTS.length > 0) {\r\n\r\n                        htmlBuilder += \"<tr><td colspan=19>\"\r\n                            + \"<table align=center width=90% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1>\"\r\n                            + \"<tr bgcolor=#E0E0E0>\"\r\n                            + \"<td align=center nowrap width=25%><span class=c3><b>Attempt Date(mm/dd/yyyyy)</b></span></td>\"\r\n                            + \"<td align=center nowrap width=75%><span class=c3><b>Comments</b></span></td>\"\r\n                            + \"</tr>\";\r\n                        header.ATTEMPTS.forEach(attempts => {\r\n                            htmlBuilder += \"<tr>\"\r\n                                + \"<td align=center nowrap width=25%><span class=c3>\" + attempts.ATTEMPT_DATE + \"</span></td>\"\r\n                                + \"<td align=center nowrap width=75%><span class=c3>\" + attempts.COMMENT + \"</td>\"\r\n                                + \"</tr>\";\r\n                        });\r\n\r\n                        htmlBuilder += \"</table>\";\r\n                        htmlBuilder += \"</td></tr>\"\r\n                    }\r\n\r\n                });\r\n\r\n                htmlBuilder += \"</table></Table>\";\r\n\r\n            }\r\n\r\n            return await htmlBuilder;\r\n\r\n\r\n        }\r\n        catch (ex) {\r\n            htmlBuilder = '';\r\n            return htmlBuilder;\r\n        }\r\n    }\r\n\r\n    async exportsubReportDetails(reqType: string, transId: string) {\r\n        let htmlBuilder: string = '';\r\n        try {\r\n            this.statusCode = -1;\r\n            this.growlMessage = [];\r\n            let sbMailText: string;\r\n            let _strFrmDt: string;\r\n            let _strToDt: string;\r\n\r\n\r\n            let imgserverPath: string = '';\r\n\r\n            await this.commonService.getServerIP()\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    var data = res.json() as AtParWebApiResponse<string>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.ipAddress = data.DataVariable.toString();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (data.StatType != StatusType.Success) {\r\n                        htmlBuilder = '';\r\n                        return htmlBuilder;\r\n                    }\r\n                });\r\n\r\n\r\n            await this.commonService.getSSLConfigDetails()\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    this.growlMessage = [];\r\n                    var data = res.json() as AtParWebApiResponse<SSL_CONFIG_DETAILS>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.gstrProtocal = data.Data.PROTOCOL.toString();\r\n                            this.gstrServerName = data.Data.SERVER_NAME.toString();\r\n                            this.gstrPortNo = data.Data.PORT_NO.toString();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (data.StatType != StatusType.Success) {\r\n                        htmlBuilder = '';\r\n                        return htmlBuilder;\r\n                    }\r\n\r\n                });\r\n\r\n           // imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/atpar/web/images/';\r\n            imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/AtPar/AtParWebApi/assets/images/'\r\n\r\n\r\n\r\n\r\n\r\n            let title: string = '\"\"' + \"AtparVersion 3.0\" + '\"\"';\r\n\r\n\r\n            if (1 == 1) {\r\n\r\n\r\n                htmlBuilder = \"<Table align=left width=90% cellpadding=0 cellspacing = 0 vAlign=top>\";\r\n\r\n                if (reqType == 'Print') {\r\n                    htmlBuilder += \"<TR width='100%'><td   colspan=2 align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg title=Atpar Version 2.4.4><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td><td align=left  width='85%' height=63 nowrap><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                        + \"<TR><TD height=27  vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" + \"\" + \"COLOR: #8b4513;FONT-FAMILY: verdana;FONT-SIZE: 8pt\" + \"\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                        + \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                        + \"<tr><td colspan=5 align=left><span class=c2><b> Delivery Report From \" + this.convertDateFormate(this.fromDate) + \" to \" + this.convertDateFormate(this.toDate) + \"</b></span></td><td align=right valign=top>&nbsp;\";\r\n\r\n                   \r\n                    htmlBuilder += \"<A  href=\" + \"\" + \"javascript:window.print()\" + \"><img src=\" + imgserverPath + \"print.jpg></A>\"\r\n                } else {\r\n                    if (reqType == 'Mail') {\r\n                        htmlBuilder += \"<TR height=63><TD align=left bgcolor='#fe9836' colspan=2><IMG height=63  width=18% src=cid:logo title=Atpar 3></TD></TR>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<TR height=63><TD align=left colspan=2><IMG height=63 width=18% src=\" + imgserverPath + \"logo.jpg title=Atpar 3><img src=\" + imgserverPath + \"topbg.jpg width=82% height=63></TD></TR>\";\r\n                    }\r\n                    htmlBuilder += \"<TR><TD height=27  vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" + \"\" + \"COLOR: #8b4513;FONT-FAMILY: verdana;FONT-SIZE: 8pt\" + \"\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                        + \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                        + \"<tr><td colspan=3 align=left><span class=c2><b> Delivery Report From \" + this.convertDateFormate(this.fromDate) + \" to \" + this.convertDateFormate(this.toDate) + \" </b></span></td><td align=right valign=top>&nbsp;\";\r\n                }\r\n\r\n                htmlBuilder += \"</td></tr><tr height=20></tr></table></td></tr><tr><td colspan=2> \"\r\n                    + \"<table align=center width=100% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1>\"\r\n                    + \"<tr bgcolor=#d3d3d3>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Order# - Line#</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>External Tracking#</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Internal Tracking#</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Location - Description</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Dept ID</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Qty</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Uom</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Current Owner</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Item ID</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>MfgItem ID</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Item Description</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Carrier</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Receipt Date</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>PickUp User</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Requestor</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Status</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Vendor Name</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Notes</td>\"\r\n                    + \"<td bgcolor=#d3d3d3 nowrap>&nbsp;<center><b>Pallet</td>\"\r\n                    + \"</tr>\";\r\n\r\n                let deliverPrintDetails = this.deliverHeaders.filter(a => a.TRANSACTION_ID == transId);\r\n\r\n                await deliverPrintDetails.forEach(header => {\r\n                    htmlBuilder += \"<tr>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.PO_ID + \" - \" + header.LINE_NO + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.REPORT_DATA_31 + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.REPORT_DATA_3 + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.LOCATION + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.DEPT_ID + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.QTY + \"&nbsp;</td>\"\r\n                    if (header.UOM == null || header.UOM == '') {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.UOM + \"&nbsp;</td>\";\r\n                    }\r\n                    if (header.CURRENT_STATUS_USER == null || header.CURRENT_STATUS_USER == '') {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.CURRENT_STATUS_USER + \"&nbsp;</td>\";\r\n                    }\r\n                    if (header.ITEM_ID == null || header.ITEM_ID == '') {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.ITEM_ID + \"&nbsp;</td>\";\r\n                    }\r\n                    if (header.MFGITEMID == null || header.MFGITEMID == '') {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.MFGITEMID + \"&nbsp;</td>\";\r\n                    }\r\n                    htmlBuilder += \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.REPORT_DATA_8 + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.CARRIER_ID + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.RECEIPT_DATE + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.PICKUP_USER + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.DELIVERED_TO + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.STATUS_MESSAGE + \"(\" + header.STATUS_TIME + \")\" + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff nowrap>&nbsp;\" + header.VENDOR_NAME + \"&nbsp;</td>\"\r\n                        + \"<td bgcolor=#ffffff wrap>&nbsp;\" + header.ITEM_NOTES + \"&nbsp;</td>\";\r\n                    if (header.PALLET == null || header.PALLET == '') {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;</td>\";\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<td bgcolor=#ffffff wrap>&nbsp;\" + header.PALLET + \"&nbsp;</td>\";\r\n                    }\r\n                    htmlBuilder += \"</tr>\";\r\n                    htmlBuilder += \"<tr>\"\r\n                        + \"<td colspan='19'> PO Header Comments:\" + header.HDR_COMMENTS + \"</td></tr>\"\r\n\r\n                    if (header.DETAILS.length > 0) {\r\n                        let sigimgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/AtPar/AtParWebApi/Uploaded/';\r\n                        htmlBuilder += \"<tr>\"\r\n                            + \"<td colspan=19>\"\r\n                            + \"<table align=center width=90% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1>\"\r\n                            + \"<tr bgcolor=#E0E0E0>\"\r\n                            + \"<td align=center nowrap width=15%><span class=c3><b>Event</b></span></td>\"\r\n                            + \"<td align=center nowrap width=8%><span class=c3><b> Event Date(mm/dd/yyyy) </b></span></td>\"\r\n                            + \"<td align=center nowrap width=21%><span class=c3><b>Cycle Time</b></span></td>\"\r\n                            + \"<td align=center nowrap width=10%><span class=c3><b>User</b></span></td>\"\r\n                            + \"<td align=center nowrap width=12%><span class=c3><b>Recepient</b></span></td>\"\r\n                            + \"<td align=center nowrap width=12%><span class=c3><b>Delivery Location</b></span></td>\"\r\n                            + \"<td align=center nowrap width=10%><span class=c3><b>Drop Off </b></span></td>\"\r\n                            + \"<td align=center nowrap width=12%><span class=c3><b>Signature</b></span></td>\"\r\n                            + \"</tr>\";\r\n                        header.DETAILS.forEach(detail => {\r\n                            htmlBuilder += \"<tr>\"\r\n                                + \"<td align=left nowrap ><span class=c3>\" + detail.STATUS_MESSAGE + \"</span></td>\"\r\n                                + \"<td align=right nowrap><span class=c3>\" + detail.STATUS_TIME + \"</span></td>\"\r\n                                + \"<td align=left style='mso-number-format:\\@;' ><span class=c3>\" + detail.CYCLE_TIME + \"</span></td>\";\r\n\r\n                            if (detail.STATUS_USER == '' || detail.STATUS_USER == null) {\r\n                                htmlBuilder += \"<td align=right nowrap ><span class=c3>&nbsp;</span></td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>\" + detail.STATUS_USER + \"</span></td>\";\r\n                            }\r\n\r\n                            if (detail.RECEPIENT == '' || detail.RECEPIENT == null) {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>&nbsp;</span></td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>\" + detail.RECEPIENT + \"</span></td>\";\r\n                            }\r\n                            if (detail.DELIVERY_LOCATION == '' || detail.DELIVERY_LOCATION == null) {\r\n                                htmlBuilder += \"<td align=right nowrap ><span class=c3>&nbsp;</span></td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>\" + detail.DELIVERY_LOCATION + \"</span></td>\";\r\n                            }\r\n\r\n                            if (detail.HANDOVER == '' || detail.HANDOVER == null) {\r\n                                htmlBuilder += \"<td align=left nowrap ><span class=c3>&nbsp;</span></td>\";\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=right nowrap ><span class=c3>\" + detail.HANDOVER + \"</span></td>\";\r\n                            }\r\n\r\n\r\n                            if (detail.STATUS_MESSAGE == \"Delivered\") {\r\n\r\n                                if (reqType == 'Mail') {\r\n\r\n                                    if (this.gSendEmailParamval == \"Y\") {\r\n                                        htmlBuilder += \"<td align=right nowrap ><img  src=\" + sigimgserverPath + header.TRANSACTION_ID + \".jpg ></td>\";\r\n                                    }\r\n                                    else {\r\n                                        htmlBuilder += \"<td align=right ><span class=c3></span></td>\";\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    htmlBuilder += \"<td align=right nowrap ><img  src=\" + sigimgserverPath + header.TRANSACTION_ID + \".jpg ></td>\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td align=right ><span class=c3></span></td>\";\r\n                            }\r\n\r\n\r\n\r\n                            htmlBuilder += \"</tr>\";\r\n\r\n                        });\r\n\r\n\r\n\r\n                        htmlBuilder += \"</table>\"\r\n                        htmlBuilder += \"<tr>\"\r\n                            + \"<td colspan=19> PO Line Comments: \" + header.COMMENTS + \"</td></tr>\"\r\n                            + \"</td>\"\r\n                            + \"</tr>\";\r\n                    }\r\n\r\n                    if (header.ATTEMPTS.length > 0) {\r\n\r\n                        htmlBuilder += \"<tr><td colspan=19>\"\r\n                            + \"<table align=center width=90% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1>\"\r\n                            + \"<tr bgcolor=#E0E0E0>\"\r\n                            + \"<td align=center nowrap width=25%><span class=c3><b>Attempt Date(mm/dd/yyyyy)</b></span></td>\"\r\n                            + \"<td align=center nowrap width=75%><span class=c3><b>Comments</b></span></td>\"\r\n                            + \"</tr>\";\r\n                        header.ATTEMPTS.forEach(attempts => {\r\n                            htmlBuilder += \"<tr>\"\r\n                                + \"<td align=center nowrap width=25%><span class=c3>\" + attempts.ATTEMPT_DATE + \"</span></td>\"\r\n                                + \"<td align=center nowrap width=75%><span class=c3>\" + attempts.COMMENT + \"</td>\"\r\n                                + \"</tr>\";\r\n                        });\r\n\r\n                        htmlBuilder += \"</table>\";\r\n                        htmlBuilder += \"</td></tr>\"\r\n                    }\r\n\r\n                });\r\n\r\n                htmlBuilder += \"</table></Table>\";\r\n\r\n            }\r\n\r\n            return await htmlBuilder;\r\n\r\n\r\n        }\r\n        catch (ex) {\r\n            htmlBuilder = '';\r\n            return htmlBuilder;\r\n        }\r\n    }\r\n\r\n    async onSendMailIconClick(event) {\r\n        try {\r\n            this.isMailDialog = true;\r\n            this.toMailAddr = '';\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n    }\r\n\r\n    async onSendMailClick(event) {\r\n        try {\r\n            this.spinnerService.start();\r\n            let html: string = await this.exportReportDetails('Mail');\r\n            let toAddr: string = '';\r\n            this.growlMessage = [];\r\n            this.isMailDialog = false;\r\n\r\n            if (html != '' && html != null) {\r\n                await this.commonService.sendEmbeddedEmail(this.deviceTokenEntry[TokenEntry_Enum.SystemId], 'Deliver Report', JSON.stringify(html), this.toMailAddr, '', 'false', MailPriority.Normal.toString(), '')\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        let data = res.json() as AtParWebApiResponse<number>;\r\n                        this.statusCode = data.StatusCode;\r\n                    });\r\n\r\n                if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                    this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Mail has been sent' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_FROM_ADDRESS) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'From Address is Missing! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_TO_ADDRESS) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Please Enter To Email Address' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_SUBJECT) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Subject is Missing! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_BODY) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Body is Missing! Please contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_SMTP_SERVER_MISSING) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Mail Server is Not Configured! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_SEND_FAILED) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Mail Not Sent. Please Try Again' });\r\n                }\r\n                else {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Error while sending mail' });\r\n                }\r\n            }\r\n            this.toMailAddr = '';\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n        finally {\r\n\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async onPrintClick(event) {\r\n        \r\n        try {\r\n            event.stopImmediatePropagation();\r\n            this.spinnerService.start();\r\n            var html = await this.exportReportDetails('Print');\r\n            if (html != '' && html != null) {\r\n\r\n                var mywindow = window.open(document.URL, null, 'height=650,width=650,status=no,resizable=yes, scrollbars=yes, toolbar=no,location=center,menubar=no');\r\n                if (mywindow != null && mywindow != undefined) {\r\n                   \r\n                    mywindow.document.write('<html><head><title>' + 'Deliver - Delivery Report' + '</title>');\r\n                    mywindow.document.write('</head><body >');\r\n                    mywindow.document.write(html);\r\n                    mywindow.document.write('</body></html>');\r\n\r\n                    mywindow.document.close(); // necessary for IE >= 10\r\n                    mywindow.focus(); // necessary for IE >= 10*/                   \r\n                    return true;\r\n\r\n                } else {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please set allow pop-ups for this site in your browser' });\r\n                }\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n            return false;\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async onSendEventsMailClick(event, EventsData) {\r\n        try {\r\n\r\n            let Transid = EventsData[0].TRANSACTION_ID;\r\n            this.spinnerService.start();\r\n            let html: string = await this.exportsubReportDetails('Mail', Transid);\r\n            let toAddr: string = '';\r\n            this.growlMessage = [];\r\n            //let blob = new Blob([html], {\r\n            //    type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\r\n            //});\r\n            //saveAs(blob, \"DeliveryReport.xls\");  \r\n\r\n\r\n            if (html != '' && html != null) {\r\n                await this.commonService.sendEmbeddedEmail(this.deviceTokenEntry[TokenEntry_Enum.SystemId], 'Deliver Report', JSON.stringify(html), this.txtEventsMail, '', 'false', MailPriority.Normal.toString(), '')\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        let data = res.json() as AtParWebApiResponse<number>;\r\n                        this.statusCode = data.StatusCode;\r\n                    });\r\n\r\n                if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                    this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Mail has been sent' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_FROM_ADDRESS) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'From Address is Missing! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_TO_ADDRESS) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Please Enter To Email Address' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_SUBJECT) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Subject is Missing! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_BODY) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Body is Missing! Please contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_SMTP_SERVER_MISSING) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Email Server not configured! Please contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_SEND_FAILED) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Mail Not Sent. Please Try Again' });\r\n                }\r\n                else {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Error while sending mail' });\r\n                }\r\n            }\r\n\r\n            // if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n            this.isMailDialog = false;\r\n            this.toMailAddr = '';\r\n            //}\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex);\r\n        }\r\n        finally {\r\n\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async getOrgParamValue() {\r\n        try {\r\n            await this.commonService.getOrgGroupParamValue('DELIVER_SEND_SIGN_IN_MAIL', EnumApps.Deliver, this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID])\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<number>;\r\n                    this.statusCode = data.StatusCode;\r\n                    if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                        this.gSendEmailParamval = data.DataVariable.toString();\r\n                    }\r\n                });\r\n            if (this.statusCode != AtparStatusCodes.ATPAR_OK) {\r\n                return AtparStatusCodes.E_SERVERERROR;\r\n            }\r\n        } catch (ex) {\r\n            return AtparStatusCodes.E_SERVERERROR;\r\n        }\r\n        return AtparStatusCodes.ATPAR_OK;\r\n    }\r\n\r\n} \r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-delivery-report.component.ts","import { Component } from '@angular/core';\r\nimport { MT_DELV_EXCLUDE_LOC } from '../../app/Entities/MT_DELV_EXCLUDE_LOC';\r\nimport { ExcludeLocationsService } from '../../app/Deliver/deliver-exclude-locations.services';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { TokenEntry_Enum, ClientType, StatusType, BusinessType } from '../Shared/AtParEnums';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { SelectItem, Message } from './../components/common/api';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { ConfirmationService } from '../components/common/api';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n    template: require('./deliver-exclude-locations.component.html'),\r\n    providers: [ExcludeLocationsService, HttpService, AtParCommonService, AtParConstants, ConfirmationService]\r\n})\r\n\r\nexport class ExcludeLocationsComponent {\r\n    appID: number = 10;\r\n    lstBUnits: any[];\r\n    lstDBData: MT_DELV_EXCLUDE_LOC[];\r\n    lstgridfilterData: MT_DELV_EXCLUDE_LOC[];\r\n    deviceTokenEntry: string[] = [];\r\n    lstCheckedLocations: Array<MT_DELV_EXCLUDE_LOC>;\r\n    selectedSetID: string = \"\";\r\n    dataCheckedSorting: MT_DELV_EXCLUDE_LOC[] = [];\r\n    dataUncheckedSorting: Array<MT_DELV_EXCLUDE_LOC>;\r\n    sortedcheckedrec: MT_DELV_EXCLUDE_LOC[];\r\n    sorteduncheckedrec: MT_DELV_EXCLUDE_LOC[];\r\n    startIndex: number;\r\n    EndIndex: number;\r\n    selectedLocation: string = \"\";\r\n    isVisible: boolean = false;\r\n    growlMessage: Message[] = [];\r\n    lstLocations: any = [];\r\n    lstFilteredLocation: any;\r\n    blnsortbycolumn: boolean = true;\r\n    custom: string = \"custom\";\r\n    pazeSize: number;\r\n\r\n    public constructor(\r\n        private excludeLocationsService: ExcludeLocationsService,\r\n        private spinnerService: SpinnerService,\r\n        public atParCommonService: AtParCommonService,\r\n        private httpService: HttpService,\r\n        private atParConstant: AtParConstants,\r\n        private confirmationService: ConfirmationService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        try {\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n            this.lstCheckedLocations = new Array<MT_DELV_EXCLUDE_LOC>();\r\n            this.dataCheckedSorting = new Array<MT_DELV_EXCLUDE_LOC>();\r\n            this.dataUncheckedSorting = new Array<MT_DELV_EXCLUDE_LOC>();\r\n            this.lstFilteredLocation = new Array<MT_DELV_EXCLUDE_LOC>();\r\n            this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n            this.pazeSize = +this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n\r\n    selectedRow(values: any, event) {\r\n        try {\r\n            if (event == true) {\r\n                values.CHK_VALUE = 1;\r\n            }\r\n            else {\r\n                values.CHK_VALUE = 0;\r\n            }\r\n            for (var i = 0; i < this.lstCheckedLocations.length; i++) {\r\n                if (this.lstCheckedLocations[i].SETID === values.SETID) {\r\n                    var index = this.lstCheckedLocations.indexOf(this.lstCheckedLocations[i], 0)\r\n                    this.lstCheckedLocations.splice(index, 1);\r\n                }\r\n            }\r\n            this.lstCheckedLocations.push(values);\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"selectedRow\");\r\n        }\r\n    }\r\n\r\n    checkAll() {\r\n        try {\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n            if (this.lstgridfilterData != null && this.lstgridfilterData != undefined && this.lstgridfilterData.length > 0) {\r\n                if (this.EndIndex > this.lstgridfilterData.length) {\r\n                    this.EndIndex = this.lstgridfilterData.length;\r\n                }\r\n\r\n                for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                    this.lstgridfilterData[i].checkvalue = true;\r\n                    this.lstgridfilterData[i].CHK_VALUE = 1;\r\n                    this.lstCheckedLocations.push(this.lstgridfilterData[i]);\r\n                }\r\n            }\r\n            else {\r\n                if (this.EndIndex > this.lstDBData.length) {\r\n                    this.EndIndex = this.lstDBData.length;\r\n                }\r\n\r\n                for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                    this.lstDBData[i].checkvalue = true;\r\n                    this.lstDBData[i].CHK_VALUE = 1;\r\n                    this.lstCheckedLocations.push(this.lstDBData[i]);\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkAll\");\r\n        }\r\n    }\r\n\r\n    unCheckAll() {\r\n        try {\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n            if (this.lstgridfilterData != null && this.lstgridfilterData != undefined && this.lstgridfilterData.length > 0) {\r\n                if (this.EndIndex > this.lstgridfilterData.length) {\r\n                    this.EndIndex = this.lstgridfilterData.length;\r\n                }\r\n\r\n                for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                    this.lstgridfilterData[i].checkvalue = false;\r\n                    this.lstgridfilterData[i].CHK_VALUE = 0;\r\n                    this.lstCheckedLocations.push(this.lstgridfilterData[i]);\r\n                }\r\n            }\r\n            else {\r\n                if (this.EndIndex > this.lstDBData.length) {\r\n                    this.EndIndex = this.lstDBData.length;\r\n                }\r\n                for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                    this.lstDBData[i].checkvalue = false;\r\n                    this.lstDBData[i].CHK_VALUE = 0;\r\n                    this.lstCheckedLocations.push(this.lstDBData[i]);\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"unCheckAll\");\r\n        }\r\n    }\r\n\r\n    BindDataGrid() {\r\n        try {\r\n            var lstDBDataList;\r\n            this.growlMessage = [];\r\n            this.dataCheckedSorting = [];\r\n            this.dataUncheckedSorting = [];\r\n\r\n            for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                if (this.lstDBData[i].CHK_ALLOCATED == 1) {\r\n                    this.dataCheckedSorting.push(this.lstDBData[i]);\r\n                }\r\n                else {\r\n                    this.dataUncheckedSorting.push(this.lstDBData[i]);\r\n                }\r\n            }\r\n\r\n            if (this.lstDBData != null && this.lstDBData.length > 0) {\r\n                this.isVisible = true;\r\n            }\r\n            else {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"No Data Found\" });\r\n            }\r\n            this.spinnerService.stop();\r\n            this.lstCheckedLocations = new Array<MT_DELV_EXCLUDE_LOC>();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"BindDataGrid\");\r\n        }\r\n    }\r\n\r\n    filterdata(event) {\r\n        try {\r\n            this.lstgridfilterData = [];\r\n            this.lstgridfilterData = new Array<MT_DELV_EXCLUDE_LOC>();\r\n            this.lstgridfilterData = event;\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"filterdata\");\r\n        }\r\n    }\r\n\r\n    customSort(event) {\r\n        try {\r\n            var element = event;\r\n            this.lstDBData = [];\r\n            this.blnsortbycolumn = !this.blnsortbycolumn;\r\n\r\n            this.sortedcheckedrec = [];\r\n            this.sorteduncheckedrec = [];\r\n\r\n            this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] < b[element.field])\r\n                    return -1;\r\n                if (a[element.field] > b[element.field])\r\n                    return 1;\r\n                return 0;\r\n            });\r\n\r\n            this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] < b[element.field])\r\n                    return -1;\r\n                if (a[element.field] > b[element.field])\r\n                    return 1;\r\n                return 0;\r\n            });\r\n\r\n            if (this.blnsortbycolumn == false) {\r\n                this.lstDBData = [];\r\n                this.lstDBData = this.sortedcheckedrec.reverse().concat(this.sorteduncheckedrec.reverse());\r\n            }\r\n            else {\r\n                this.lstDBData = [];\r\n                this.lstDBData = this.sortedcheckedrec.concat(this.sorteduncheckedrec);\r\n            }\r\n            this.sortedcheckedrec = [];\r\n            this.sorteduncheckedrec = [];\r\n            this.lstCheckedLocations = new Array<MT_DELV_EXCLUDE_LOC>();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"customSort\");\r\n        }\r\n    }\r\n\r\n    async getAllLocations() {\r\n        this.isVisible = false;\r\n        this.lstgridfilterData = null;\r\n        this.growlMessage = [];\r\n        try {\r\n            this.lstDBData = new Array<MT_DELV_EXCLUDE_LOC>();\r\n            this.spinnerService.start();\r\n            await this.excludeLocationsService.getAllLocations(this.selectedSetID, this.selectedLocation, this.deviceTokenEntry)\r\n                .forEach((response) => {\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstDBData = [];\r\n                            this.lstDBData = response.DataList;\r\n                            this.lstLocations = [];\r\n                            for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                                this.lstLocations.push(this.lstDBData[i].SETID);\r\n                                if (this.lstDBData[i].CHK_ALLOCATED == 1) {\r\n                                    this.lstDBData[i].checkvalue = true;\r\n                                }\r\n                                else {\r\n                                    this.lstDBData[i].checkvalue = false;\r\n                                }\r\n                            }\r\n                            this.BindDataGrid();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.isVisible = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.isVisible = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.isVisible = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getAllLocations\");\r\n        }\r\n    }\r\n\r\n    async excludeLocatons() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.excludeLocationsService.excludeLocs(this.lstCheckedLocations, this.deviceTokenEntry)\r\n                .subscribe((response) => {\r\n                    this.growlMessage = [];\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Updated Successfully' });\r\n                            this.selectedLocation = \"\";\r\n                            this.selectedSetID = \"\";\r\n                            this.lstCheckedLocations = new Array<MT_DELV_EXCLUDE_LOC>();\r\n                            this.isVisible = false;\r\n                            this.spinnerService.stop();\r\n                            this.lstDBData = [];\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            this.isVisible = false;\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            this.isVisible = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"excludeLocatons\");\r\n        }\r\n    }\r\n\r\n    confirm() {\r\n        try {\r\n            this.growlMessage = [];\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure Do you want to Submit the Changes ?',\r\n                accept: () => {\r\n                    this.excludeLocatons();\r\n                }\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"confirm\");\r\n        }\r\n    }\r\n\r\n    async fillLocationsAuto(event) {\r\n        this.lstFilteredLocation = [];\r\n        let query = event.query;\r\n        this.lstFilteredLocation = this.filteredLoations(query, this.lstLocations)\r\n    }\r\n\r\n    filteredLoations(query, deslocatiions: any[]): any[] {\r\n        try {\r\n            let filtered : any[] = [];\r\n            if (query == \"%\") {\r\n                for (let i = 0; i < deslocatiions.length; i++) {\r\n                    let desLocValue = deslocatiions[i];\r\n                    filtered.push(desLocValue);\r\n                }\r\n            } else {\r\n                if (query.length >= 1) {\r\n                    for (let i = 0; i < deslocatiions.length; i++) {\r\n                        let desLocValue = deslocatiions[i];\r\n                        if (desLocValue.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n                            filtered.push(desLocValue);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return filtered;\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"filteredLoations\");\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.deviceTokenEntry = null;\r\n        this.lstBUnits = null;\r\n        this.lstFilteredLocation = null;\r\n        this.lstCheckedLocations = null;\r\n        this.lstDBData = null;\r\n        this.growlMessage = null;\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n        this.appID = -1;\r\n        this.selectedLocation = null;\r\n    }\r\n} \r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-exclude-locations.component.ts","import { Component, CUSTOM_ELEMENTS_SCHEMA, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { Http, Response } from '@angular/http';\r\nimport { HttpServiceUtility } from '../shared/atparhttputilityservice';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { CHART_DATASET } from '../../app/Entities/CHART_DATASET';\r\nimport { MT_ATPAR_ORG_GROUP_BUNITS } from '../../app/Entities/MT_ATPAR_ORG_GROUP_BUNITS';\r\nimport { BusinessType } from '../Shared/AtParEnums';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { SelectItem } from '../components/common/api';\r\nimport { TokenEntry_Enum, ClientType, MailPriority } from '../Shared/AtParEnums';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { StatusType, EnumApps } from '../Shared/AtParEnums';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { DeliverProductivityService } from '../Deliver/deliver-productivity-report.component.service';\r\nimport { Message } from '../components/common/api';\r\nimport { List, Enumerable } from 'linqts';\r\nimport { asEnumerable } from 'linq-es5';\r\nimport { SSL_CONFIG_DETAILS } from '../Entities/SSL_CONFIG_DETAILS';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { MT_ATPAR_USER } from '../../app/Entities/mt_atpar_user';\r\nimport { VM_DELV_PROD } from '../../app/Entities/VM_DELV_PROD';\r\nimport { VM_TABLE_AVG } from '../../app/Entities/VM_TABLE_AVG';\r\nimport { VM_RECVDELV_EMPLOYEE } from '../../app/Entities/VM_RECVDELV_EMPLOYEE';\r\nimport { VM_CYCLETIME_DETAILS } from '../../app/Entities/VM_CYCLETIME_DETAILS';\r\nimport { VM_RESULTS } from '../../app/Entities/VM_RESULTS';\r\nimport { saveAs } from 'file-saver';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./deliver-productivity-report.component.html'),\r\n    providers: [AtParCommonService, AtParConstants, DeliverProductivityService]\r\n})\r\n\r\nexport class ProductivityReportComponent {\r\n    deviceTokenEntry: string[] = [];\r\n    recordsPerPageSize: number;\r\n    growlMessage: Message[] = [];\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    selectedOrgGroupId: string = \"\";\r\n    selectedDropDownUserId: string[] = [];\r\n    UserId: string[] = [];\r\n    orgGrpId: string = \"\";\r\n    lstOrgGroups: SelectItem[] = [];\r\n    showGrid: boolean = false;\r\n    lstUsers: SelectItem[] = [];\r\n    lstRepType: SelectItem[] = [];\r\n    lstStartEvent: SelectItem[] = [];\r\n    lstEndEvent: SelectItem[] = [];\r\n    lstFromTime: SelectItem[] = [];\r\n    lstToTime: SelectItem[] = [];\r\n    lstInterval: SelectItem[] = [];\r\n    selectedReportType: string = \"\";\r\n    selectedStartEvent: string = \"\";\r\n    selectedEndEvent: string = \"\";\r\n    startEvent: string = \"\";\r\n    endEvent: string = \"\";\r\n    selectedFromTime: string = \"\";\r\n    selectedToTime: string = \"\";\r\n    selectedInterval: number;\r\n    blnStartEndEvents: boolean = false;\r\n    blnFromToTimeInterval: boolean = false;\r\n    startIndex: number;\r\n    EndIndex: number;\r\n    blnShowOrgGroupDD: boolean = false;\r\n    orgGroupIDForDBUpdate: string;\r\n    fromDate: Date;\r\n    toDate: Date;\r\n    frmDate: Date;\r\n    date1: Date;\r\n    date2: Date;\r\n    minDateValue1: Date = new Date();\r\n    minDateValue2: Date;\r\n    defDateRange: number = 0;\r\n    statusCode: number = -1;\r\n    lstItemIds: any = [];\r\n    selectedItemId: string = \"\";\r\n    lstItemIdsData: any = [];\r\n    lstDBData: any = [];\r\n    lstDBTableData: any = [];\r\n    data: any = [];\r\n    dataAvg: any = [];\r\n    dataForRecv1: any = [];\r\n    dataForRecv2: any = [];\r\n    dataForRecv3: any = [];\r\n    dataForRecv4: any = [];\r\n    dataForRecv5: any = [];\r\n    dataForSummaryRecv: any = [];\r\n    dataForDelv1: any = [];\r\n    dataForDelv2: any = [];\r\n    dataForDelv3: any = [];\r\n    dataForDelv4: any = [];\r\n    dataForDelv5: any = [];\r\n    dataForSummaryDeliver: any = [];\r\n    dataForDock1: any = [];\r\n    dataForDock2: any = [];\r\n    dataForDock3: any = [];\r\n    dataForDock4: any = [];\r\n    dataForDock5: any = [];\r\n    dataForSummaryDock: any = [];\r\n    dataSetlabel: string[] = [];\r\n    dataSetbgcolor: string[] = [];\r\n    dataSetbordercolor: string[] = [];\r\n    dataSetdata: number[] = [];\r\n    barColors: string[] = [];\r\n    label: string[] = [];\r\n    labelForAvg: string[] = [];\r\n    chartDataSet: CHART_DATASET[] = [];\r\n    chartDataSetD1: CHART_DATASET[] = [];\r\n    chartDataSetD2: CHART_DATASET[] = [];\r\n    chartDataSetD3: CHART_DATASET[] = [];\r\n    chartDataSetD4: CHART_DATASET[] = [];\r\n    chartDataSetD5: CHART_DATASET[] = [];\r\n    isMailDialog: boolean = false;\r\n    toMailAddr: string = '';\r\n    ipAddress: string;\r\n    gstrProtocal: string;\r\n    gstrServerName: string;\r\n    gstrPortNo: string;\r\n    tdExports: boolean = false;\r\n    bunitFlag: boolean = false;\r\n    item: string;\r\n    bUnit: string;\r\n    cartId: string;\r\n    updateDateTime: any;\r\n    orgGroupId: string;\r\n    activeTab: string;\r\n    ReceivedDataSet: Array<any> = [];\r\n    DeliveredDataSet: Array<any> = [];\r\n    IntHrsParts: number = 0;\r\n    IntNoofHrs: number = 0;\r\n    IntRecPkgCnt: number = 0;\r\n    IntDelPkgCnt: number = 0;\r\n    pacakageSum: number = 0;\r\n    pZeroTimeHrs: number = 0;\r\n    lstChartData: VM_DELV_PROD[] = [];\r\n    option: any;\r\n    optionForAvg: any;\r\n    optionForRecv1: any;\r\n    optionForRecv2: any;\r\n    optionForRecv3: any;\r\n    optionForRecv4: any;\r\n    optionForRecv5: any;\r\n    optionForSummaryRecv: any;\r\n    optionForSummaryDeliver: any;\r\n    optionForSummaryDock: any;\r\n    optionForDeliver1: any;\r\n    optionForDeliver2: any;\r\n    optionForDeliver3: any;\r\n    optionForDeliver4: any;\r\n    optionForDeliver5: any;\r\n    optionForDock1: any;\r\n    optionForDock2: any;\r\n    optionForDock3: any;\r\n    optionForDock4: any;\r\n    optionForDock5: any;\r\n    lstAvgChartData: VM_TABLE_AVG[] = [];\r\n    chartDataSetForRecvLine: CHART_DATASET[] = [];\r\n    chartDataSetForRecvGraph1: CHART_DATASET[] = [];\r\n    chartDataSetForRecvGraph2: CHART_DATASET[] = [];\r\n    chartDataSetForRecvGraph3: CHART_DATASET[] = [];\r\n    chartDataSetForRecvGraph4: CHART_DATASET[] = [];\r\n    chartDataSetForRecvGraph5: CHART_DATASET[] = [];\r\n    chartDataSetForDeliverGraph1: CHART_DATASET[] = [];\r\n    chartDataSetForDeliverGraph2: CHART_DATASET[] = [];\r\n    chartDataSetForDeliverGraph3: CHART_DATASET[] = [];\r\n    chartDataSetForDeliverGraph4: CHART_DATASET[] = [];\r\n    chartDataSetForDeliverGraph5: CHART_DATASET[] = [];\r\n    chartDataSetForDockGraph1: CHART_DATASET[] = [];\r\n    chartDataSetForDockGraph2: CHART_DATASET[] = [];\r\n    chartDataSetForDockGraph3: CHART_DATASET[] = [];\r\n    chartDataSetForDockGraph4: CHART_DATASET[] = [];\r\n    chartDataSetForDockGraph5: CHART_DATASET[] = [];\r\n    lableForReceive: any[] = [];\r\n    lstDataForRecv = [];\r\n    chartDataSetForDelverLine: CHART_DATASET[] = [];\r\n    lableForDeliver: any[] = [];\r\n    lstDataForDeliver = [];\r\n    lstDataForDock = [];\r\n    chartDataSetForDock: CHART_DATASET[] = [];\r\n    labelForDock = [];\r\n    lstDataForSummaryRecv = [];\r\n    chartDataSetForSummaryRecv: CHART_DATASET[] = [];\r\n    labelForSummaryRecv = [];\r\n    lstDataForSummaryDeliver = [];\r\n    chartDataSetForSummaryDeliver: CHART_DATASET[] = [];\r\n    labelForSummaryDeliver = [];\r\n    chartDataSetForSummaryDock: CHART_DATASET[] = [];\r\n    labelForSummaryDock = [];\r\n    DateDisplay: string = \"\";\r\n    lstDataForSummaryDock = [];\r\n    lstTransactiondata: any[] = [];\r\n    lstEventDetailsData: any[] = [];\r\n    lstTransactionFilterdata: any[] = [];\r\n    lstFinalCycleData: VM_CYCLETIME_DETAILS[] = [];\r\n    lstCycleHourDetails = [];\r\n    showGridCycleTime: boolean = false;\r\n    Count: string = \"\";\r\n    AVG: string = \"\";\r\n    StDev: string = \"\";\r\n    Max: string = \"\";\r\n    Min: string = \"\";\r\n    Results: VM_RESULTS[] = [];\r\n    lstTable1Data: any[] = [];\r\n    lstTable2Data: any[] = [];\r\n    randomColors: string[] = [];\r\n    dateString: string[] = [];\r\n    tabSelection: any;\r\n    blnGraph1: boolean = false;\r\n    blnGraph2: boolean = false;\r\n    blnGraph3: boolean = false;\r\n    blnGraph4: boolean = false;\r\n    blnGraph5: boolean = false;\r\n\r\n    constructor(private httpService: HttpService, private _http: Http,\r\n        private spinnerService: SpinnerService,\r\n        private commonService: AtParCommonService,\r\n        private atParConstant: AtParConstants,\r\n        private DeliverProductivityService: DeliverProductivityService,\r\n        private route: ActivatedRoute\r\n    ) {\r\n\r\n    }\r\n    async ngOnInit() {\r\n        this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n        this.recordsPerPageSize = + this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n        this.bindOrgGroups();\r\n        this.lstRepType = [];\r\n        this.lstRepType.push({ label: \"Select One\", value: \"\" }, { label: \"Productivity\", value: \"1\" }, { label: \"Cycle Time\", value: \"2\" });\r\n        this.lstStartEvent = [];\r\n        this.lstStartEvent.push({ label: \"Select One\", value: \"\" }, { label: \"Parcel Count\", value: \"-1\" }, { label: \"Received\", value: \"-2\" }, { label: \"Download\", value: \"1\" }, { label: \"Picked\", value: \"20\" }, { label: \"Load\", value: \"30\" }, { label: \"UnLoad\", value: \"40\" }, { label: \"Delivered\", value: \"50\" })\r\n        this.lstEndEvent = [];\r\n        this.lstEndEvent.push({ label: \"Select One\", value: \"\" }, { label: \"Parcel Count\", value: \"-1\" }, { label: \"Received\", value: \"-2\" }, { label: \"Download\", value: \"1\" }, { label: \"Picked\", value: \"20\" }, { label: \"Load\", value: \"30\" }, { label: \"UnLoad\", value: \"40\" }, { label: \"Delivered\", value: \"50\" })\r\n\r\n        this.lstFromTime = [];\r\n        this.lstFromTime.push({ label: \"Select One\", value: \"\" }, { label: \"00:00\", value: \"00:00\" }, { label: \"00:30\", value: \"00:30\" }, { label: \"01:00\", value: \"01:00\" }, { label: \"01:30\", value: \"01:30\" }, { label: \"02:00\", value: \"02:00\" }, { label: \"02:30\", value: \"02:30\" }, { label: \"03:00\", value: \"03:00\" }, { label: \"03:30\", value: \"03:30\" }, { label: \"04:00\", value: \"04:00\" }, { label: \"04:30\", value: \"04:30\" }, { label: \"05:00\", value: \"05:00\" }, { label: \"05:30\", value: \"05:30\" }, { label: \"06:00\", value: \"06:00\" }, { label: \"06:30\", value: \"06:30\" }, { label: \"07:00\", value: \"07:00\" }, { label: \"07:30\", value: \"07:30\" }, { label: \"08:00\", value: \"08:00\" }, { label: \"08:30\", value: \"08:30\" }, { label: \"09:00\", value: \"09:00\" }, { label: \"09:30\", value: \"09:30\" }, { label: \"10:00\", value: \"10:00\" }, { label: \"10:30\", value: \"10:30\" }, { label: \"11:00\", value: \"11:00\" }, { label: \"11:30\", value: \"11:30\" }, { label: \"12:00\", value: \"12:00\" }, { label: \"12:30\", value: \"12:30\" }, { label: \"13:00\", value: \"13:00\" }, { label: \"13:30\", value: \"13:30\" }, { label: \"14:00\", value: \"14:00\" }, { label: \"14:30\", value: \"14:30\" }, { label: \"15:00\", value: \"15:00\" }, { label: \"15:30\", value: \"15:30\" }, { label: \"16:00\", value: \"16:00\" }, { label: \"16:30\", value: \"16:30\" }, { label: \"17:00\", value: \"17:00\" }, { label: \"17:30\", value: \"17:30\" }, { label: \"18:00\", value: \"18:00\" }, { label: \"18:30\", value: \"18:30\" }, { label: \"19:00\", value: \"19:00\" }, { label: \"19:30\", value: \"19:30\" }, { label: \"20:00\", value: \"20:00\" }, { label: \"20:30\", value: \"20:30\" }, { label: \"21:00\", value: \"21:00\" }, { label: \"21:30\", value: \"21:30\" }, { label: \"22:00\", value: \"22:00\" }, { label: \"22:30\", value: \"22:30\" }, { label: \"23:00\", value: \"23:00\" }, { label: \"23:30\", value: \"23:30\" })\r\n        this.lstToTime = [];\r\n        this.lstToTime.push({ label: \"Select One\", value: \"\" }, { label: \"00:00\", value: \"00:00\" }, { label: \"00:30\", value: \"00:30\" }, { label: \"01:00\", value: \"01:00\" }, { label: \"01:30\", value: \"01:30\" }, { label: \"02:00\", value: \"02:00\" }, { label: \"02:30\", value: \"02:30\" }, { label: \"03:00\", value: \"03:00\" }, { label: \"03:30\", value: \"03:30\" }, { label: \"04:00\", value: \"04:00\" }, { label: \"04:30\", value: \"04:30\" }, { label: \"05:00\", value: \"05:00\" }, { label: \"05:30\", value: \"05:30\" }, { label: \"06:00\", value: \"06:00\" }, { label: \"06:30\", value: \"06:30\" }, { label: \"07:00\", value: \"07:00\" }, { label: \"07:30\", value: \"07:30\" }, { label: \"08:00\", value: \"08:00\" }, { label: \"08:30\", value: \"08:30\" }, { label: \"09:00\", value: \"09:00\" }, { label: \"09:30\", value: \"09:30\" }, { label: \"10:00\", value: \"10:00\" }, { label: \"10:30\", value: \"10:30\" }, { label: \"11:00\", value: \"11:00\" }, { label: \"11:30\", value: \"11:30\" }, { label: \"12:00\", value: \"12:00\" }, { label: \"12:30\", value: \"12:30\" }, { label: \"13:00\", value: \"13:00\" }, { label: \"13:30\", value: \"13:30\" }, { label: \"14:00\", value: \"14:00\" }, { label: \"14:30\", value: \"14:30\" }, { label: \"15:00\", value: \"15:00\" }, { label: \"15:30\", value: \"15:30\" }, { label: \"16:00\", value: \"16:00\" }, { label: \"16:30\", value: \"16:30\" }, { label: \"17:00\", value: \"17:00\" }, { label: \"17:30\", value: \"17:30\" }, { label: \"18:00\", value: \"18:00\" }, { label: \"18:30\", value: \"18:30\" }, { label: \"19:00\", value: \"19:00\" }, { label: \"19:30\", value: \"19:30\" }, { label: \"20:00\", value: \"20:00\" }, { label: \"20:30\", value: \"20:30\" }, { label: \"21:00\", value: \"21:00\" }, { label: \"21:30\", value: \"21:30\" }, { label: \"22:00\", value: \"22:00\" }, { label: \"22:30\", value: \"22:30\" }, { label: \"23:00\", value: \"23:00\" }, { label: \"23:30\", value: \"23:30\" })\r\n\r\n        this.lstInterval = [];\r\n        this.lstInterval.push({ label: \"Select One\", value: \"0\" }, { label: \"15\", value: \"15\" }, { label: \"30\", value: \"30\" }, { label: \"45\", value: \"45\" }, { label: \"60\", value: \"60\" })\r\n\r\n        this.defDateRange = 4;\r\n        this.fromDate = new Date();\r\n        this.fromDate = await this.addDays(this.fromDate, this.defDateRange);\r\n        this.toDate = new Date();\r\n\r\n        debugger;\r\n        this.route.queryParams.subscribe(params => {\r\n            this.item = params[\"p2value\"];\r\n            this.orgGroupId = params[\"p3value\"];\r\n            this.updateDateTime = params[\"p4value\"];\r\n            this.cartId = params[\"p5value\"];\r\n            this.bUnit = params[\"p6value\"];\r\n        });\r\n\r\n\r\n    }\r\n    async bindOrgGroups() {\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.commonService.getUserOrgGroups(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n                            if (this.orgGroupData.length == 1) {\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.orgGrpId = this.orgGroupData[0].ORG_GROUP_ID + \" - \" + this.orgGroupData[0].ORG_GROUP_NAME;\r\n                                this.bindUsersList();\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.blnShowOrgGroupDD = true;\r\n                                this.lstUsers = [];\r\n                                this.lstUsers.push({ label: \"ALL\", value: \"ALL\" })\r\n                                this.lstOrgGroups.push({ label: \"Select One\", value: \"\" })\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID !== \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + \" - \" + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n                                this.selectedDropDownUserId = [];\r\n                                this.selectedDropDownUserId.push(\"ALL\");\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            }\r\n\r\n\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindOrgGroups\");\r\n        }\r\n    }\r\n\r\n    async bindUsersList() {\r\n        this.spinnerService.start();\r\n        try {\r\n            if (this.blnShowOrgGroupLabel == true) {\r\n                this.orgGroupIDForDBUpdate = this.orgGrpId.split(\"-\")[0];\r\n            }\r\n            else {\r\n                this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n            }\r\n            this.lstUsers = [];\r\n            this.lstUsers.push({ label: \"ALL\", value: \"ALL\" });\r\n\r\n            await this.commonService.getHeirarchyUsersList(EnumApps.Deliver, this.deviceTokenEntry[TokenEntry_Enum.UserID], this.orgGroupIDForDBUpdate).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_USER>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            for (let i = 0; i <= data.DataDictionary[\"pDSUserList\"][\"Table1\"].length - 1; i++) {\r\n                                this.lstUsers.push({\r\n                                    label: data.DataDictionary[\"pDSUserList\"][\"Table1\"][i].FULLNAME,\r\n                                    value: data.DataDictionary[\"pDSUserList\"][\"Table1\"][i].USER_ID\r\n                                })\r\n                            }\r\n                            this.selectedDropDownUserId = [];\r\n                            this.selectedDropDownUserId.push(\"ALL\");\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindUsersList\");\r\n        }\r\n    }\r\n\r\n    async ddlOrgGrpIdChanged() {\r\n        this.growlMessage = [];\r\n        this.showGrid = false;\r\n        if (this.selectedOrgGroupId === \"\") {\r\n            this.lstUsers = [];\r\n            this.orgGroupIDForDBUpdate = \"\";\r\n            this.lstUsers.push({ label: \"ALL\", value: \"ALL\" })\r\n            return;\r\n        }\r\n\r\n        try {\r\n\r\n            this.bindUsersList();\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ddlOrgGrpIdChanged\");\r\n        }\r\n    }\r\n\r\n    async ddlRepTypeChanged() {\r\n        if (this.selectedReportType === \"1\") {\r\n            this.blnStartEndEvents = true;\r\n            this.blnFromToTimeInterval = false;\r\n        }\r\n        else if (this.selectedReportType === \"2\") {\r\n            this.blnStartEndEvents = false;\r\n            this.blnFromToTimeInterval = true;\r\n        }\r\n        else {\r\n            this.blnStartEndEvents = false;\r\n            this.blnFromToTimeInterval = false;\r\n        }\r\n    }\r\n\r\n\r\n    addDays(theDate, days) {\r\n        return new Date(theDate.getTime() - days * 24 * 60 * 60 * 1000);\r\n    }\r\n\r\n    onfocusFromCalendar(e) {\r\n        localStorage.removeItem(\"FromDate\");\r\n        this.date1 = null;\r\n    }\r\n\r\n    onfocusToCalendar(e) {\r\n        this.date2 = null;\r\n        if (this.date1 == null) {\r\n            this.minDateValue2 = new Date();\r\n        } else {\r\n            this.minDateValue2 = this.date1;\r\n        }\r\n    }\r\n\r\n    async onGoClick() {\r\n        let isValidate: boolean;\r\n        try {\r\n            this.showGrid = false;\r\n            //this.lstCaseInfo = [];\r\n            isValidate = await this.validateSearchFields();\r\n            this.spinnerService.start();\r\n            if (isValidate) {\r\n                //await this.BindGrid();\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"onGoClick\");\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    validateSearchFields() {\r\n        try {\r\n\r\n            if (this.fromDate == null || this.fromDate.toString() == '' || this.toDate == null || this.toDate.toString() == '') {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please select a valid date range' });\r\n                return false;\r\n            }\r\n            else if (Date.parse(this.fromDate.toString()) && Date.parse(this.toDate.toString())) {\r\n                if (Date.parse(this.convert(this.fromDate)) > Date.parse(this.convert(this.toDate))) {\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"To Date should be greater than From Date\" });\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please enter valid Dates' });\r\n                return false;\r\n            }\r\n            return true;\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"validateSearchFields\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    convert(str) {\r\n        var date = new Date(str),\r\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n            day = (\"0\" + date.getDate()).slice(-2);\r\n        return [mnth, day , date.getFullYear()].join(\"/\");\r\n    }\r\n\r\n    async bindGrid() {\r\n\r\n        this.showGridCycleTime = false;\r\n        this.tdExports = false;\r\n        if (this.orgGroupIDForDBUpdate === \"\" || this.orgGroupIDForDBUpdate == undefined) {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select OrgGrp ID\" });\r\n            return;\r\n        }\r\n        if (this.selectedReportType === \"\" || this.selectedReportType == undefined) {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Report type\" });\r\n            return;\r\n        }\r\n        if (this.selectedDropDownUserId == undefined || this.selectedDropDownUserId.length == 0) {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select User ID\" });\r\n            return;\r\n        }\r\n\r\n        if (this.selectedDropDownUserId.length != 1) {\r\n            if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"ALL User selection is not considerd when Multiple users Selected\" });\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n            this.UserId = [];\r\n            for (let k = 0; k <= this.lstUsers.length - 1; k++) {\r\n                if (this.lstUsers[k].value !== \"ALL\") {\r\n                    this.UserId.push(this.lstUsers[k].value);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        if (this.blnShowOrgGroupDD == true) {\r\n            this.orgGroupIDForDBUpdate = this.selectedOrgGroupId.split(\"-\")[0].trim();\r\n        }\r\n        else {\r\n            this.orgGroupIDForDBUpdate = this.orgGrpId.split(\"-\")[0].trim();\r\n        }\r\n        if (this.selectedStartEvent === \"-1\" || this.selectedStartEvent === \"-2\") {\r\n            this.startEvent = \"0\";\r\n        }\r\n        else {\r\n            this.startEvent = this.selectedStartEvent;\r\n        }\r\n        if (this.selectedEndEvent === \"-1\" || this.selectedEndEvent === \"-2\") {\r\n            this.endEvent = \"30\";\r\n        }\r\n        else {\r\n            this.endEvent = this.selectedEndEvent;\r\n        }\r\n\r\n        if (this.selectedReportType === \"1\") {\r\n            if (this.selectedFromTime === \"\" || this.selectedFromTime == undefined) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select From Time\" });\r\n                return;\r\n            }\r\n            if (this.selectedToTime === \"\" || this.selectedToTime == undefined) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select To Time\" });\r\n                return;\r\n            }\r\n\r\n            let startTime = this.selectedFromTime.split(\":\");\r\n            let endTime = this.selectedToTime.split(\":\");\r\n\r\n            var startDate = new Date(0, 0, 0, parseInt(startTime[0]), parseInt(startTime[1]), 0);\r\n            var endDate = new Date(0, 0, 0, parseInt(endTime[0]), parseInt(endTime[1]), 0);\r\n\r\n            var difference = startDate.getTime() - endDate.getTime();\r\n            if (difference >= 0) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select To Time greater than from Time\" });\r\n                return;\r\n            }\r\n\r\n            if (this.selectedInterval == null || this.selectedInterval == undefined) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Interval\" });\r\n                return;\r\n            }\r\n\r\n            let today = new Date().getDate();\r\n\r\n            if (this.fromDate.getDate() > today) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select From Date less than or equal to current date\" });\r\n                return;\r\n            }\r\n\r\n            if (this.toDate.getDate() > today) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select To Date less than or equal to current date\" });\r\n                return;\r\n            }\r\n\r\n            if (this.fromDate.getDate() > this.toDate.getDate()) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Valid Date Range ( mm/dd/yyyy)\" });\r\n                return;\r\n            }\r\n            let count = this.toDate.getDate() - this.fromDate.getDate();\r\n            if (count > 4) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Duration in days should not exceed 5 days\" });\r\n                return;\r\n            }\r\n\r\n            \r\n            this.randomColors = [];\r\n            if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                for (let color = 0; color <= this.UserId.length - 1; color++) {\r\n                    let randmColor = this.getRandomColor();\r\n                    this.randomColors.push(randmColor);\r\n                }\r\n            }\r\n            else {\r\n                for (let color = 0; color <= this.selectedDropDownUserId.length - 1; color++) {\r\n                    let randmColor = this.getRandomColor();\r\n                    this.randomColors.push(randmColor);\r\n                }\r\n            }\r\n\r\n            this.BindDayCharts();\r\n\r\n        }\r\n        else {\r\n            if (this.selectedStartEvent === \"\" || this.selectedStartEvent == undefined) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Start Event\" });\r\n                return;\r\n            }\r\n            if (this.selectedEndEvent === \"\" || this.selectedEndEvent == undefined) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select End Event\" });\r\n                return;\r\n            }\r\n            if (this.fromDate.getDate() > this.toDate.getDate()) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Valid Date Range ( mm/dd/yyyy)\" });\r\n                return;\r\n            }\r\n            let count = this.toDate.getDate() - this.fromDate.getDate();\r\n            if (count > 4) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Duration in days should not exceed 5 days\" });\r\n                return;\r\n            }\r\n            let blnstartendevent: boolean = false;\r\n            if (this.selectedStartEvent === \"-1\" && this.selectedEndEvent === \"-2\") {\r\n                blnstartendevent = true;\r\n            }\r\n            if (blnstartendevent == false) {\r\n                if (parseInt(this.selectedStartEvent) >= parseInt(this.selectedEndEvent)) {\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select End Event greater than Start Event\" });\r\n                    return;\r\n                }\r\n            }\r\n\r\n\r\n            this.showGrid = false;\r\n            this.BindCycleTimeReport();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    async BindDayCharts() {\r\n        this.spinnerService.start();\r\n        this.growlMessage = [];\r\n        let frmDate = this.convert(this.fromDate);\r\n        let dt = this.convert(this.fromDate);\r\n        this.frmDate = new Date(dt);\r\n        let todate = this.convert(this.toDate);\r\n        this.IntRecPkgCnt = 0;\r\n        this.IntDelPkgCnt = 0;\r\n        let userString: string = \"\";\r\n        for (let a = 0; a <= this.selectedDropDownUserId.length - 1; a++) {\r\n            userString = userString + this.selectedDropDownUserId[a] + \",\";\r\n        }\r\n        userString = userString.replace(/,\\s*$/, \"\");\r\n        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n            if (this.lstUsers.length == 1) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"No Data Found\" });\r\n                this.spinnerService.stop();\r\n                return;\r\n            }\r\n        }\r\n        this.DeliverProductivityService.GetProductivityReport(this.orgGroupIDForDBUpdate, frmDate, todate, userString, this.selectedInterval, this.selectedFromTime, this.selectedToTime).catch(this.httpService.handleError).then((res: Response) => {\r\n            let data = res.json() as AtParWebApiResponse<any>;\r\n\r\n            switch (data.StatType) {\r\n                case StatusType.Success: {\r\n                    this.showGrid = true;\r\n                    this.lstChartData = [];\r\n                    this.lstAvgChartData = [];\r\n                    if (data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"].length > 0) {\r\n                        this.lstTable1Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"];\r\n                        this.PopulateGraphsForReceive(0, data, 0, \"Receiving\");\r\n                    }\r\n                    if (data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"].length > 0) {\r\n                        this.lstTable2Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"];\r\n                        this.PopulateGraphsForDeliver(0, data, 0, \"Deliver\");\r\n                    }\r\n                    if (data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"].length > 0 || data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"].length > 0) {\r\n                        this.BindSummaryChartsRecv(data);\r\n                        this.BindSummaryChartsDeliver(data);\r\n                        this.PopulateEmpProdColumnChart(data);\r\n                        this.PopulateDockGraph(data, 0);\r\n                    }\r\n                    this.tdExports = true;\r\n                    this.spinnerService.stop();\r\n                    break;\r\n                }\r\n                case StatusType.Warn: {\r\n                    this.showGrid = false;\r\n                    this.tdExports = true;\r\n                    this.showGridCycleTime = false;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                    this.spinnerService.stop();\r\n                    break;\r\n                }\r\n                case StatusType.Error: {\r\n                    this.showGrid = false;\r\n                    this.tdExports = true;\r\n                    this.showGridCycleTime = false;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                    this.spinnerService.stop();\r\n                    break;\r\n                }\r\n                case StatusType.Custom: {\r\n                    this.showGrid = false;\r\n                    this.tdExports = true;\r\n                    this.showGridCycleTime = false;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                    this.spinnerService.stop();\r\n                    break;\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    PopulateEmpProdColumnChart(data) {\r\n        let _IntPkgCount: number = 0;\r\n        let _dblZeroWHours: number = 0;\r\n        var lstItem: VM_DELV_PROD;\r\n        let frmDate: Date = this.frmDate;\r\n        let Curdate: Date = frmDate;\r\n        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n            for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n                let dtfromdate = this.fromDate\r\n                let chartDate = new Date(dtfromdate);\r\n                let dttodate = this.toDate\r\n                let datediff = new Date(this.toDate).getDate() - new Date(this.fromDate).getDate();\r\n                let UserName: string = this.UserId[i];\r\n                let AvgPack: number = 0\r\n                let AvgTime: number = 0\r\n                let daycount: number = 0\r\n                if (UserName !== \"ALL\") {\r\n                    let x = 0;\r\n                    while (x <= datediff) {\r\n                        daycount += 1;\r\n                        let currentDate = this.convert(chartDate);\r\n                        this.GetProductivityReportValues(data, UserName, currentDate);\r\n                        lstItem = new VM_DELV_PROD();\r\n                        lstItem.PACKAGE_COUNT = this.pacakageSum;\r\n                        lstItem.UserId = UserName;\r\n                        lstItem.TIME = Math.ceil(this.pZeroTimeHrs * 10) / 10;\r\n                        lstItem.TRANS_DATE = Curdate.toString();\r\n                        lstItem.Day = \"D\" + daycount.toString();\r\n                        this.lstChartData.push(lstItem);\r\n                        chartDate = new Date(chartDate.setDate(chartDate.getDate() + 1));\r\n                        x = x + 1;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n                let dtfromdate = this.frmDate\r\n                let chartDate = new Date(dtfromdate);\r\n                let dttodate = this.toDate\r\n                let datediff = new Date(this.toDate).getDate() - new Date(this.fromDate).getDate();\r\n                let UserName: string = this.selectedDropDownUserId[i];\r\n                let AvgPack: number = 0\r\n                let AvgTime: number = 0\r\n                let daycount: number = 0\r\n                if (UserName !== \"ALL\") {\r\n                    let z = 0;\r\n                    while (z <= datediff) {\r\n                        daycount += 1;\r\n                        let currentDate = this.convert(chartDate);\r\n                        this.GetProductivityReportValues(data, UserName, currentDate);\r\n                        lstItem = new VM_DELV_PROD();\r\n                        lstItem.PACKAGE_COUNT = this.pacakageSum;\r\n                        lstItem.UserId = UserName;\r\n                        lstItem.TIME = this.pZeroTimeHrs;\r\n                        lstItem.TRANS_DATE = chartDate.toString();\r\n                        lstItem.Day = \"D\" + daycount.toString();\r\n                        this.lstChartData.push(lstItem);\r\n                        chartDate = new Date(chartDate.setDate(chartDate.getDate() + 1));\r\n                        z = z + 1;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        console.log(this.lstChartData);\r\n        this.barColors = [\"#FFB552\", \"#FFB552\"];\r\n        this.dataSetbgcolor = [];\r\n        this.dataSetdata = [];\r\n        this.dataSetbordercolor = [];\r\n        var dataPackageCount = [];\r\n        var dataTimePackage = [];\r\n        var dataForInsideTable = [];\r\n        var dataPackageCountD1 = [];\r\n        var dataTimePackageD1 = [];\r\n        var dataPackageCountD2 = [];\r\n        var dataTimePackageD2 = [];\r\n        var dataPackageCountD3 = [];\r\n        var dataTimePackageD3 = [];\r\n        var dataPackageCountD4 = [];\r\n        var dataTimePackageD4 = [];\r\n        var dataPackageCountD5 = [];\r\n        var dataTimePackageD5 = [];\r\n        this.label = [];\r\n        for (let i = 0; i <= this.lstChartData.length - 1; i++) {\r\n\r\n            this.label.push(this.lstChartData[i].UserId);\r\n            dataPackageCount.push(this.lstChartData[i].PACKAGE_COUNT);\r\n            dataTimePackage.push(this.lstChartData[i].TIME);\r\n        }\r\n        let distinctUsersArray: any[] = [];\r\n        distinctUsersArray = asEnumerable(this.label).Distinct().ToArray();\r\n\r\n\r\n\r\n        for (let cdata = 0; cdata <= distinctUsersArray.length - 1; cdata++) {\r\n            let listOfseparateUsers: any[] = [];\r\n            let dataPackageCount: any[] = [];\r\n            listOfseparateUsers = asEnumerable(this.lstChartData).Where(x => x.UserId == distinctUsersArray[cdata]).ToArray();\r\n            if (listOfseparateUsers.length > 0) {\r\n                if (listOfseparateUsers[0] != undefined) {\r\n                    dataPackageCountD1.push(listOfseparateUsers[0].PACKAGE_COUNT);\r\n                    dataTimePackageD1.push(listOfseparateUsers[0].TIME);\r\n                }\r\n                if (listOfseparateUsers[1] != undefined) {\r\n                    dataPackageCountD2.push(listOfseparateUsers[1].PACKAGE_COUNT);\r\n                    dataTimePackageD2.push(listOfseparateUsers[1].TIME);\r\n                }\r\n                if (listOfseparateUsers[2] != undefined) {\r\n                    dataPackageCountD3.push(listOfseparateUsers[2].PACKAGE_COUNT);\r\n                    dataTimePackageD3.push(listOfseparateUsers[2].TIME);\r\n                }\r\n                if (listOfseparateUsers[3] != undefined) {\r\n                    dataPackageCountD4.push(listOfseparateUsers[3].PACKAGE_COUNT);\r\n                    dataTimePackageD4.push(listOfseparateUsers[3].TIME);\r\n                }\r\n                if (listOfseparateUsers[4] != undefined) {\r\n                    dataPackageCountD5.push(listOfseparateUsers[4].PACKAGE_COUNT);\r\n                    dataTimePackageD5.push(listOfseparateUsers[4].TIME);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        this.chartDataSet = [];\r\n        if (dataPackageCountD1.length > 0) {\r\n            this.chartDataSet.push({ label: 'D1', backgroundColor: '#3391CE', borderColor: '', data: dataPackageCountD1, fill: true });\r\n            this.chartDataSet.push({ label: 'D1', backgroundColor: '#48BF7D', borderColor: '', data: dataTimePackageD1, fill: true });\r\n        }\r\n        if (dataPackageCountD2.length > 0) {\r\n            this.chartDataSet.push({ label: 'D2', backgroundColor: '#3391CE', borderColor: '', data: dataPackageCountD2, fill: true });\r\n            this.chartDataSet.push({ label: 'D2', backgroundColor: '#48BF7D', borderColor: '', data: dataTimePackageD2, fill: true });\r\n        }\r\n        if (dataPackageCountD3.length > 0) {\r\n            this.chartDataSet.push({ label: 'D3', backgroundColor: '#3391CE', borderColor: '', data: dataPackageCountD3, fill: true });\r\n            this.chartDataSet.push({ label: 'D3', backgroundColor: '#48BF7D', borderColor: '', data: dataTimePackageD3, fill: true });\r\n        }\r\n        if (dataPackageCountD4.length > 0) {\r\n            this.chartDataSet.push({ label: 'D4', backgroundColor: '#3391CE', borderColor: '', data: dataPackageCountD4, fill: true });\r\n            this.chartDataSet.push({ label: 'D4', backgroundColor: '#48BF7D', borderColor: '', data: dataTimePackageD4, fill: true });\r\n        }\r\n        if (dataPackageCountD5.length > 0) {\r\n            this.chartDataSet.push({ label: 'D5', backgroundColor: '#3391CE', borderColor: '', data: dataPackageCountD5, fill: true });\r\n            this.chartDataSet.push({ label: 'D5', backgroundColor: '#48BF7D', borderColor: '', data: dataTimePackageD5, fill: true });\r\n        }\r\n        let tooltipData: any[] = [];\r\n        tooltipData = this.lstChartData;\r\n        this.option = {\r\n            scales: {\r\n                yAxes: [{\r\n                    stacked: false,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'User'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Employee Productivity By Day\"\r\n            },\r\n            legend: {\r\n                display: false\r\n            }\r\n\r\n        };\r\n\r\n\r\n\r\n        this.data = [];\r\n        this.data = {\r\n            labels: distinctUsersArray,\r\n            datasets: this.chartDataSet,\r\n            options: this.option\r\n        }\r\n        this.PopulateEmpProdAverageChart(this.lstChartData);\r\n    }\r\n\r\n    async GetProductivityReportValues(data, UserName, Curdate) {\r\n        let DelRecvLength: number = 0;\r\n        let length: number = 0;\r\n        this.IntRecPkgCnt = 0;\r\n        this.IntDelPkgCnt = 0;\r\n        length = data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"].length;\r\n        this.IntHrsParts = (60 / this.selectedInterval);\r\n        this.IntNoofHrs = (parseFloat(length.toString()) / this.IntHrsParts);\r\n        this.ReceivedDataSet = data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"]\r\n        this.ReceivedDataSet = asEnumerable(this.ReceivedDataSet).Where(x => x.PACKAGE_COUNT != 0 && x.UserId == UserName && x.TRANS_DATE == Curdate).ToArray();\r\n        if (this.ReceivedDataSet.length > 0) {\r\n            for (let j = 0; j <= this.ReceivedDataSet.length - 1; j++) {\r\n                this.IntRecPkgCnt += this.ReceivedDataSet[j].PACKAGE_COUNT;\r\n            }\r\n        }\r\n        this.DeliveredDataSet = data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"]\r\n        this.DeliveredDataSet = asEnumerable(this.DeliveredDataSet).Where(x => x.PACKAGE_COUNT != 0 && x.UserId == UserName && x.TRANS_DATE == Curdate).ToArray();\r\n        if (this.DeliveredDataSet.length > 0) {\r\n            for (let j = 0; j <= this.DeliveredDataSet.length - 1; j++) {\r\n                this.IntDelPkgCnt += this.DeliveredDataSet[j].PACKAGE_COUNT;\r\n            }\r\n        }\r\n\r\n        let recvData: any[] = [];\r\n        let delvData: any[] = [];\r\n        let totalData: any[] = [];\r\n        for (let recv = 0; recv <= this.ReceivedDataSet.length - 1; recv++) {\r\n            recvData.push(this.ReceivedDataSet[recv].START_INTERVAL);\r\n        }\r\n\r\n        for (let delv = 0; delv <= this.ReceivedDataSet.length - 1; delv++) {\r\n            delvData.push(this.ReceivedDataSet[delv].START_INTERVAL);\r\n        }\r\n\r\n        this.pacakageSum = this.IntRecPkgCnt + this.IntDelPkgCnt;\r\n        totalData = recvData.concat(delvData);\r\n        totalData = asEnumerable(totalData).Distinct().ToArray();\r\n        if (totalData.length > 0) {\r\n            if (this.selectedInterval > 0) {\r\n                this.pZeroTimeHrs = Math.round(this.IntNoofHrs - (parseFloat(totalData.length.toString()) / this.IntHrsParts)) - 1\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.pZeroTimeHrs = (Math.trunc(((this.IntNoofHrs - 1) * 100)) / 100);\r\n        }\r\n\r\n    }\r\n\r\n    async PopulateEmpProdAverageChart(Delvdata: VM_DELV_PROD[]) {\r\n        var lstItem: VM_TABLE_AVG;\r\n        let Delvdata1: VM_DELV_PROD[] = [];\r\n\r\n        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n            for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n\r\n                let UserName: string = this.UserId[i];\r\n                let AvgPack: number = 0\r\n                let AvgTime: number = 0\r\n                let daycount: number = 0\r\n                if (UserName !== \"ALL\") {\r\n                    lstItem = new VM_TABLE_AVG();\r\n                    Delvdata1 = asEnumerable(Delvdata).Where(x => x.UserId == UserName).ToArray();\r\n                    for (let i = 0; i <= Delvdata1.length - 1; i++) {\r\n                        AvgPack += Delvdata1[i].PACKAGE_COUNT;\r\n                        AvgTime += Delvdata1[i].TIME;\r\n                    }\r\n                    AvgPack = AvgPack / Delvdata1.length;\r\n                    AvgTime = AvgTime / Delvdata1.length;\r\n                    lstItem.PACKAGE_COUNT = AvgPack\r\n                    lstItem.AVG_TIME = Math.trunc(AvgTime * 100) / 100;\r\n                    lstItem.UserId = UserName;\r\n                    this.lstAvgChartData.push(lstItem);\r\n\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n\r\n                let UserName: string = this.selectedDropDownUserId[i];\r\n                let AvgPack: number = 0\r\n                let AvgTime: number = 0\r\n                let daycount: number = 0\r\n                if (UserName !== \"ALL\") {\r\n                    lstItem = new VM_TABLE_AVG();\r\n                    Delvdata1 = asEnumerable(Delvdata).Where(x => x.UserId == UserName).ToArray();\r\n                    for (let i = 0; i <= Delvdata1.length - 1; i++) {\r\n                        AvgPack += Delvdata1[i].PACKAGE_COUNT;\r\n                        AvgTime += Delvdata1[i].TIME;\r\n                    }\r\n                    AvgPack = AvgPack / Delvdata1.length;\r\n                    AvgTime = AvgTime / Delvdata1.length;\r\n                    lstItem.PACKAGE_COUNT = AvgPack;\r\n                    lstItem.AVG_TIME = Math.ceil(AvgTime * 10) / 10;\r\n                    lstItem.UserId = UserName;\r\n                    this.lstAvgChartData.push(lstItem);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.barColors = [\"#FFB552\", \"#FFB552\"];\r\n        this.dataSetbgcolor = [];\r\n        this.dataSetdata = [];\r\n        this.dataSetbordercolor = [];\r\n        var dataPackageCount = [];\r\n        var dataAvgTimePackage = [];\r\n\r\n        this.labelForAvg = [];\r\n\r\n        for (let i = 0; i <= this.lstAvgChartData.length - 1; i++) {\r\n\r\n\r\n            this.labelForAvg.push(this.lstAvgChartData[i].UserId);\r\n            dataPackageCount.push(this.lstAvgChartData[i].PACKAGE_COUNT);\r\n            dataAvgTimePackage.push(this.lstAvgChartData[i].AVG_TIME);\r\n\r\n        }\r\n        this.chartDataSet = [];\r\n        this.chartDataSet.push({ label: 'Average Packages', backgroundColor: '#3391CE', borderColor: '', data: dataPackageCount, fill: true });\r\n        this.chartDataSet.push({ label: 'Average Time', backgroundColor: '#48BF7D', borderColor: '', data: dataAvgTimePackage, fill: true });\r\n\r\n        this.optionForAvg = {\r\n            scales: {\r\n                yAxes: [{\r\n                    stacked: false,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    categoryPercentage: 1,\r\n                    barPercentage: 1,\r\n                }, {\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'User'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Average Employee Productivity\"\r\n            }\r\n        };\r\n\r\n\r\n        this.dataAvg = [];\r\n        this.dataAvg = {\r\n            labels: this.labelForAvg,\r\n            datasets: this.chartDataSet,\r\n            options: this.optionForAvg\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    async PopulateGraphsForReceive(TblIndex, data, pDay, ReportName) {\r\n        try {\r\n            let dtfromdate = this.frmDate\r\n            let chartDate = new Date(dtfromdate);\r\n            let intPcnt: number = 0\r\n            this.lstDataForRecv = [];\r\n            let dayWiseData = [];\r\n            let DisplayName: string = \"\";\r\n            this.dateString = [];\r\n            let count = this.toDate.getDate() - this.fromDate.getDate();\r\n            for (let x = 0; x <= count;) {\r\n                this.dateString.push(this.convertDateFormate(chartDate));\r\n                if (this.lstDataForRecv[x] == null) {\r\n                    this.lstDataForRecv[x] = [];\r\n                    if (this.lstDataForRecv[x].PACKAGE_COUNT == null) {\r\n                        this.lstDataForRecv[x].PACKAGE_COUNT = [];\r\n                    }\r\n\r\n                    this.lstDataForRecv[x].START_INTERVAL = [];\r\n                    this.lstDataForRecv[x].ReceiveData = [];\r\n                    this.lstDataForRecv[x].ReceiveLables = [];\r\n                }\r\n                if (this.lstDataForRecv[x].ReceiveData == null) {\r\n                    this.lstDataForRecv[x].ReceiveData = [];\r\n                }\r\n\r\n                if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                    for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n                        let UserName: string = this.UserId[i];\r\n                        if (UserName !== \"ALL\") {\r\n                            this.lstDataForRecv[x].PACKAGE_COUNT[i] = [];\r\n                            this.lstDataForRecv[x].START_INTERVAL[i] = [];\r\n                            dayWiseData[x] = [];\r\n                            let table1Data: any[] = [];\r\n                            table1Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"];\r\n                            let recvDate = this.convertDateFormate(chartDate);\r\n                            let filteredList = asEnumerable(table1Data).Where(x => x.PACKAGE_COUNT != 0 && x.UserId == UserName && x.TRANS_DATE == recvDate).ToArray();\r\n                            for (let j = 0; j <= this.lstTable1Data.length - 1; j++) {\r\n\r\n                                if (filteredList.length > 0) {\r\n                                    dayWiseData[x].push({ START_INTERVAL: this.lstTable1Data[j].START_INTERVAL, PACKAGE_COUNT: this.lstTable1Data[j].PACKAGE_COUNT, USER_ID: UserName, TRANS_DATE: this.lstTable1Data[j].TRANS_DATE })\r\n                                }\r\n                                else {\r\n                                    dayWiseData[x].push({ START_INTERVAL: this.lstTable1Data[j].START_INTERVAL, PACKAGE_COUNT: 0, USER_ID: UserName, TRANS_DATE: recvDate })\r\n                                }\r\n\r\n                                this.lstDataForRecv[x].START_INTERVAL[i].push(dayWiseData[x][j].START_INTERVAL);\r\n                                this.lstDataForRecv[x].PACKAGE_COUNT[i].push(dayWiseData[x][j].PACKAGE_COUNT);\r\n                            }\r\n\r\n                        }\r\n                        this.lstDataForRecv[x].ReceiveData[i] = [];\r\n                        this.lstDataForRecv[x].ReceiveLables.push(this.lstDataForRecv[x].START_INTERVAL[0]);\r\n                        this.lstDataForRecv[x].ReceiveData[i].push(this.lstDataForRecv[x].PACKAGE_COUNT[i]);\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n                        let UserName: string = this.selectedDropDownUserId[i];\r\n                        if (UserName !== \"ALL\") {\r\n                            this.lstDataForRecv[x].PACKAGE_COUNT[i] = [];\r\n                            this.lstDataForRecv[x].START_INTERVAL[i] = [];\r\n                            dayWiseData[x] = [];\r\n                            let table1Data: any[] = [];\r\n                            table1Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"];\r\n                            let recvDate = this.convertDateFormate(chartDate);\r\n                            let filteredList = asEnumerable(table1Data).Where(x => x.PACKAGE_COUNT != 0 && x.UserId == UserName && x.TRANS_DATE == recvDate).ToArray();\r\n                            for (let j = 0; j <= this.lstTable1Data.length - 1; j++) {\r\n\r\n                                if (filteredList.length > 0) {\r\n                                    dayWiseData[x].push({ START_INTERVAL: this.lstTable1Data[j].START_INTERVAL, PACKAGE_COUNT: this.lstTable1Data[j].PACKAGE_COUNT, USER_ID: UserName, TRANS_DATE: this.lstTable1Data[j].TRANS_DATE })\r\n                                }\r\n                                else {\r\n                                    dayWiseData[x].push({ START_INTERVAL: this.lstTable1Data[j].START_INTERVAL, PACKAGE_COUNT: 0, USER_ID: UserName, TRANS_DATE: recvDate })\r\n                                }\r\n\r\n                                this.lstDataForRecv[x].START_INTERVAL[i].push(dayWiseData[x][j].START_INTERVAL);\r\n                                this.lstDataForRecv[x].PACKAGE_COUNT[i].push(dayWiseData[x][j].PACKAGE_COUNT);\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        this.lstDataForRecv[x].ReceiveData[i] = [];\r\n                        this.lstDataForRecv[x].ReceiveLables.push(this.lstDataForRecv[x].START_INTERVAL[0]);\r\n                        this.lstDataForRecv[x].ReceiveData[i].push(this.lstDataForRecv[x].PACKAGE_COUNT[i]);\r\n                    }\r\n                }\r\n\r\n                x += 1;\r\n                chartDate = new Date(chartDate.setDate(chartDate.getDate() + 1));\r\n\r\n            }\r\n\r\n            this.chartDataSetForRecvLine = [];\r\n            this.lableForReceive = [];\r\n            for (let cnt = 0; cnt <= this.lstDataForRecv.length - 1; cnt++) {\r\n                let list: any[] = [];\r\n                for (let cntData = 0; cntData <= this.lstDataForRecv[cnt].ReceiveData.length - 1; cntData++) {\r\n\r\n                    list.push(this.lstDataForRecv[cnt].ReceiveData[cntData][0]);\r\n\r\n                }\r\n\r\n                this.chartDataSetForRecvLine.push({ label: '', backgroundColor: '', borderColor: '#00FF00', data: list, fill: false });\r\n                this.lableForReceive.push(this.lstDataForRecv[cnt].ReceiveLables)\r\n            }\r\n\r\n            this.dataForRecv1 = [];\r\n            this.dataForRecv2 = [];\r\n            this.dataForRecv3 = [];\r\n            this.dataForRecv4 = [];\r\n            this.dataForRecv5 = [];\r\n\r\n            this.optionForRecv1 = {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        },\r\n                        stacked: true,\r\n                        gridLines: {\r\n                            display: true,\r\n                            color: \"rgba(255,99,132,0.2)\"\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Packages'\r\n\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            display: false,\r\n                            color: \"rgba(255,99,132,0.2)\"\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Time'\r\n\r\n                        }\r\n                    }]\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Dock Receiving By Employee - ' + this.dateString[0] + \" Day\"\r\n                }\r\n            };\r\n            this.optionForRecv2 = {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        },\r\n                        stacked: true,\r\n                        gridLines: {\r\n                            display: true,\r\n                            color: \"rgba(255,99,132,0.2)\"\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Packages'\r\n\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            display: false,\r\n                            color: \"rgba(255,99,132,0.2)\"\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Time'\r\n\r\n                        }\r\n                    }]\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Dock Receiving By Employee - ' + this.dateString[1] + \" Day\"\r\n                }\r\n            };\r\n            this.optionForRecv3 = {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        },\r\n                        stacked: true,\r\n                        gridLines: {\r\n                            display: true,\r\n                            color: \"rgba(255,99,132,0.2)\"\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Packages'\r\n\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            display: false,\r\n                            color: \"rgba(255,99,132,0.2)\"\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Time'\r\n\r\n                        }\r\n                    }]\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Dock Receiving By Employee - ' + this.dateString[2] + \" Day\"\r\n                }\r\n            };\r\n            this.optionForRecv4 = {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        },\r\n                        stacked: true,\r\n                        gridLines: {\r\n                            display: true,\r\n                            color: \"rgba(255,99,132,0.2)\"\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Packages'\r\n\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            display: false,\r\n                            color: \"rgba(255,99,132,0.2)\"\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Time'\r\n\r\n                        }\r\n                    }]\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Dock Receiving By Employee - ' + this.dateString[3] + \" Day\"\r\n                }\r\n            };\r\n            this.optionForRecv5 = {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        },\r\n                        stacked: true,\r\n                        gridLines: {\r\n                            display: true,\r\n                            color: \"rgba(255,99,132,0.2)\"\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Packages'\r\n\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            display: false,\r\n                            color: \"rgba(255,99,132,0.2)\"\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Time'\r\n\r\n                        }\r\n                    }]\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Dock Receiving By Employee - ' + this.dateString[4] + \" Day\"\r\n                }\r\n            };\r\n            this.chartDataSetForRecvGraph1 = [];\r\n            if (this.chartDataSetForRecvLine[0] != undefined) {\r\n                if (this.chartDataSetForRecvLine[0].data != undefined) {\r\n                    this.blnGraph1 = true;\r\n                    for (var i in this.chartDataSetForRecvLine[0].data) {\r\n                        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                            this.chartDataSetForRecvGraph1.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForRecvLine[0].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                        }\r\n                        else {\r\n                            this.chartDataSetForRecvGraph1.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForRecvLine[0].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.blnGraph1 = false;\r\n            }\r\n            this.chartDataSetForRecvGraph2 = [];\r\n            if (this.chartDataSetForRecvLine[1] != undefined) {\r\n                if (this.chartDataSetForRecvLine[1].data != undefined) {\r\n                    this.blnGraph2 = true;\r\n                    for (var i in this.chartDataSetForRecvLine[1].data) {\r\n\r\n                        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                            this.chartDataSetForRecvGraph2.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForRecvLine[1].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                        }\r\n                        else {\r\n                            this.chartDataSetForRecvGraph2.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForRecvLine[1].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.blnGraph2 = false;\r\n            }\r\n            this.chartDataSetForRecvGraph3 = [];\r\n            if (this.chartDataSetForRecvLine[2] != undefined) {\r\n                if (this.chartDataSetForRecvLine[2].data != undefined) {\r\n                    this.blnGraph3 = true;\r\n                    for (var i in this.chartDataSetForRecvLine[2].data) {\r\n                        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                            this.chartDataSetForRecvGraph3.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForRecvLine[2].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                        }\r\n                        else {\r\n                            this.chartDataSetForRecvGraph3.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForRecvLine[2].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.blnGraph3 = false;\r\n            }\r\n\r\n\r\n            this.chartDataSetForRecvGraph4 = [];\r\n            if (this.chartDataSetForRecvLine[3] != undefined) {\r\n                if (this.chartDataSetForRecvLine[3].data != undefined) {\r\n                    this.blnGraph4 = true;\r\n                    for (var i in this.chartDataSetForRecvLine[3].data) {\r\n                        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                            this.chartDataSetForRecvGraph4.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForRecvLine[3].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                        }\r\n                        else {\r\n                            this.chartDataSetForRecvGraph4.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForRecvLine[3].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.blnGraph4 = false;\r\n            }\r\n\r\n\r\n            this.chartDataSetForRecvGraph5 = [];\r\n            if (this.chartDataSetForRecvLine[4] != undefined) {\r\n                if (this.chartDataSetForRecvLine[4].data != undefined) {\r\n                    this.blnGraph5 = true;\r\n                    for (var i in this.chartDataSetForRecvLine[4].data) {\r\n                        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                            this.chartDataSetForRecvGraph5.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForRecvLine[4].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                        }\r\n                        else {\r\n                            this.chartDataSetForRecvGraph5.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForRecvLine[4].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.blnGraph5 = false;\r\n            }\r\n\r\n            if (this.blnGraph1 == true) {\r\n                this.dataForRecv1 = {\r\n                    labels: this.lableForReceive[0][0],\r\n                    datasets: this.chartDataSetForRecvGraph1,\r\n                    options: this.optionForRecv1\r\n                }\r\n            }\r\n            if (this.blnGraph2 == true) {\r\n                this.dataForRecv2 = {\r\n                    labels: this.lableForReceive[1][0],\r\n                    datasets: this.chartDataSetForRecvGraph2,\r\n                    options: this.optionForRecv2\r\n                }\r\n            }\r\n            if (this.blnGraph3 == true) {\r\n                this.dataForRecv3 = {\r\n                    labels: this.lableForReceive[2][0],\r\n                    datasets: this.chartDataSetForRecvGraph3,\r\n                    options: this.optionForRecv3\r\n                }\r\n            }\r\n            if (this.blnGraph4 == true) {\r\n                this.dataForRecv4 = {\r\n                    labels: this.lableForReceive[3][0],\r\n                    datasets: this.chartDataSetForRecvGraph4,\r\n                    options: this.optionForRecv4\r\n                }\r\n            }\r\n            if (this.blnGraph5 == true) {\r\n                this.dataForRecv5 = {\r\n                    labels: this.lableForReceive[4][0],\r\n                    datasets: this.chartDataSetForRecvGraph5,\r\n                    options: this.optionForRecv5\r\n                }\r\n            }\r\n        }\r\n\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"\")\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    async PopulateGraphsForDeliver(TblIndex, data, pDay, ReportName) {\r\n        let frmDate: Date = this.fromDate;\r\n        let CurdateForRecvDelv: Date = frmDate;\r\n        let dtfromdate = this.frmDate\r\n        let chartDate = new Date(dtfromdate);\r\n        let intPcnt: number = 0\r\n        this.lstDataForDeliver = [];\r\n        let dayWiseData = [];\r\n        let count = this.toDate.getDate() - this.fromDate.getDate();\r\n        for (let x = 0; x <= count;) {\r\n            if (this.lstDataForDeliver[x] == null) {\r\n                this.lstDataForDeliver[x] = [];\r\n                if (this.lstDataForDeliver[x].PACKAGE_COUNT == null) {\r\n                    this.lstDataForDeliver[x].PACKAGE_COUNT = [];\r\n                }\r\n\r\n                this.lstDataForDeliver[x].START_INTERVAL = [];\r\n                this.lstDataForDeliver[x].ReceiveData = [];\r\n                this.lstDataForDeliver[x].ReceiveLables = [];\r\n            }\r\n            if (this.lstDataForDeliver[x].ReceiveData == null) {\r\n                this.lstDataForDeliver[x].ReceiveData = [];\r\n            }\r\n\r\n            if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n                    let UserName: string = this.UserId[i];\r\n                    if (UserName !== \"ALL\") {\r\n                        this.lstDataForDeliver[x].PACKAGE_COUNT[i] = [];\r\n                        this.lstDataForDeliver[x].START_INTERVAL[i] = [];\r\n                        dayWiseData[x] = [];\r\n                        let table2Data: any[] = [];\r\n                        table2Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"];\r\n                        let recvDate = this.convertDateFormate(chartDate);\r\n                        let filteredList = asEnumerable(table2Data).Where(x => x.PACKAGE_COUNT != 0 && x.UserId == UserName && x.TRANS_DATE == recvDate).ToArray();\r\n                        for (let j = 0; j <= this.lstTable1Data.length - 1; j++) {\r\n\r\n                            if (filteredList.length > 0) {\r\n                                dayWiseData[x].push({ START_INTERVAL: this.lstTable2Data[j].START_INTERVAL, PACKAGE_COUNT: this.lstTable2Data[j].PACKAGE_COUNT, USER_ID: UserName, TRANS_DATE: this.lstTable2Data[j].TRANS_DATE })\r\n                            }\r\n                            else {\r\n                                dayWiseData[x].push({ START_INTERVAL: this.lstTable2Data[j].START_INTERVAL, PACKAGE_COUNT: 0, USER_ID: UserName, TRANS_DATE: recvDate })\r\n                            }\r\n                            this.lstDataForDeliver[x].START_INTERVAL[i].push(dayWiseData[x][j].START_INTERVAL);\r\n                            this.lstDataForDeliver[x].PACKAGE_COUNT[i].push(dayWiseData[x][j].PACKAGE_COUNT);\r\n                        }\r\n                    }\r\n                    this.lstDataForDeliver[x].ReceiveData[i] = [];\r\n                    this.lstDataForDeliver[x].ReceiveLables.push(this.lstDataForDeliver[x].START_INTERVAL[0]);\r\n                    this.lstDataForDeliver[x].ReceiveData[i].push(this.lstDataForDeliver[x].PACKAGE_COUNT[i]);\r\n\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n                    let UserName: string = this.selectedDropDownUserId[i];\r\n                    if (UserName !== \"ALL\") {\r\n                        this.lstDataForDeliver[x].PACKAGE_COUNT[i] = [];\r\n                        this.lstDataForDeliver[x].START_INTERVAL[i] = [];\r\n                        dayWiseData[x] = [];\r\n                        let table2Data: any[] = [];\r\n                        table2Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"];\r\n                        let recvDate = this.convertDateFormate(chartDate);\r\n                        let filteredList = asEnumerable(table2Data).Where(x => x.PACKAGE_COUNT != 0 && x.UserId == UserName && x.TRANS_DATE == recvDate).ToArray();\r\n                        for (let j = 0; j <= this.lstTable1Data.length - 1; j++) {\r\n\r\n                            if (filteredList.length > 0) {\r\n                                dayWiseData[x].push({ START_INTERVAL: this.lstTable2Data[j].START_INTERVAL, PACKAGE_COUNT: this.lstTable2Data[j].PACKAGE_COUNT, USER_ID: UserName, TRANS_DATE: this.lstTable2Data[j].TRANS_DATE })\r\n                            }\r\n                            else {\r\n                                dayWiseData[x].push({ START_INTERVAL: this.lstTable2Data[j].START_INTERVAL, PACKAGE_COUNT: 0, USER_ID: UserName, TRANS_DATE: recvDate })\r\n                            }\r\n                            this.lstDataForDeliver[x].START_INTERVAL[i].push(dayWiseData[x][j].START_INTERVAL);\r\n                            this.lstDataForDeliver[x].PACKAGE_COUNT[i].push(dayWiseData[x][j].PACKAGE_COUNT);\r\n                        }\r\n\r\n                    }\r\n                    this.lstDataForDeliver[x].ReceiveData[i] = [];\r\n                    this.lstDataForDeliver[x].ReceiveLables.push(this.lstDataForDeliver[x].START_INTERVAL[0]);\r\n                    this.lstDataForDeliver[x].ReceiveData[i].push(this.lstDataForDeliver[x].PACKAGE_COUNT[i]);\r\n                }\r\n            }\r\n\r\n            chartDate = new Date(chartDate.setDate(chartDate.getDate() + 1));\r\n            x += 1;\r\n        }\r\n\r\n\r\n        this.chartDataSetForDelverLine = [];\r\n        this.lableForDeliver = [];\r\n        for (let cnt = 0; cnt <= this.lstDataForDeliver.length - 1; cnt++) {\r\n\r\n            let list: any[] = [];\r\n            for (let cntData = 0; cntData <= this.lstDataForDeliver[cnt].ReceiveData.length - 1; cntData++) {\r\n                list.push(this.lstDataForDeliver[cnt].ReceiveData[cntData][0]);\r\n            }\r\n            this.chartDataSetForDelverLine.push({ label: '', backgroundColor: '', borderColor: '#00FF00', data: list, fill: false });\r\n            this.lableForDeliver.push(this.lstDataForDeliver[cnt].ReceiveLables)\r\n\r\n        }\r\n\r\n        this.dataForDelv1 = [];\r\n        this.dataForDelv2 = [];\r\n        this.dataForDelv3 = [];\r\n        this.dataForDelv4 = [];\r\n        this.dataForDelv5 = [];\r\n\r\n        this.optionForDeliver1 = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Deliver By Employee - \" + this.dateString[0] + \" Day\"\r\n            }\r\n        };\r\n        this.optionForDeliver2 = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Deliver By Employee - \" + this.dateString[1] + \" Day\"\r\n            }\r\n        };\r\n        this.optionForDeliver3 = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Deliver By Employee - \" + this.dateString[2] + \" Day\"\r\n            }\r\n        };\r\n        this.optionForDeliver4 = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Deliver By Employee - \" + this.dateString[3] + \" Day\"\r\n            }\r\n        };\r\n        this.optionForDeliver5 = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Deliver By Employee - \" + this.dateString[4] + \" Day\"\r\n            }\r\n        };\r\n\r\n\r\n        this.chartDataSetForDeliverGraph1 = [];\r\n        if (this.chartDataSetForDelverLine[0] != undefined) {\r\n            if (this.chartDataSetForDelverLine[0].data != undefined) {\r\n                for (var i in this.chartDataSetForDelverLine[0].data) {\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        this.chartDataSetForDeliverGraph1.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDelverLine[0].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    } else {\r\n                        this.chartDataSetForDeliverGraph1.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDelverLine[0].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.chartDataSetForDeliverGraph2 = [];\r\n        if (this.chartDataSetForDelverLine[1] != undefined) {\r\n            if (this.chartDataSetForDelverLine[1].data != undefined) {\r\n                for (var i in this.chartDataSetForDelverLine[1].data) {\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        this.chartDataSetForDeliverGraph2.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDelverLine[1].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    } else {\r\n                        this.chartDataSetForDeliverGraph2.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDelverLine[1].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        this.chartDataSetForDeliverGraph3 = [];\r\n        if (this.chartDataSetForDelverLine[2] != undefined) {\r\n            if (this.chartDataSetForDelverLine[2].data != undefined) {\r\n                for (var i in this.chartDataSetForDelverLine[2].data) {\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        this.chartDataSetForDeliverGraph3.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDelverLine[2].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    } else {\r\n                        this.chartDataSetForDeliverGraph3.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDelverLine[2].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        this.chartDataSetForDeliverGraph4 = [];\r\n        if (this.chartDataSetForDelverLine[3] != undefined) {\r\n            if (this.chartDataSetForDelverLine[3].data != undefined) {\r\n                for (var i in this.chartDataSetForDelverLine[3].data) {\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        this.chartDataSetForDeliverGraph4.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDelverLine[3].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    } else {\r\n                        this.chartDataSetForDeliverGraph4.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDelverLine[3].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.chartDataSetForDeliverGraph5 = [];\r\n        if (this.chartDataSetForDelverLine[4] != undefined) {\r\n            if (this.chartDataSetForDelverLine[4].data != undefined) {\r\n                for (var i in this.chartDataSetForDelverLine[4].data) {\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        this.chartDataSetForDeliverGraph5.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDelverLine[4].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    } else {\r\n                        this.chartDataSetForDeliverGraph5.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDelverLine[4].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.blnGraph1 == true) {\r\n            this.dataForDelv1 = {\r\n                labels: this.lableForDeliver[0][0],\r\n                datasets: this.chartDataSetForDeliverGraph1,\r\n                options: this.optionForRecv1\r\n            }\r\n        }\r\n        if (this.blnGraph2 == true) {\r\n            this.dataForDelv2 = {\r\n                labels: this.lableForDeliver[1][0],\r\n                datasets: this.chartDataSetForDeliverGraph2,\r\n                options: this.optionForRecv2\r\n            }\r\n        }\r\n        if (this.blnGraph3 == true) {\r\n            this.dataForDelv3 = {\r\n                labels: this.lableForDeliver[2][0],\r\n                datasets: this.chartDataSetForDeliverGraph3,\r\n                options: this.optionForRecv3\r\n            }\r\n        }\r\n        if (this.blnGraph4 == true) {\r\n            this.dataForDelv4 = {\r\n                labels: this.lableForDeliver[3][0],\r\n                datasets: this.chartDataSetForDeliverGraph4,\r\n                options: this.optionForRecv4\r\n            }\r\n        }\r\n        if (this.blnGraph5 == true) {\r\n            this.dataForDelv5 = {\r\n                labels: this.lableForDeliver[4][0],\r\n                datasets: this.chartDataSetForDeliverGraph5,\r\n                options: this.optionForRecv5\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async PopulateDockGraph(data, day) {\r\n        var lstItem: VM_DELV_PROD;\r\n        let frmDate: Date = this.fromDate;\r\n        let Curdate: Date = frmDate;\r\n        let dtfromdate = this.frmDate\r\n        let chartDate = new Date(dtfromdate);\r\n        this.lstDataForDock = [];\r\n        let dayWiseData = [];\r\n        let dataForDockSummChart: any[] = [];\r\n        let count = this.toDate.getDate() - this.fromDate.getDate();\r\n        for (let x = 0; x <= count;) {\r\n\r\n            if (this.lstDataForDock[x] == null) {\r\n                this.lstDataForDock[x] = [];\r\n                if (this.lstDataForDock[x].PACKAGE_COUNT == null) {\r\n                    this.lstDataForDock[x].PACKAGE_COUNT = [];\r\n                }\r\n\r\n                this.lstDataForDock[x].START_INTERVAL = [];\r\n                this.lstDataForDock[x].DockData = [];\r\n                this.lstDataForDock[x].DockLables = [];\r\n            }\r\n            if (this.lstDataForDock[x].DockData == null) {\r\n                this.lstDataForDock[x].DockData = [];\r\n            }\r\n            if (this.lstDataForDock[x].START_INTERVAL == null) {\r\n                this.lstDataForDock[x].START_INTERVAL = [];\r\n            }\r\n            if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n\r\n                    let UserName: string = this.UserId[i];\r\n                    let startIntervalTotalSum: number = 0\r\n                    let packageCountTotalSum: number = 0\r\n                    let PackageCountReceive: number = 0\r\n                    let PackageCountDeliver: number = 0\r\n                    let j = 0;\r\n                    if (UserName !== \"ALL\") {\r\n                        this.lstDataForDock[x].PACKAGE_COUNT[i] = [];\r\n                        this.lstDataForDock[x].START_INTERVAL[i] = [];\r\n                        dayWiseData[x] = [];\r\n                        let table1Data: any[] = [];\r\n                        table1Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"];\r\n                        let table2Data: any[] = [];\r\n                        table2Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"];\r\n                        let recvDate = this.convertDateFormate(chartDate);\r\n                        for (let j = 0; j <= data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"].length - 1; j++) {\r\n                            var rows = asEnumerable(table1Data).Where(x => x.START_INTERVAL == data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL && x.UserId == UserName && x.TRANS_DATE == recvDate).ToArray();\r\n                            var rows1 = asEnumerable(table2Data).Where(x => x.START_INTERVAL == data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"][j].START_INTERVAL && x.UserId == UserName && x.TRANS_DATE == recvDate).ToArray();\r\n\r\n                            var value: string = \"\";\r\n                            var value1: string = \"\";\r\n                            if (rows.length > 0) {\r\n                                value = rows[0].PACKAGE_COUNT;\r\n                            }\r\n                            else {\r\n                                value = \"0\";\r\n                            }\r\n                            if (rows1.length > 0) {\r\n                                value1 = rows1[0].PACKAGE_COUNT;\r\n                            }\r\n                            else {\r\n                                value1 = \"0\";\r\n                            }\r\n                            var sum = parseInt(value) + parseInt(value1);\r\n                            dayWiseData[x].push({ START_INTERVAL: data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL, PACKAGE_COUNT: sum, USER_ID: UserName, TRANS_DATE: data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].TRANS_DATE });\r\n                            dataForDockSummChart.push({ START_INTERVAL: data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL, PACKAGE_COUNT: sum, USER_ID: UserName, TRANS_DATE: data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].TRANS_DATE });\r\n                            this.lstDataForDock[x].START_INTERVAL[i].push(dayWiseData[x][j].START_INTERVAL);\r\n                            this.lstDataForDock[x].PACKAGE_COUNT[i].push(dayWiseData[x][j].PACKAGE_COUNT);\r\n                        }\r\n\r\n\r\n                    }\r\n                    this.lstDataForDock[x].DockData[i] = [];\r\n                    this.lstDataForDock[x].DockLables.push(this.lstDataForDock[x].START_INTERVAL[0]);\r\n                    this.lstDataForDock[x].DockData[i].push(this.lstDataForDock[x].PACKAGE_COUNT[i]);\r\n\r\n                }\r\n\r\n            }\r\n            else {\r\n                for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n                    let UserName: string = this.selectedDropDownUserId[i];\r\n                    let startIntervalTotalSum: number = 0\r\n                    let packageCountTotalSum: number = 0\r\n                    let PackageCountReceive: number = 0\r\n                    let PackageCountDeliver: number = 0\r\n                    let j = 0;\r\n                    if (UserName !== \"ALL\") {\r\n                        this.lstDataForDock[x].PACKAGE_COUNT[i] = [];\r\n                        this.lstDataForDock[x].START_INTERVAL[i] = [];\r\n                        dayWiseData[x] = [];\r\n                        let table1Data: any[] = [];\r\n                        table1Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"];\r\n                        let table2Data: any[] = [];\r\n                        table2Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"];\r\n                        let recvDate = this.convertDateFormate(chartDate);\r\n                        for (let j = 0; j <= data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"].length - 1; j++) {\r\n                            var rows = asEnumerable(table1Data).Where(x => x.START_INTERVAL == data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL && x.UserId == UserName && x.TRANS_DATE == recvDate).ToArray();\r\n                            var rows1 = asEnumerable(table2Data).Where(x => x.START_INTERVAL == data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"][j].START_INTERVAL && x.UserId == UserName && x.TRANS_DATE == recvDate).ToArray();\r\n\r\n                            var value: string = \"\";\r\n                            var value1: string = \"\";\r\n                            if (rows.length > 0) {\r\n                                value = rows[0].PACKAGE_COUNT;\r\n                            }\r\n                            else {\r\n                                value = \"0\";\r\n                            }\r\n                            if (rows1.length > 0) {\r\n                                value1 = rows1[0].PACKAGE_COUNT;\r\n                            }\r\n                            else {\r\n                                value1 = \"0\";\r\n                            }\r\n                            var sum = parseInt(value) + parseInt(value1);\r\n                            dayWiseData[x].push({ START_INTERVAL: data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL, PACKAGE_COUNT: sum, USER_ID: UserName, TRANS_DATE: data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].TRANS_DATE })\r\n                            dataForDockSummChart.push({ START_INTERVAL: data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL, PACKAGE_COUNT: sum, USER_ID: UserName, TRANS_DATE: data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].TRANS_DATE });\r\n                            this.lstDataForDock[x].START_INTERVAL[i].push(dayWiseData[x][j].START_INTERVAL);\r\n                            this.lstDataForDock[x].PACKAGE_COUNT[i].push(dayWiseData[x][j].PACKAGE_COUNT);\r\n                        }\r\n\r\n\r\n                    }\r\n                    this.lstDataForDock[x].DockData[i] = [];\r\n                    this.lstDataForDock[x].DockLables.push(this.lstDataForDock[x].START_INTERVAL[0]);\r\n                    this.lstDataForDock[x].DockData[i].push(this.lstDataForDock[x].PACKAGE_COUNT[i]);\r\n                }\r\n            }\r\n\r\n\r\n            chartDate = new Date(chartDate.setDate(chartDate.getDate() + 1));\r\n            x += 1;\r\n        }\r\n        console.log(dataForDockSummChart);\r\n        this.chartDataSetForDock = [];\r\n        this.labelForDock = [];\r\n        for (let cnt = 0; cnt <= this.lstDataForDock.length - 1; cnt++) {\r\n\r\n            let list: any[] = [];\r\n            for (let cntData = 0; cntData <= this.lstDataForDock[cnt].DockData.length - 1; cntData++) {\r\n\r\n                list.push(this.lstDataForDock[cnt].DockData[cntData][0]);\r\n\r\n            }\r\n\r\n            this.chartDataSetForDock.push({ label: '', backgroundColor: '', borderColor: '#00FF00', data: list, fill: false });\r\n            this.labelForDock.push(this.lstDataForDock[cnt].DockLables)\r\n        }\r\n\r\n        this.dataForDock1 = [];\r\n        this.dataForDock2 = [];\r\n        this.dataForDock3 = [];\r\n        this.dataForDock4 = [];\r\n        this.dataForDock5 = [];\r\n\r\n        this.optionForDock1 = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Performance By Employee - \" + this.dateString[0] + \" Day\"\r\n            }\r\n        };\r\n        this.optionForDock2 = {\r\n            scales: {\r\n\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Performance By Employee - \" + this.dateString[1] + \" Day\"\r\n            }\r\n        };\r\n        this.optionForDock3 = {\r\n            scales: {\r\n\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Performance By Employee - \" + this.dateString[2] + \" Day\"\r\n            }\r\n        };\r\n        this.optionForDock4 = {\r\n            scales: {\r\n\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Performance By Employee - \" + this.dateString[3] + \" Day\"\r\n            }\r\n        };\r\n        this.optionForDock5 = {\r\n            scales: {\r\n\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Performance By Employee - \" + this.dateString[4] + \" Day\"\r\n            }\r\n        };\r\n\r\n\r\n        this.chartDataSetForDockGraph1 = [];\r\n        if (this.chartDataSetForDock[0] != undefined) {\r\n            if (this.chartDataSetForDock[0].data != undefined) {\r\n                for (var i in this.chartDataSetForDock[0].data) {\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        this.chartDataSetForDockGraph1.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDock[0].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n                    else {\r\n                        this.chartDataSetForDockGraph1.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDock[0].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        this.chartDataSetForDockGraph2 = [];\r\n        if (this.chartDataSetForDock[1] != undefined) {\r\n            if (this.chartDataSetForDock[1].data != undefined) {\r\n                for (var i in this.chartDataSetForDock[1].data) {\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        this.chartDataSetForDockGraph2.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDock[1].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n                    else {\r\n                        this.chartDataSetForDockGraph2.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDock[1].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.chartDataSetForDockGraph3 = [];\r\n        if (this.chartDataSetForDock[2] != undefined) {\r\n            if (this.chartDataSetForDock[2].data != undefined) {\r\n                for (var i in this.chartDataSetForDock[2].data) {\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        this.chartDataSetForDockGraph3.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDock[2].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n                    else {\r\n                        this.chartDataSetForDockGraph3.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDock[2].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.chartDataSetForDockGraph4 = [];\r\n        if (this.chartDataSetForDock[3] != undefined) {\r\n            if (this.chartDataSetForDock[3].data != undefined) {\r\n                for (var i in this.chartDataSetForDock[3].data) {\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        this.chartDataSetForDockGraph4.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDock[3].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n                    else {\r\n                        this.chartDataSetForDockGraph4.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDock[3].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        this.chartDataSetForDockGraph5 = [];\r\n        if (this.chartDataSetForDock[4] != undefined) {\r\n            if (this.chartDataSetForDock[4].data != undefined) {\r\n                for (var i in this.chartDataSetForDock[4].data) {\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        this.chartDataSetForDockGraph5.push({ label: this.UserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDock[4].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n                    else {\r\n                        this.chartDataSetForDockGraph5.push({ label: this.selectedDropDownUserId[i], backgroundColor: '#FFFFFF', data: this.chartDataSetForDock[4].data[i], fill: false, borderColor: this.randomColors[i] })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.blnGraph1 == true) {\r\n            this.dataForDock1 = {\r\n                labels: this.labelForDock[0][0],\r\n                datasets: this.chartDataSetForDockGraph1,\r\n                options: this.optionForDock1\r\n            }\r\n        }\r\n        if (this.blnGraph2 == true) {\r\n            this.dataForDock2 = {\r\n                labels: this.labelForDock[1][0],\r\n                datasets: this.chartDataSetForDockGraph2,\r\n                options: this.optionForDock2\r\n            }\r\n        }\r\n        if (this.blnGraph3 == true) {\r\n            this.dataForDock3 = {\r\n                labels: this.labelForDock[2][0],\r\n                datasets: this.chartDataSetForDockGraph3,\r\n                options: this.optionForDock3\r\n            }\r\n        }\r\n        if (this.blnGraph4 == true) {\r\n            this.dataForDock4 = {\r\n                labels: this.labelForDock[3][0],\r\n                datasets: this.chartDataSetForDockGraph4,\r\n                options: this.optionForDock4\r\n            }\r\n        }\r\n        if (this.blnGraph5 == true) {\r\n            this.dataForDock5 = {\r\n                labels: this.labelForDock[4][0],\r\n                datasets: this.chartDataSetForDockGraph5,\r\n                options: this.optionForDock5\r\n            }\r\n        }\r\n\r\n        this.BindSummaryChartsDock(dataForDockSummChart);\r\n\r\n\r\n    }\r\n\r\n    getRandomColor() {\r\n\r\n        var letters = '0123456789ABCDEF'.split('');\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    async BindSummaryChartsRecv(data) {\r\n        var lstItem: VM_DELV_PROD;\r\n        let frmDate: Date = this.fromDate;\r\n        let Curdate: Date = frmDate;\r\n        this.lstDataForSummaryRecv = [];\r\n        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n            for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n\r\n                if (this.lstDataForSummaryRecv[i] == null) {\r\n                    this.lstDataForSummaryRecv[i] = [];\r\n                    if (this.lstDataForSummaryRecv[i].PACKAGE_COUNT == null) {\r\n                        this.lstDataForSummaryRecv[i].PACKAGE_COUNT = [];\r\n                    }\r\n\r\n                    this.lstDataForSummaryRecv[i].START_INTERVAL = [];\r\n                    this.lstDataForSummaryRecv[i].DataSummaryRecv = [];\r\n                    this.lstDataForSummaryRecv[i].LabelSummaryRecv = [];\r\n                    this.lstDataForSummaryRecv[i].UserId = [];\r\n                }\r\n                if (this.lstDataForSummaryRecv[i].DataSummaryRecv == null) {\r\n                    this.lstDataForSummaryRecv[i].DataSummaryRecv = [];\r\n                }\r\n                if (this.lstDataForSummaryRecv[i].START_INTERVAL == null) {\r\n                    this.lstDataForSummaryRecv[i].START_INTERVAL = [];\r\n                }\r\n                if (this.lstDataForSummaryRecv[i].UserId == null) {\r\n                    this.lstDataForSummaryRecv[i].UserId = [];\r\n                }\r\n\r\n                let UserName: string = this.UserId[i];\r\n                let startIntervalTotalSum: number = 0\r\n                let packageCountTotalSum: number = 0\r\n                let PackageCountReceive: number = 0\r\n                let PackageCountDeliver: number = 0\r\n                if (UserName !== \"ALL\") {\r\n\r\n                    for (let j = 0; j <= data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"].length - 1; j++) {\r\n                        let table1Data: any[] = [];\r\n                        table1Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"];\r\n                        var rows = asEnumerable(table1Data).Where(x => x.START_INTERVAL == data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL && x.UserId == UserName).ToArray();\r\n                        var value: string = \"\";\r\n                        if (rows.length > 0) {\r\n                            value = rows[0].PACKAGE_COUNT.toString();\r\n                        }\r\n                        else {\r\n                            value = \"0\";\r\n                        }\r\n                        this.lstDataForSummaryRecv[i].START_INTERVAL.push(data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL);\r\n                        this.lstDataForSummaryRecv[i].PACKAGE_COUNT.push(value);\r\n                        this.lstDataForSummaryRecv[i].UserId.push(UserName);\r\n                    }\r\n                }\r\n                this.lstDataForSummaryRecv[i].DataSummaryRecv.push(this.lstDataForSummaryRecv[i].PACKAGE_COUNT);\r\n                this.lstDataForSummaryRecv[i].LabelSummaryRecv.push(this.lstDataForSummaryRecv[i].START_INTERVAL);\r\n\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n\r\n                if (this.lstDataForSummaryRecv[i] == null) {\r\n                    this.lstDataForSummaryRecv[i] = [];\r\n                    if (this.lstDataForSummaryRecv[i].PACKAGE_COUNT == null) {\r\n                        this.lstDataForSummaryRecv[i].PACKAGE_COUNT = [];\r\n                    }\r\n\r\n                    this.lstDataForSummaryRecv[i].START_INTERVAL = [];\r\n                    this.lstDataForSummaryRecv[i].DataSummaryRecv = [];\r\n                    this.lstDataForSummaryRecv[i].LabelSummaryRecv = [];\r\n                    this.lstDataForSummaryRecv[i].UserId = [];\r\n                }\r\n                if (this.lstDataForSummaryRecv[i].DataSummaryRecv == null) {\r\n                    this.lstDataForSummaryRecv[i].DataSummaryRecv = [];\r\n                }\r\n                if (this.lstDataForSummaryRecv[i].START_INTERVAL == null) {\r\n                    this.lstDataForSummaryRecv[i].START_INTERVAL = [];\r\n                }\r\n                if (this.lstDataForSummaryRecv[i].UserId == null) {\r\n                    this.lstDataForSummaryRecv[i].UserId = [];\r\n                }\r\n\r\n                let UserName: string = this.selectedDropDownUserId[i];\r\n                let startIntervalTotalSum: number = 0\r\n                let packageCountTotalSum: number = 0\r\n                let PackageCountReceive: number = 0\r\n                let PackageCountDeliver: number = 0\r\n                if (UserName !== \"ALL\") {\r\n\r\n                    for (let j = 0; j <= data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"].length - 1; j++) {\r\n                        let table1Data: any[] = [];\r\n                        table1Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"];\r\n                        var rows = asEnumerable(table1Data).Where(x => x.START_INTERVAL == data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL && x.UserId == UserName).ToArray();\r\n                        var value: string = \"\";\r\n                        if (rows.length > 0) {\r\n                            value = rows[0].PACKAGE_COUNT.toString();\r\n                        }\r\n                        else {\r\n                            value = \"0\";\r\n                        }\r\n                        this.lstDataForSummaryRecv[i].START_INTERVAL.push(data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL);\r\n                        this.lstDataForSummaryRecv[i].PACKAGE_COUNT.push(value);\r\n                        this.lstDataForSummaryRecv[i].UserId.push(UserName);\r\n                    }\r\n                }\r\n                this.lstDataForSummaryRecv[i].DataSummaryRecv.push(this.lstDataForSummaryRecv[i].PACKAGE_COUNT);\r\n                this.lstDataForSummaryRecv[i].LabelSummaryRecv.push(this.lstDataForSummaryRecv[i].START_INTERVAL);\r\n\r\n            }\r\n        }\r\n\r\n        this.chartDataSetForSummaryRecv = [];\r\n        this.labelForSummaryRecv = [];\r\n        for (let cnt = 0; cnt <= this.lstDataForSummaryRecv.length - 1; cnt++) {\r\n            if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                this.chartDataSetForSummaryRecv.push({ label: this.UserId[cnt], backgroundColor: '#FFFFFF', borderColor: this.randomColors[cnt], data: this.lstDataForSummaryRecv[cnt].DataSummaryRecv[0], fill: false });\r\n                this.labelForSummaryRecv.push(this.lstDataForSummaryRecv[cnt].LabelSummaryRecv)\r\n            }\r\n            else {\r\n                this.chartDataSetForSummaryRecv.push({ label: this.selectedDropDownUserId[cnt], backgroundColor: '#FFFFFF', borderColor: this.randomColors[cnt], data: this.lstDataForSummaryRecv[cnt].DataSummaryRecv[0], fill: false });\r\n                this.labelForSummaryRecv.push(this.lstDataForSummaryRecv[cnt].LabelSummaryRecv)\r\n            }\r\n        }\r\n\r\n        this.optionForSummaryRecv = {\r\n            scales: {\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Receiving By Employee - Summary\"\r\n            }\r\n        };\r\n\r\n        this.dataForSummaryRecv = {\r\n            labels: this.labelForSummaryRecv[0][0],\r\n            datasets: this.chartDataSetForSummaryRecv,\r\n            options: this.optionForSummaryRecv\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    async BindSummaryChartsDeliver(data) {\r\n        var lstItem: VM_DELV_PROD;\r\n        let frmDate: Date = this.fromDate;\r\n        let Curdate: Date = frmDate;\r\n        this.lstDataForSummaryDeliver = [];\r\n        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n            for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n\r\n                if (this.lstDataForSummaryDeliver[i] == null) {\r\n                    this.lstDataForSummaryDeliver[i] = [];\r\n                    if (this.lstDataForSummaryDeliver[i].PACKAGE_COUNT == null) {\r\n                        this.lstDataForSummaryDeliver[i].PACKAGE_COUNT = [];\r\n                    }\r\n\r\n                    this.lstDataForSummaryDeliver[i].START_INTERVAL = [];\r\n                    this.lstDataForSummaryDeliver[i].DataSummaryRecv = [];\r\n                    this.lstDataForSummaryDeliver[i].LabelSummaryRecv = [];\r\n                    this.lstDataForSummaryDeliver[i].UserId = [];\r\n                }\r\n                if (this.lstDataForSummaryDeliver[i].DataSummaryRecv == null) {\r\n                    this.lstDataForSummaryDeliver[i].DataSummaryRecv = [];\r\n                }\r\n                if (this.lstDataForSummaryDeliver[i].START_INTERVAL == null) {\r\n                    this.lstDataForSummaryDeliver[i].START_INTERVAL = [];\r\n                }\r\n                if (this.lstDataForSummaryDeliver[i].UserId == null) {\r\n                    this.lstDataForSummaryDeliver[i].UserId = [];\r\n                }\r\n\r\n                let UserName: string = this.UserId[i];\r\n                let startIntervalTotalSum: number = 0\r\n                let packageCountTotalSum: number = 0\r\n                let PackageCountReceive: number = 0\r\n                let PackageCountDeliver: number = 0\r\n                if (UserName !== \"ALL\") {\r\n\r\n                    for (let j = 0; j <= data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"].length - 1; j++) {\r\n                        let table2Data: any[] = [];\r\n                        table2Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"];\r\n                        var rows = asEnumerable(table2Data).Where(x => x.START_INTERVAL == data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL && x.UserId == UserName).ToArray();\r\n                        var value: string = \"\";\r\n                        if (rows.length > 0) {\r\n                            value = rows[0].PACKAGE_COUNT.toString();\r\n                        }\r\n                        else {\r\n                            value = \"0\";\r\n                        }\r\n                        this.lstDataForSummaryDeliver[i].START_INTERVAL.push(data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"][j].START_INTERVAL);\r\n                        this.lstDataForSummaryDeliver[i].PACKAGE_COUNT.push(value);\r\n                        this.lstDataForSummaryDeliver[i].UserId.push(UserName);\r\n                    }\r\n                }\r\n                this.lstDataForSummaryDeliver[i].DataSummaryRecv.push(this.lstDataForSummaryDeliver[i].PACKAGE_COUNT);\r\n                this.lstDataForSummaryDeliver[i].LabelSummaryRecv.push(this.lstDataForSummaryDeliver[i].START_INTERVAL);\r\n\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n\r\n                if (this.lstDataForSummaryDeliver[i] == null) {\r\n                    this.lstDataForSummaryDeliver[i] = [];\r\n                    if (this.lstDataForSummaryDeliver[i].PACKAGE_COUNT == null) {\r\n                        this.lstDataForSummaryDeliver[i].PACKAGE_COUNT = [];\r\n                    }\r\n\r\n                    this.lstDataForSummaryDeliver[i].START_INTERVAL = [];\r\n                    this.lstDataForSummaryDeliver[i].DataSummaryRecv = [];\r\n                    this.lstDataForSummaryDeliver[i].LabelSummaryRecv = [];\r\n                    this.lstDataForSummaryDeliver[i].UserId = [];\r\n                }\r\n                if (this.lstDataForSummaryDeliver[i].DataSummaryRecv == null) {\r\n                    this.lstDataForSummaryDeliver[i].DataSummaryRecv = [];\r\n                }\r\n                if (this.lstDataForSummaryDeliver[i].START_INTERVAL == null) {\r\n                    this.lstDataForSummaryDeliver[i].START_INTERVAL = [];\r\n                }\r\n                if (this.lstDataForSummaryDeliver[i].UserId == null) {\r\n                    this.lstDataForSummaryDeliver[i].UserId = [];\r\n                }\r\n\r\n                let UserName: string = this.selectedDropDownUserId[i];\r\n                let startIntervalTotalSum: number = 0\r\n                let packageCountTotalSum: number = 0\r\n                let PackageCountReceive: number = 0\r\n                let PackageCountDeliver: number = 0\r\n                if (UserName !== \"ALL\") {\r\n                    for (let j = 0; j <= data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"].length - 1; j++) {\r\n\r\n                        let table2Data: any[] = [];\r\n                        table2Data = data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"];\r\n                        var rows = asEnumerable(table2Data).Where(x => x.START_INTERVAL == data.DataDictionary[\"pDsProductivityRep\"][\"Table1\"][j].START_INTERVAL && x.UserId == UserName).ToArray();\r\n                        var value: string = \"\";\r\n                        if (rows.length > 0) {\r\n                            value = rows[0].PACKAGE_COUNT.toString();\r\n                        }\r\n                        else {\r\n                            value = \"0\";\r\n                        }\r\n\r\n                        this.lstDataForSummaryDeliver[i].START_INTERVAL.push(data.DataDictionary[\"pDsProductivityRep\"][\"Table2\"][j].START_INTERVAL);\r\n                        this.lstDataForSummaryDeliver[i].PACKAGE_COUNT.push(value);\r\n                        this.lstDataForSummaryDeliver[i].UserId.push(UserName);\r\n                    }\r\n                }\r\n                this.lstDataForSummaryDeliver[i].DataSummaryRecv.push(this.lstDataForSummaryDeliver[i].PACKAGE_COUNT);\r\n                this.lstDataForSummaryDeliver[i].LabelSummaryRecv.push(this.lstDataForSummaryDeliver[i].START_INTERVAL);\r\n\r\n            }\r\n        }\r\n\r\n\r\n        this.chartDataSetForSummaryDeliver = [];\r\n        this.labelForSummaryDeliver = [];\r\n        for (let cnt = 0; cnt <= this.lstDataForSummaryDeliver.length - 1; cnt++) {\r\n            if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                this.chartDataSetForSummaryDeliver.push({ label: this.UserId[cnt], backgroundColor: '#FFFFFF', borderColor: this.randomColors[cnt], data: this.lstDataForSummaryDeliver[cnt].DataSummaryRecv[0], fill: false });\r\n                this.labelForSummaryDeliver.push(this.lstDataForSummaryDeliver[cnt].LabelSummaryRecv)\r\n            }\r\n            else {\r\n                this.chartDataSetForSummaryDeliver.push({ label: this.selectedDropDownUserId[cnt], backgroundColor: '#FFFFFF', borderColor: this.randomColors[cnt], data: this.lstDataForSummaryDeliver[cnt].DataSummaryRecv[0], fill: false });\r\n                this.labelForSummaryDeliver.push(this.lstDataForSummaryDeliver[cnt].LabelSummaryRecv)\r\n            }\r\n\r\n        }\r\n\r\n        this.optionForSummaryDeliver = {\r\n            scales: {\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Deliver By Employee - Summary\"\r\n            }\r\n        };\r\n\r\n\r\n        this.dataForSummaryDeliver = {\r\n            labels: this.labelForSummaryDeliver[0][0],\r\n            datasets: this.chartDataSetForSummaryDeliver,\r\n            options: this.optionForSummaryDeliver\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    async BindSummaryChartsDock(DockSummaryChartData: any[]) {\r\n\r\n        let frmDate: Date = this.fromDate;\r\n        let Curdate: Date = frmDate;\r\n        this.lstDataForSummaryDock = [];\r\n        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n            for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n\r\n                if (this.lstDataForSummaryDock[i] == null) {\r\n                    this.lstDataForSummaryDock[i] = [];\r\n                    if (this.lstDataForSummaryDock[i].PACKAGE_COUNT == null) {\r\n                        this.lstDataForSummaryDock[i].PACKAGE_COUNT = [];\r\n                    }\r\n\r\n                    this.lstDataForSummaryDock[i].START_INTERVAL = [];\r\n                    this.lstDataForSummaryDock[i].DataSummaryDock = [];\r\n                    this.lstDataForSummaryDock[i].LabelSummaryDock = [];\r\n                    this.lstDataForSummaryDock[i].UserId = [];\r\n                }\r\n                if (this.lstDataForSummaryDock[i].DataSummaryDock == null) {\r\n                    this.lstDataForSummaryDock[i].DataSummaryDock = [];\r\n                }\r\n                if (this.lstDataForSummaryDock[i].START_INTERVAL == null) {\r\n                    this.lstDataForSummaryDock[i].START_INTERVAL = [];\r\n                }\r\n                if (this.lstDataForSummaryDock[i].UserId == null) {\r\n                    this.lstDataForSummaryDock[i].UserId = [];\r\n                }\r\n\r\n                let UserName: string = this.UserId[i];\r\n                let startIntervalTotalSum: number = 0\r\n                let packageCountTotalSum: number = 0\r\n                let PackageCountReceive: number = 0\r\n                let PackageCountDeliver: number = 0\r\n                if (UserName !== \"ALL\") {\r\n\r\n                    for (let j = 0; j <= this.lstTable1Data.length - 1; j++) {\r\n                        let dockDusmmarData: any[] = [];\r\n                        dockDusmmarData = DockSummaryChartData;\r\n                        var rows = asEnumerable(DockSummaryChartData).Where(x => x.START_INTERVAL == this.lstTable1Data[j].START_INTERVAL && x.USER_ID == UserName).ToArray();\r\n                        var value: number = 0;\r\n                        for (let summ = 0; summ <= rows.length - 1; summ++) {\r\n                            value += parseInt(rows[summ].PACKAGE_COUNT);\r\n                        }\r\n                        this.lstDataForSummaryDock[i].START_INTERVAL.push(rows[0].START_INTERVAL);\r\n                        this.lstDataForSummaryDock[i].PACKAGE_COUNT.push(value.toString());\r\n                        this.lstDataForSummaryDock[i].UserId.push(UserName);\r\n                    }\r\n                }\r\n                this.lstDataForSummaryDock[i].DataSummaryDock.push(this.lstDataForSummaryDock[i].PACKAGE_COUNT);\r\n                this.lstDataForSummaryDock[i].LabelSummaryDock.push(this.lstDataForSummaryDock[i].START_INTERVAL);\r\n\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n\r\n                if (this.lstDataForSummaryDock[i] == null) {\r\n                    this.lstDataForSummaryDock[i] = [];\r\n                    if (this.lstDataForSummaryDock[i].PACKAGE_COUNT == null) {\r\n                        this.lstDataForSummaryDock[i].PACKAGE_COUNT = [];\r\n                    }\r\n\r\n                    this.lstDataForSummaryDock[i].START_INTERVAL = [];\r\n                    this.lstDataForSummaryDock[i].DataSummaryDock = [];\r\n                    this.lstDataForSummaryDock[i].LabelSummaryDock = [];\r\n                    this.lstDataForSummaryDock[i].UserId = [];\r\n                }\r\n                if (this.lstDataForSummaryDock[i].DataSummaryDock == null) {\r\n                    this.lstDataForSummaryDock[i].DataSummaryDock = [];\r\n                }\r\n                if (this.lstDataForSummaryDock[i].START_INTERVAL == null) {\r\n                    this.lstDataForSummaryDock[i].START_INTERVAL = [];\r\n                }\r\n                if (this.lstDataForSummaryDock[i].UserId == null) {\r\n                    this.lstDataForSummaryDock[i].UserId = [];\r\n                }\r\n\r\n                let UserName: string = this.selectedDropDownUserId[i];\r\n                let startIntervalTotalSum: number = 0\r\n                let packageCountTotalSum: number = 0\r\n                let PackageCountReceive: number = 0\r\n                let PackageCountDeliver: number = 0\r\n                if (UserName !== \"ALL\") {\r\n\r\n                    for (let j = 0; j <= this.lstTable1Data.length - 1; j++) {\r\n                        let dockDusmmarData: any[] = [];\r\n                        dockDusmmarData = DockSummaryChartData;\r\n                        var rows = asEnumerable(DockSummaryChartData).Where(x => x.START_INTERVAL == this.lstTable1Data[j].START_INTERVAL && x.USER_ID == UserName).ToArray();\r\n                        var value: number = 0;\r\n                        for (let summ = 0; summ <= rows.length - 1; summ++) {\r\n                            value += parseInt(rows[summ].PACKAGE_COUNT);\r\n                        }\r\n                        this.lstDataForSummaryDock[i].START_INTERVAL.push(rows[0].START_INTERVAL);\r\n                        this.lstDataForSummaryDock[i].PACKAGE_COUNT.push(value.toString());\r\n                        this.lstDataForSummaryDock[i].UserId.push(UserName);\r\n                    }\r\n                }\r\n                this.lstDataForSummaryDock[i].DataSummaryDock.push(this.lstDataForSummaryDock[i].PACKAGE_COUNT);\r\n                this.lstDataForSummaryDock[i].LabelSummaryDock.push(this.lstDataForSummaryDock[i].START_INTERVAL);\r\n\r\n            }\r\n        }\r\n\r\n        this.chartDataSetForSummaryDock = [];\r\n        this.labelForSummaryDock = [];\r\n        for (let cnt = 0; cnt <= this.lstDataForSummaryDock.length - 1; cnt++) {\r\n            if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                this.chartDataSetForSummaryDock.push({ label: this.UserId[cnt], backgroundColor: '#FFFFFF', borderColor: this.randomColors[cnt], data: this.lstDataForSummaryDock[cnt].DataSummaryDock[0], fill: false });\r\n                this.labelForSummaryDock.push(this.lstDataForSummaryDock[cnt].LabelSummaryDock)\r\n            }\r\n            else {\r\n                this.chartDataSetForSummaryDock.push({ label: this.selectedDropDownUserId[cnt], backgroundColor: '#FFFFFF', borderColor: this.randomColors[cnt], data: this.lstDataForSummaryDock[cnt].DataSummaryDock[0], fill: false });\r\n                this.labelForSummaryDock.push(this.lstDataForSummaryDock[cnt].LabelSummaryDock)\r\n            }\r\n        }\r\n\r\n        this.optionForSummaryDock = {\r\n            scales: {\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Packages'\r\n\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                        color: \"rgba(255,99,132,0.2)\"\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time'\r\n\r\n                    }\r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"Dock Performance By Employee - Summary\"\r\n            }\r\n        };\r\n\r\n        this.dataForSummaryDock = {\r\n            labels: this.labelForSummaryDock[0][0],\r\n            datasets: this.chartDataSetForSummaryDock,\r\n            options: this.optionForSummaryDock\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async BindCycleTimeReport() {\r\n        this.spinnerService.start();\r\n        this.growlMessage = [];\r\n        this.showGridCycleTime = false;\r\n        let frmDate = this.convert(this.fromDate);\r\n        let dt = this.convert(this.fromDate);\r\n        this.frmDate = new Date(dt);\r\n        let todate = this.convert(this.toDate);\r\n        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n            if (this.lstUsers.length == 1) {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"No Data Found\" });\r\n                this.spinnerService.stop();\r\n                return;\r\n            }\r\n        }\r\n        let userString: string = \"\";\r\n        for (let a = 0; a <= this.selectedDropDownUserId.length - 1; a++) {\r\n            userString = userString + this.selectedDropDownUserId[a] + \",\";\r\n        }\r\n        userString = userString.replace(/,\\s*$/, \"\");\r\n        this.DeliverProductivityService.GetCycleTimeReport(this.orgGroupIDForDBUpdate, frmDate, todate, userString, this.startEvent, this.endEvent).catch(this.httpService.handleError).then((res: Response) => {\r\n            let data = res.json() as AtParWebApiResponse<any>;\r\n            switch (data.StatType) {\r\n                case StatusType.Success: {\r\n                    let lstEventRows = [];\r\n                    this.lstTransactiondata = data.DataDictionary[\"pDsDelvDetailRep\"][\"TRANSACTIONS\"];\r\n                    this.lstEventDetailsData = data.DataDictionary[\"pDsDelvDetailRep\"][\"EVENTDETAILS\"];\r\n                    console.log(this.lstTransactiondata);\r\n                    console.log(this.lstEventDetailsData);\r\n                    if (this.lstTransactiondata.length > 0 && this.lstEventDetailsData.length > 0) {\r\n                        this.showGridCycleTime = true;\r\n                        let lstItem: VM_CYCLETIME_DETAILS;\r\n                        this.lstFinalCycleData = [];\r\n                        if (this.lstTransactiondata.length > 0) {\r\n                            for (let i = 0; i <= this.lstTransactiondata.length - 1; i++) {\r\n                                if (this.lstEventDetailsData.length > 0) {\r\n                                    if (this.selectedStartEvent === \"-1\" && this.selectedEndEvent === \"-2\") {\r\n                                        this.lstTransactionFilterdata = asEnumerable(this.lstEventDetailsData).Where(x => x.TRANSACTION_ID == this.lstTransactiondata[i].TRANSACTION_ID && (x.STATUS_MESSAGE == \"MMIS Receipt\" || x.STATUS_MESSAGE == \"Parcel Receipt\")).OrderBy(x => x.STATUS_TIME).ToArray();\r\n                                    }\r\n                                    else if (this.selectedStartEvent === \"-2\") {\r\n                                        this.lstTransactionFilterdata = asEnumerable(this.lstEventDetailsData).Where(x => x.TRANSACTION_ID == this.lstTransactiondata[i].TRANSACTION_ID && (x.STATUS_MESSAGE != \"Parcel Receipt\")).OrderBy(x => x.STATUS_TIME).ToArray();\r\n                                    }\r\n                                    else if (this.selectedStartEvent === \"1\") {\r\n                                        this.lstTransactionFilterdata = asEnumerable(this.lstEventDetailsData).Where(x => x.TRANSACTION_ID == this.lstTransactiondata[i].TRANSACTION_ID && (x.STATUS_MESSAGE != \"MMIS Receipt\" && x.STATUS_MESSAGE != \"Parcel Receipt\")).OrderBy(x => x.STATUS_TIME).ToArray();\r\n                                    }\r\n                                    else {\r\n                                        this.lstTransactionFilterdata = asEnumerable(this.lstEventDetailsData).Where(x => x.TRANSACTION_ID == this.lstTransactiondata[i].TRANSACTION_ID).OrderBy(x => x.STATUS_TIME).ToArray();\r\n\r\n                                    }\r\n                                    console.log(this.lstTransactionFilterdata);\r\n                                    if (this.lstTransactionFilterdata.length > 0) {\r\n                                        lstItem = new VM_CYCLETIME_DETAILS();\r\n                                        lstItem.TRANSACTION_ID = this.lstTransactiondata[i].TRANSACTION_ID;\r\n                                        lstItem.TRACKING_NBR = this.lstTransactiondata[i].EXTTRACKING;\r\n                                        lstItem.DELIVER_FROM = this.lstTransactiondata[i].DELIVERED_BY;\r\n                                        let intTotVal: number = 0\r\n                                        let dtPrevCycletime: Date = null;\r\n                                        let dtCycletime: Date;\r\n                                        let defaultDateString: string = \"1/1/0001 12:00:00 AM\";\r\n                                        var dtdefaultdate = Date.parse(defaultDateString);\r\n                                        let dtTimediff: Date;\r\n                                        let dtPrevCycletimeCount: number = 0;\r\n                                        let dtCycletimeCount: number = 0;\r\n                                        for (let j = 0; j <= this.lstTransactionFilterdata.length - 1; j++) {\r\n                                            if (this.lstTransactionFilterdata[j].STATUS_TIME != null) {\r\n                                                dtCycletime = this.lstTransactionFilterdata[j].STATUS_TIME;\r\n                                                if (dtPrevCycletime != null) {\r\n                                                    if (dtPrevCycletime.toString() != dtdefaultdate.toString()) {\r\n                                                        dtPrevCycletimeCount = new Date(dtPrevCycletime).getTime();\r\n                                                        dtCycletimeCount = new Date(dtCycletime).getTime();\r\n                                                        if ((dtCycletimeCount - dtPrevCycletimeCount) / 1000 >= 0) {\r\n                                                            intTotVal = intTotVal + parseInt(((dtCycletimeCount - dtPrevCycletimeCount) / 1000).toString());\r\n                                                        }\r\n\r\n                                                    }\r\n                                                }\r\n                                                dtPrevCycletime = dtCycletime\r\n\r\n                                            }\r\n                                        }\r\n                                        let intHrs: number = 0\r\n                                        let intDurationInSec: number = intTotVal;\r\n                                        var seconds = Math.round(intDurationInSec % 60);\r\n\r\n                                        var minutes = Math.round(intDurationInSec / 60 % 24);\r\n\r\n                                        var hours = Math.round(intDurationInSec / 3600);\r\n\r\n                                        var days = Math.round(intDurationInSec / 24 / 60 / 60);\r\n\r\n                                        if (days > 0) {\r\n                                            hours = days * 24;\r\n                                        }\r\n                                        else {\r\n                                            hours = 0;\r\n                                        }\r\n\r\n                                        let h, m, s: string = \"\";\r\n\r\n                                        if (hours < 10) {\r\n                                            h = \"0\" + hours;\r\n                                        }\r\n                                        else {\r\n                                            h = hours.toString();\r\n                                        }\r\n                                        if (minutes < 10) {\r\n                                            m = \"0\" + minutes;\r\n                                        }\r\n                                        else {\r\n                                            m = minutes.toString();\r\n                                        }\r\n                                        if (seconds < 10) {\r\n                                            s = \"0\" + seconds;\r\n                                        }\r\n                                        else {\r\n                                            s = seconds.toString();\r\n                                        }\r\n\r\n                                        let strDuration: String = \"\";\r\n                                        let span: Date;\r\n                                        let Hspan: number;\r\n                                        strDuration = h + \":\" + m + ':' + s;\r\n                                        Hspan = intDurationInSec / 60 % 24;\r\n                                        lstItem.CYCLE_TIME = strDuration.toString();\r\n                                        lstItem.HOURS = h;\r\n                                        lstItem.MINS = m;\r\n                                        lstItem.SECONDS = s;\r\n                                        lstItem.TOT_HOURS = (Math.trunc((Hspan / 60) * 100) / 100).toString();\r\n                                        this.lstFinalCycleData.push(lstItem);\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n                            console.log(this.lstFinalCycleData);\r\n                            this.BindCycleTimeHoursSummary();\r\n                            this.BindCycleTimeSummaryDetails();\r\n                            this.tdExports = true;\r\n\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.showGrid = false;\r\n                        this.showGridCycleTime = false;\r\n                        this.tdExports = false;\r\n                        this.growlMessage = [];\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'No Data Found' });\r\n                    }\r\n                    this.spinnerService.stop();\r\n                    break;\r\n                }\r\n                case StatusType.Warn: {\r\n                    this.showGrid = false;\r\n                    this.showGridCycleTime = false;\r\n                    this.tdExports = false;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                    this.spinnerService.stop();\r\n                    break;\r\n                }\r\n                case StatusType.Error: {\r\n                    this.showGrid = false;\r\n                    this.showGridCycleTime = false;\r\n                    this.tdExports = false;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                    this.spinnerService.stop();\r\n                    break;\r\n                }\r\n                case StatusType.Custom: {\r\n                    this.showGrid = false;\r\n                    this.showGridCycleTime = false;\r\n                    this.tdExports = false;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                    this.spinnerService.stop();\r\n                    break;\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    async CalculateCycleTime(cycleFilterData, cycleSingleData) {\r\n        let intTotVal: number = 0\r\n        let dtPrevCycletime: Date = null;\r\n        let dtCycletime: Date;\r\n        let defaultDateString: string = \"1/1/0001 12:00:00 AM\";\r\n        var dtdefaultdate = Date.parse(defaultDateString);\r\n        let dtTimediff: Date\r\n        for (let i = 0; i <= cycleFilterData.length - 1; i++) {\r\n            if (cycleFilterData[i].STATUS_TIME != null) {\r\n                dtCycletime = cycleFilterData[i].STATUS_TIME;\r\n                if (dtPrevCycletime.toString() != dtdefaultdate.toString()) {\r\n                    if ((dtPrevCycletime.getTime() - dtCycletime.getTime()) >= 0) {\r\n                        intTotVal = intTotVal + parseInt((dtPrevCycletime.getTime() - dtCycletime.getTime()).toString());\r\n                    }\r\n\r\n                }\r\n                dtPrevCycletime = dtCycletime\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async BindCycleTimeHoursSummary() {\r\n        let ArrHrsList: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 48, 72, 100];\r\n        let _IntHrsCnt: number = 0\r\n        let _IntTotCounts: number = 0\r\n        let lstitem: VM_CYCLETIME_DETAILS;\r\n        _IntTotCounts = this.lstFinalCycleData.length;\r\n        this.lstCycleHourDetails = [];\r\n        let totalHoursList: any[] = [];\r\n        for (let c = 0; c <= this.lstFinalCycleData.length - 1; c++) {\r\n            totalHoursList.push({ TOT_HOURS: parseFloat(this.lstFinalCycleData[c].TOT_HOURS) })\r\n        }\r\n        for (let i = 0; i <= ArrHrsList.length - 1; i++) {\r\n\r\n            _IntHrsCnt = asEnumerable(totalHoursList).Where(x => x.TOT_HOURS <= parseFloat((ArrHrsList[i]).toString())).ToArray().length;\r\n            lstitem = new VM_CYCLETIME_DETAILS();\r\n            lstitem.HOURSSUMMARY = ArrHrsList[i].toString();\r\n            lstitem.COUNTSUMMARY = _IntHrsCnt.toString();\r\n            lstitem.COUNT_PERCENTSUMMARY = ((_IntHrsCnt > 0) ? (Math.trunc(((_IntHrsCnt / _IntTotCounts) * 100)) / 100) : 0);\r\n            this.lstCycleHourDetails.push(lstitem);\r\n\r\n        }\r\n        console.log(this.lstFinalCycleData);\r\n    }\r\n\r\n    async BindCycleTimeSummaryDetails() {\r\n        let AvgCount: number = 0;\r\n        let TotTotalHoursArray: number[] = new Array();\r\n        let result: VM_RESULTS;\r\n        this.Results = [];\r\n        result = new VM_RESULTS();\r\n        result.Count = this.lstFinalCycleData.length.toString();\r\n        for (let i = 0; i <= this.lstFinalCycleData.length - 1; i++) {\r\n            AvgCount = AvgCount + parseFloat(this.lstFinalCycleData[i].TOT_HOURS);\r\n            TotTotalHoursArray.push(parseFloat(this.lstFinalCycleData[i].TOT_HOURS));\r\n        }\r\n        result.AVG = (Math.trunc((AvgCount / this.lstFinalCycleData.length) * 100) / 100).toString();\r\n        result.Min = Math.min(...TotTotalHoursArray).toString();\r\n        result.Max = Math.max(...TotTotalHoursArray).toString();\r\n        var length = this.lstFinalCycleData.length;\r\n        var sum = 0;\r\n        var SumOfSqrs = 0;\r\n        let defaultValue = 0;\r\n        for (let cnt = 0; cnt <= TotTotalHoursArray.length - 1; cnt++) {\r\n            sum += TotTotalHoursArray[cnt];\r\n            SumOfSqrs += Math.pow(TotTotalHoursArray[cnt], 2);\r\n        }\r\n        if (TotTotalHoursArray.length == 0) {\r\n            result.StDev = defaultValue.toString();\r\n        }\r\n\r\n        let topSum: number = (TotTotalHoursArray.length * SumOfSqrs) - (Math.pow(sum, 2));\r\n        let val: number = TotTotalHoursArray.length;\r\n        result.StDev = (Math.trunc((Math.sqrt(topSum / (val * (val - 1)))) * 100) / 100).toString();\r\n        this.Results.push(result);\r\n        console.log(this.lstFinalCycleData);\r\n    }\r\n\r\n    async onSendMailIconClick(event) {\r\n        try {\r\n            this.isMailDialog = true;\r\n            this.toMailAddr = '';\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onSendMailIconClick\");\r\n        }\r\n    }\r\n\r\n    async onSendMailClick(event) {\r\n        try {\r\n            this.growlMessage = [];\r\n            if (this.toMailAddr == '' || this.toMailAddr == undefined) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Enter Email Address to Send' });\r\n                return;\r\n            }\r\n            var val = this.validateEmail(this.toMailAddr);\r\n            if (!val) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Enter Valid Email Address to Send' });\r\n                return;\r\n            }\r\n\r\n            this.spinnerService.start();\r\n            let html: string = await this.exportReportDetails('Mail');\r\n            this.isMailDialog = false;\r\n            let toAddr: string = '';\r\n            let mailName: string = \"\";\r\n            if (this.activeTab === \"Employee Productivity\") {\r\n                mailName = \"Employee Productivity Report\";\r\n            }\r\n            else if (this.activeTab === \"Receive by Employee\") {\r\n                mailName = \"Productivity Receive By Employee\";\r\n            }\r\n            else if (this.activeTab === \"Deliver by Employee\") {\r\n                mailName = \"Productivity Deliver By Employee\";\r\n            }\r\n            else if (this.activeTab === \"Dock Performance\") {\r\n                mailName = \"Productivity Dock Performance By Employee\";\r\n            }\r\n            else {\r\n                mailName = \"Cycle Time Report\";\r\n            }\r\n            if (html != '' && html != null) {\r\n                await this.commonService.sendEmail(this.deviceTokenEntry[TokenEntry_Enum.SystemId], mailName, JSON.stringify(html), this.toMailAddr, MailPriority.Normal.toString(), '')\r\n                    .then((res: Response) => {\r\n                        let data = res.json() as AtParWebApiResponse<number>;\r\n                        this.statusCode = data.StatusCode;\r\n                    });\r\n\r\n                if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                    this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Mail has been sent' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_FROM_ADDRESS) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'From Address is Missing! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_TO_ADDRESS) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Please Enter valid Email Address to Send' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_SUBJECT) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Subject is Missing! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_BODY) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Body is Missing! Please contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_SMTP_SERVER_MISSING) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Email Server not configured! Please contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_SEND_FAILED) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Mail Not Sent. Please Try Again' });\r\n                }\r\n                else {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Error while sending mail' });\r\n                }\r\n            }\r\n\r\n            // if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n            this.isMailDialog = false;\r\n            this.toMailAddr = '';\r\n            //}\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onSendMailClick\");\r\n        }\r\n        finally {\r\n\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    validateEmail(email) {\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    async onPrintClick(event) {\r\n        try {\r\n            event.stopImmediatePropagation();\r\n            this.spinnerService.start();\r\n            var html = await this.exportReportDetails('Print');\r\n            let printName: string = \"\";\r\n            if (this.activeTab === \"Employee Productivity\") {\r\n                printName = \"Employee Productivity Report\";\r\n            }\r\n            else if (this.activeTab === \"Receive by Employee\") {\r\n                printName = \"Productivity Receive By Employee\";\r\n            }\r\n            else if (this.activeTab === \"Deliver by Employee\") {\r\n                printName = \"Productivity Deliver By Employee\";\r\n            }\r\n            else if (this.activeTab === \"Dock Performance\") {\r\n                printName = \"Productivity Dock Performance By Employee\";\r\n            }\r\n            else {\r\n                printName = \"Cycle Time Report\";\r\n            }\r\n            if (html != '' && html != null) {\r\n\r\n                var mywindow = window.open('', 'PRINT', 'height=600,width=600');\r\n                if (mywindow != null && mywindow != undefined) {\r\n\r\n                    mywindow.document.write('<html><head><title>' + printName + '</title>');\r\n                    mywindow.document.write('</head><body >');\r\n                    mywindow.document.write(html);\r\n                    mywindow.document.write('</body></html>');\r\n\r\n                    // mywindow.document.close(); // necessary for IE >= 10\r\n                    mywindow.focus(); // necessary for IE >= 10*/\r\n\r\n                    //mywindow.print();\r\n                    // mywindow.close();\r\n\r\n                    return true;\r\n\r\n                } else {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please set allow pop-ups for this site in your browser' });\r\n                }\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onPrintClick\");\r\n            return false;\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async onExportToExcelClick(event) {\r\n        try {\r\n            event.stopImmediatePropagation();\r\n            this.spinnerService.start();\r\n            let html: string = await this.exportReportDetails('Excel');\r\n            let excelName: string = \"\";\r\n            if (this.activeTab === \"Employee Productivity\") {\r\n                excelName = \"Deliver_EmployeeProductivity.xls\";\r\n            }\r\n            else if (this.activeTab === \"Receive by Employee\") {\r\n                excelName = \"ProductivityReceiveByEmployee.xls\";\r\n            }\r\n            else if (this.activeTab === \"Deliver by Employee\") {\r\n                excelName = \"ProductivityDeliverByEmployee.xls\";\r\n            }\r\n            else if (this.activeTab === \"Dock Performance\") {\r\n                excelName = \"ProductivityDockPerformanceByEmployee.xls\";\r\n            }\r\n            else {\r\n                excelName = \"ProductivityCycleTimeReport.xls\";\r\n            }\r\n            if (html != '' && html != null) {\r\n                let blob = new Blob([html], {\r\n                    type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\r\n                });\r\n                saveAs(blob, excelName);\r\n\r\n\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onExportToExcelClick\");\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n\r\n    async exportReportDetails(reqType: string) {\r\n\r\n        if (this.activeTab === \"Employee Productivity\") {\r\n\r\n            var chartImageEmpDay = document.getElementById(\"ChartIdEmpDay\") as HTMLCanvasElement;\r\n            var imageEmpDay = chartImageEmpDay.toDataURL(\"image/png\");\r\n            imageEmpDay = imageEmpDay.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageEmpDay, \"EmpProdByDay\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            var chartImageAvgEmp = document.getElementById(\"ChartIdAvgEmpProd\") as HTMLCanvasElement;\r\n            var imageAvgEmp = chartImageAvgEmp.toDataURL(\"image/png\");\r\n            imageAvgEmp = imageAvgEmp.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageAvgEmp, \"AvgEmpProd\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n            let htmlBuilder: string = '';\r\n            try {\r\n                this.statusCode = -1;\r\n                this.growlMessage = [];\r\n                let sbMailText: string;\r\n                let _strFrmDt: string;\r\n                let _strToDt: string;\r\n\r\n                let imgserverPath: string = '';\r\n                let imgEmpDayAvgPath: string = '';\r\n\r\n                await this.commonService.getServerIP()\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        var data = res.json() as AtParWebApiResponse<string>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.ipAddress = data.DataVariable.toString();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            htmlBuilder = '';\r\n                            return htmlBuilder;\r\n                        }\r\n                    });\r\n\r\n\r\n                await this.commonService.getSSLConfigDetails()\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        this.growlMessage = [];\r\n                        var data = res.json() as AtParWebApiResponse<SSL_CONFIG_DETAILS>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.gstrProtocal = data.Data.PROTOCOL.toString();\r\n                                this.gstrServerName = data.Data.SERVER_NAME.toString();\r\n                                this.gstrPortNo = data.Data.PORT_NO.toString();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            htmlBuilder = '';\r\n                            return htmlBuilder;\r\n                        }\r\n\r\n                    });\r\n\r\n                let phyname;\r\n                imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/atpar/web/images/';\r\n                imgEmpDayAvgPath = this.httpService.BaseUrl + '/Uploaded/';\r\n                let Curdate: Date = this.frmDate;\r\n                let pint: number = 0;\r\n                let strTitle: string = \"\\\"\" + \"AtparVersion2.4.4\" + \"\\\"\";\r\n                let title: string = '\"\"' + \"AtparVersion 2.8\" + '\"\"';\r\n\r\n                htmlBuilder += \"<Table align= left width= 100 % cellpadding=0 cellspacing = 0 vAlign= top>\";\r\n                if (reqType === \"Print\") {\r\n                    htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg title=Atpar Version 2.4.4><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                    htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                        \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                    htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                    htmlBuilder += \"<tr><td colspan=5 align=left><b><span class=c2>Employee Productivity by Day From \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \" </span></b></td><td align=right valign=top>&nbsp;\"\r\n                    htmlBuilder += \"<A  href=\" + \"\" + \"javascript:window.print()\" + \"><img src=\" + imgserverPath + \"print.jpg></A>\"\r\n                }\r\n                else {\r\n                    if (reqType === \"Mail\") {\r\n                        //htmlBuilder += \"<TR width='100%'><td colspan=2 bgcolor='#fe9836' align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg></td></TR>\";\r\n                        htmlBuilder += \"<TR width='100%'  height='27px'><td colspan=2 align=left bgcolor='#fe9836' width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg></td><td align=left  width='85%' height='63' nowrap></td></TR>\"\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\";\r\n                    }\r\n                    htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                        \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                    htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0></tr>\"\r\n                    htmlBuilder += \"<tr><td colspan=5 align=left><b><span class=c2>Employee Productivity by Day From \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \"</b></span></td><td align=right valign=top>&nbsp;\";\r\n                }\r\n                htmlBuilder += \"</td></tr><tr height=20></tr></table></td></tr><tr><td colspan=2> \"\r\n                htmlBuilder += \"<table align=left width=99% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding=4>\"\r\n                htmlBuilder += \"<tr bgcolor=#d3d3d3>\"\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2></span></b></td>\"\r\n                let dtfromdate = this.fromDate\r\n                let chartDatee = new Date(dtfromdate);\r\n                let dttodate = this.toDate\r\n                let datediff = new Date(this.toDate).getDate() - new Date(this.fromDate).getDate();\r\n                let x = 0;\r\n                while (x <= datediff) {\r\n                    pint += 1\r\n                    htmlBuilder += \"<td align=center nowrap colspan=2><b><span class=c2>Day \" + pint.toString() + \" (\" + this.convertDateFormate(chartDatee.toString()) + \")</span></b></td>\"\r\n                    chartDatee = new Date(chartDatee.setDate(chartDatee.getDate() + 1));\r\n                    x += 1;\r\n                }\r\n                htmlBuilder += \"</tr>\";\r\n                pint = 0;\r\n                htmlBuilder += \"<tr bgcolor=#d3d3d3>\"\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Employee</span></b></td>\";\r\n                let dtfromdate1 = this.fromDate\r\n                let chartDate1 = new Date(dtfromdate1);\r\n                let dttodate1 = this.toDate\r\n                let datediff1 = new Date(this.toDate).getDate() - new Date(this.fromDate).getDate();\r\n                let xy = 0;\r\n                while (xy <= datediff1) {\r\n                    pint += 1\r\n                    htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Packages</span></b></td>\"\r\n                    htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Time</span></b></td>\"\r\n                    chartDate1 = new Date(chartDate1.setDate(chartDate1.getDate() + 1));\r\n                    xy += 1;\r\n                }\r\n\r\n                htmlBuilder += \"</tr>\";\r\n                pint = 0;\r\n                let SelDate: String;\r\n                let lstEmpDayList = [];\r\n\r\n                if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n\r\n                    for (let j = 0; j <= this.UserId.length - 1; j++) {\r\n\r\n                        let UserName: String = this.UserId[j];\r\n                        if (UserName !== \"ALL\") {\r\n                            let dtfromdate2 = this.fromDate\r\n                            let chartDate2 = new Date(dtfromdate2);\r\n                            let dttodate2 = this.toDate\r\n                            let datediff2 = new Date(this.toDate).getDate() - new Date(this.fromDate).getDate();\r\n                            let xy = 0;\r\n                            pint = 0;\r\n                            htmlBuilder += \"<tr width='100%'>\"\r\n                            htmlBuilder += \"<td align=left nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\"\r\n                            while (xy <= datediff2) {\r\n                                SelDate = chartDate2.toString();\r\n                                lstEmpDayList = asEnumerable(this.lstChartData).Where(i => i.TRANS_DATE == SelDate && i.UserId === UserName).ToArray();\r\n                                xy += 1;\r\n                                if (lstEmpDayList.length > 0) {\r\n                                    htmlBuilder += \"<td align=right nowrap ><span class=c2>\" + lstEmpDayList[0].PACKAGE_COUNT + \"</span></td>\";\r\n                                    htmlBuilder += \"<td align=right nowrap ><span class=c2>\" + lstEmpDayList[0].TIME + \"</span></td>\"\r\n                                }\r\n                                else {\r\n                                    htmlBuilder += \"<td align=right nowrap ><span class=c2>0</span></td>\";\r\n                                    htmlBuilder += \"<td align=right nowrap ><span class=c2>0</span></td>\";\r\n                                }\r\n                                chartDate2 = new Date(chartDate2.setDate(chartDate2.getDate() + 1));\r\n                            }\r\n                        }\r\n                        htmlBuilder += \"</tr>\";\r\n                    }\r\n\r\n                }\r\n\r\n                else {\r\n                    for (let j = 0; j <= this.selectedDropDownUserId.length - 1; j++) {\r\n\r\n                        let UserName: String = this.selectedDropDownUserId[j];\r\n                        if (UserName !== \"ALL\") {\r\n                            let dtfromdate2 = this.fromDate\r\n                            let chartDate2 = new Date(dtfromdate2);\r\n                            let dttodate2 = this.toDate\r\n                            let datediff2 = new Date(this.toDate).getDate() - new Date(this.fromDate).getDate();\r\n                            let xy = 0;\r\n                            pint = 0;\r\n                            htmlBuilder += \"<tr width='100%'>\"\r\n                            htmlBuilder += \"<td align=left nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\"\r\n                            while (xy <= datediff2) {\r\n                                SelDate = chartDate2.toString();\r\n                                lstEmpDayList = asEnumerable(this.lstChartData).Where(i => i.TRANS_DATE == SelDate && i.UserId === UserName).ToArray();\r\n                                xy += 1;\r\n                                if (lstEmpDayList.length > 0) {\r\n                                    htmlBuilder += \"<td align=right nowrap ><span class=c2>\" + lstEmpDayList[0].PACKAGE_COUNT + \"</span></td>\";\r\n                                    htmlBuilder += \"<td align=right nowrap ><span class=c2>\" + lstEmpDayList[0].TIME + \"</span></td>\"\r\n                                }\r\n                                else {\r\n                                    htmlBuilder += \"<td align=right nowrap ><span class=c2>0</span></td>\";\r\n                                    htmlBuilder += \"<td align=right nowrap ><span class=c2>0</span></td>\";\r\n                                }\r\n                                chartDate2 = new Date(chartDate2.setDate(chartDate2.getDate() + 1));\r\n                            }\r\n                        }\r\n                        htmlBuilder += \"</tr>\";\r\n                    }\r\n                }\r\n\r\n\r\n                htmlBuilder += \"<br/>\";\r\n                htmlBuilder += \"<br/>\";\r\n                htmlBuilder += \"</table>\";\r\n                htmlBuilder += \"<div align=center>\";\r\n                htmlBuilder += \"<table>\";\r\n                htmlBuilder += \"<tr nowrap>\";\r\n                if (reqType === \"Mail\") {\r\n                    htmlBuilder += \"<td align=left colspan=\" + ((pint * 2) + 1).toString() + \" ><img src=\" + imgEmpDayAvgPath + \"EmpProdByDay.png /></td>\"\r\n                }\r\n                else {\r\n                    htmlBuilder += \"<td align=left colspan=\" + ((pint * 2) + 1).toString() + \" ><img src=\" + imgEmpDayAvgPath + \"EmpProdByDay.png /></td>\"\r\n                }\r\n                htmlBuilder += \"</tr>\";\r\n\r\n                htmlBuilder += \"</table>\";\r\n                htmlBuilder += \"</div>\";\r\n                htmlBuilder += \"</td></tr>\";\r\n\r\n                htmlBuilder += \"<tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>\";\r\n\r\n                htmlBuilder += \"</br><tr><td colspan=5 align=left><span class=c2><b>Average Employee Productivity by Day From \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \"</b></span></td><td align=right valign=top>&nbsp;\"\r\n                htmlBuilder += \"<tr><td colspan=2> \"\r\n                htmlBuilder += \"<table align=left width=99% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding=4>\";\r\n                htmlBuilder += \"<tr>\";\r\n                htmlBuilder += \"<td align=center nowrap colspan=4 ><b><span class=c2>Average Package Handled</span></b></td>\";\r\n                htmlBuilder += \"</tr>\";\r\n\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Employee</span></b></td>\"\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Packages</span></b></td>\"\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Average Time (hours)</span></b></td>\"\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Max Time (Hours)</span></b></td>\"\r\n\r\n\r\n                if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n\r\n                    for (let j = 0; j <= this.UserId.length - 1; j++) {\r\n\r\n                        let UserName: String = this.UserId[j];\r\n                        if (UserName !== \"ALL\") {\r\n                            htmlBuilder += \"<tr>\";\r\n                            htmlBuilder += \"<td align=left nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                            let AvgPackageCount = 0;\r\n                            let AvgTimeCount = 0;\r\n                            let AvgMaxCount = 0;\r\n                            let TotTotalHoursArray: number[] = new Array();\r\n                            let lstAvgList = [];\r\n                            lstAvgList = asEnumerable(this.lstChartData).Where(z => z.UserId == UserName).ToArray();\r\n                            for (let k = 0; k <= lstAvgList.length - 1; k++) {\r\n                                AvgPackageCount += lstAvgList[k].PACKAGE_COUNT;\r\n                                AvgTimeCount += lstAvgList[k].TIME;\r\n                                TotTotalHoursArray.push(lstAvgList[k].TIME);\r\n                            }\r\n                            AvgPackageCount = AvgPackageCount / lstAvgList.length;\r\n                            AvgMaxCount = Math.max(...TotTotalHoursArray);\r\n                            AvgTimeCount = AvgTimeCount / lstAvgList.length;\r\n                            htmlBuilder += \"<td align=right nowrap ><span class=c2>\" + AvgPackageCount + \"</span></td>\"\r\n                            htmlBuilder += \"<td align=right nowrap ><span class=c2>\" + AvgTimeCount + \"</span></td>\"\r\n                            htmlBuilder += \"<td align=right nowrap ><span class=c2>\" + AvgMaxCount + \"</span></td>\"\r\n                            htmlBuilder += \"</tr>\"\r\n                            //htmlBuilder += \"<tr>\"\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    for (let j = 0; j <= this.selectedDropDownUserId.length - 1; j++) {\r\n\r\n                        let UserName: String = this.selectedDropDownUserId[j];\r\n                        if (UserName !== \"ALL\") {\r\n                            htmlBuilder += \"<tr>\";\r\n                            htmlBuilder += \"<td align=left nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                            let AvgPackageCount = 0;\r\n                            let AvgTimeCount = 0;\r\n                            let AvgMaxCount = 0;\r\n                            let TotTotalHoursArray: number[] = new Array();\r\n                            let lstAvgList = [];\r\n                            lstAvgList = asEnumerable(this.lstChartData).Where(z => z.UserId == UserName).ToArray();\r\n                            for (let k = 0; k <= lstAvgList.length - 1; k++) {\r\n                                AvgPackageCount += lstAvgList[k].PACKAGE_COUNT;\r\n                                AvgTimeCount += lstAvgList[k].TIME;\r\n                                TotTotalHoursArray.push(lstAvgList[k].TIME);\r\n                            }\r\n                            AvgPackageCount = AvgPackageCount / lstAvgList.length;\r\n                            AvgMaxCount = Math.max(...TotTotalHoursArray);\r\n                            AvgTimeCount = AvgTimeCount / lstAvgList.length;\r\n                            htmlBuilder += \"<td align=right nowrap ><span class=c2>\" + AvgPackageCount + \"</span></td>\"\r\n                            htmlBuilder += \"<td align=right nowrap ><span class=c2>\" + AvgTimeCount + \"</span></td>\"\r\n                            htmlBuilder += \"<td align=right nowrap ><span class=c2>\" + AvgMaxCount + \"</span></td>\"\r\n                            htmlBuilder += \"</tr>\"\r\n                            htmlBuilder += \"<tr>\"\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                htmlBuilder += \"<tr nowrap>\"\r\n                if (reqType === \"Mail\") {\r\n                    htmlBuilder += \"<td align=left colspan='4' ><img src=\" + imgEmpDayAvgPath + \"AvgEmpProd.png /></td>\";\r\n                }\r\n                else {\r\n                    htmlBuilder += \"<td align=left colspan='4' ><img src=\" + imgEmpDayAvgPath + \"AvgEmpProd.png /></td>\"\r\n                }\r\n                htmlBuilder += \"</tr>\"\r\n                htmlBuilder += \"</table>\"\r\n                htmlBuilder += \"</td></tr>\"\r\n                htmlBuilder += \"</Table>\"\r\n                return await htmlBuilder;\r\n\r\n            }\r\n            catch (ex) {\r\n                htmlBuilder = '';\r\n                return htmlBuilder;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        else if (this.activeTab === \"Receive by Employee\") {\r\n            if (this.blnGraph1 == true) {\r\n                var chartImageRecv1 = document.getElementById(\"ChartIdForRecv1\") as HTMLCanvasElement;\r\n                var imageRecv1 = chartImageRecv1.toDataURL(\"image/png\");\r\n                imageRecv1 = imageRecv1.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n                await this.commonService.saveImage(imageRecv1, \"EmpProdRecv0\").\r\n                    catch(this.httpService.handleError).then((res: Response) => {\r\n                        let data = res.json() as AtParWebApiResponse<any>;\r\n                        this.growlMessage = [];\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            }\r\n            if (this.blnGraph2 == true) {\r\n                var chartImageRecv2 = document.getElementById(\"ChartIdForRecv2\") as HTMLCanvasElement;\r\n                var imageRecv2 = chartImageRecv2.toDataURL(\"image/png\");\r\n                imageRecv2 = imageRecv2.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n                await this.commonService.saveImage(imageRecv2, \"EmpProdRecv1\").\r\n                    catch(this.httpService.handleError).then((res: Response) => {\r\n                        let data = res.json() as AtParWebApiResponse<any>;\r\n                        this.growlMessage = [];\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            }\r\n            if (this.blnGraph3 == true) {\r\n                var chartImageRecv3 = document.getElementById(\"ChartIdForRecv3\") as HTMLCanvasElement;\r\n                var imageRecv3 = chartImageRecv3.toDataURL(\"image/png\");\r\n                imageRecv3 = imageRecv3.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n                await this.commonService.saveImage(imageRecv3, \"EmpProdRecv2\").\r\n                    catch(this.httpService.handleError).then((res: Response) => {\r\n                        let data = res.json() as AtParWebApiResponse<any>;\r\n                        this.growlMessage = [];\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            }\r\n            if (this.blnGraph4 == true) {\r\n                var chartImageRecv4 = document.getElementById(\"ChartIdForRecv4\") as HTMLCanvasElement;\r\n                var imageRecv4 = chartImageRecv4.toDataURL(\"image/png\");\r\n                imageRecv4 = imageRecv4.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n                await this.commonService.saveImage(imageRecv4, \"EmpProdRecv3\").\r\n                    catch(this.httpService.handleError).then((res: Response) => {\r\n                        let data = res.json() as AtParWebApiResponse<any>;\r\n                        this.growlMessage = [];\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            }\r\n            if (this.blnGraph5 == true) {\r\n                var chartImageRecv5 = document.getElementById(\"ChartIdForRecv5\") as HTMLCanvasElement;\r\n                var imageRecv5 = chartImageRecv5.toDataURL(\"image/png\");\r\n                imageRecv5 = imageRecv5.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n                await this.commonService.saveImage(imageRecv5, \"EmpProdRecv4\").\r\n                    catch(this.httpService.handleError).then((res: Response) => {\r\n                        let data = res.json() as AtParWebApiResponse<any>;\r\n                        this.growlMessage = [];\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            }\r\n\r\n            var chartImageRecvSumm = document.getElementById(\"ChartIdForSummaryRecv\") as HTMLCanvasElement;\r\n            var imageRecvSumm = chartImageRecvSumm.toDataURL(\"image/png\");\r\n            imageRecvSumm = imageRecvSumm.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageRecvSumm, \"EmpProdRecvSumm\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n\r\n\r\n            let htmlBuilder: string = '';\r\n            try {\r\n                this.statusCode = -1;\r\n                this.growlMessage = [];\r\n                let sbMailText: string;\r\n                let _strFrmDt: string;\r\n                let _strToDt: string;\r\n\r\n                let imgserverPath: string = '';\r\n                let imgEmpDayForRecvPath: string = '';\r\n\r\n                await this.commonService.getServerIP()\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        var data = res.json() as AtParWebApiResponse<string>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.ipAddress = data.DataVariable.toString();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            htmlBuilder = '';\r\n                            return htmlBuilder;\r\n                        }\r\n                    });\r\n\r\n\r\n                await this.commonService.getSSLConfigDetails()\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        this.growlMessage = [];\r\n                        var data = res.json() as AtParWebApiResponse<SSL_CONFIG_DETAILS>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.gstrProtocal = data.Data.PROTOCOL.toString();\r\n                                this.gstrServerName = data.Data.SERVER_NAME.toString();\r\n                                this.gstrPortNo = data.Data.PORT_NO.toString();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            htmlBuilder = '';\r\n                            return htmlBuilder;\r\n                        }\r\n\r\n                    });\r\n\r\n                let phyname;\r\n                imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/atpar/web/images/';\r\n                imgEmpDayForRecvPath = this.httpService.BaseUrl + '/Uploaded/';\r\n                let Curdate: Date = this.frmDate;\r\n                let strTitle: string = \"\\\"\" + \"AtparVersion2.4.4\" + \"\\\"\";\r\n                let title: string = '\"\"' + \"AtparVersion 2.8\" + '\"\"';\r\n\r\n                htmlBuilder += \"<Table align=left width=100% cellpadding=0 cellspacing = 0 vAlign=top>\";\r\n\r\n                if (reqType == \"Print\") {\r\n\r\n                    htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg title=Atpar Version 2.4.4><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                    htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                        \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                    htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                    htmlBuilder += \"<tr><td colspan=5 align=left><span class=c2><b>Dock Performance Report From \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \"</b></span></td><td align=right valign=top>&nbsp;\"\r\n                    htmlBuilder += \"<A  href=\" + \"\" + \"javascript:window.print()\" + \"><img src=\" + imgserverPath + \"print.jpg></A>\"\r\n                }\r\n                else {\r\n                    if (reqType == \"Mail\") {\r\n                        htmlBuilder += \"<TR width='100%'  height='27px'><td colspan=2 align=left bgcolor='#fe9836' width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg></td><td align=left  width='85%' height='63' nowrap></td></TR>\"\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                    }\r\n                    htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                        \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                    htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                    htmlBuilder += \"<tr><td align=left><span class=c2><b>Dock Receive   By Employee From \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \" </b></span></td><td align=right valign=top>&nbsp;\"\r\n\r\n                }\r\n                htmlBuilder += \"</td></tr></table></td></tr><br/>\";\r\n                let dtfromdate = this.fromDate\r\n                let chartDatee = new Date(dtfromdate);\r\n                let dttodate = this.toDate\r\n                let datediff = new Date(this.toDate).getDate() - new Date(this.fromDate).getDate();\r\n                let x = 0;\r\n                let pint: number = 0\r\n                while (x <= datediff) {\r\n                    pint += 1;\r\n                    let SelDate: string = chartDatee.toString();\r\n                    htmlBuilder += \"<br/><tr><td colspan=2 align=left><b><span class=c2> Receiving By Employee Day - \" + this.convertDateFormate(SelDate) + \"</span></b></td><td align=right valign=top>&nbsp;\"\r\n                    htmlBuilder += \"<tr><td colspan=2><table align=left width=99% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding=4>\"\r\n                    htmlBuilder += \"<tr width='100%' bgcolor=#d3d3d3>\"\r\n                    htmlBuilder += \"<td align=center nowrap ><b><span class=c2></span></b></td>\"\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n                            let UserName: string = this.UserId[i];\r\n                            htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\"\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n                            let UserName: string = this.selectedDropDownUserId[i];\r\n                            htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\"\r\n                        }\r\n                    }\r\n                    htmlBuilder += \"<td align=Center nowrap width='100%'><b><span class=c2>Graph</span></b></td>\"\r\n\r\n                    htmlBuilder += \"</tr>\";\r\n\r\n                    for (let z = 0; z <= this.lstTable1Data.length - 1; z++) {\r\n                        htmlBuilder += \"<tr width='100%'>\";\r\n                        htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstTable1Data[z].START_INTERVAL + \"</span></td>\";\r\n\r\n                        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                            for (let xy = 0; xy <= this.UserId.length - 1; xy++) {\r\n                                let UserName: string = this.UserId[xy];\r\n                                //htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                                let dr: any = asEnumerable(this.lstTable1Data).Where(cnt => cnt.UserId == UserName && cnt.START_INTERVAL == this.lstTable1Data[z].START_INTERVAL && cnt.TRANS_DATE == this.convertDateFormate(SelDate)).ToArray();\r\n                                if (dr.length > 0) {\r\n                                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + dr[0].PACKAGE_COUNT + \"</span></td>\";\r\n                                }\r\n                                else {\r\n                                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + \"0\" + \"</span></td>\";\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (let xy = 0; xy <= this.selectedDropDownUserId.length - 1; xy++) {\r\n                                let UserName: string = this.selectedDropDownUserId[xy];\r\n                                //htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                                console.log(this.lstTable1Data);\r\n                                let dr: any = asEnumerable(this.lstTable1Data).Where(cnt => cnt.UserId == UserName && cnt.START_INTERVAL == this.lstTable1Data[z].START_INTERVAL && cnt.TRANS_DATE == this.convertDateFormate(SelDate)).ToArray();\r\n                                if (dr.length > 0) {\r\n                                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + dr[0].PACKAGE_COUNT + \"</span></td>\";\r\n                                }\r\n                                else {\r\n                                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + \"0\" + \"</span></td>\";\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n                        if (z == 0) {\r\n                            if (reqType == \"Mail\") {\r\n                                htmlBuilder += \"<td  width='100%' align='left' valign='middle' rowspan=\" + this.lstTable1Data.length + \"><img width='800px;' src=\" + imgEmpDayForRecvPath + \"EmpProdRecv\" + x.toString() + \".png /></td>\"\r\n\r\n                            }\r\n\r\n                            else {\r\n                                htmlBuilder += \"<td  colspan='12' align='left' valign='middle' rowspan=\" + this.lstTable1Data.length + \"> <div align='center' style='text-align:center'><img height='280' width='550' src=\" + imgEmpDayForRecvPath + \"EmpProdRecv\" + x.toString() + \".png /></div></td>\";\r\n                            }\r\n\r\n\r\n                        }\r\n                        htmlBuilder += \"</tr>\";\r\n                    }\r\n                    htmlBuilder += \"</table>\";\r\n                    htmlBuilder += \"</td></tr>\";\r\n                    x += 1;\r\n                    chartDatee = new Date(chartDatee.setDate(chartDatee.getDate() + 1));\r\n                }\r\n\r\n                htmlBuilder += \"<br/><tr><td colspan=5 align=left><b><span class=c2>Dock Receiving By Employee -Summary </span></b></td><td align=right valign=top>&nbsp;\"\r\n                htmlBuilder += \"</td></tr><tr height=20></tr></table></td></tr><br/><tr><td colspan=2> \"\r\n                htmlBuilder += \"<table align=left width=99% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding=4>\"\r\n                htmlBuilder += \"<tr width='100%' bgcolor=#d3d3d3>\"\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2></span></b></td>\"\r\n                if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                    for (let summ = 0; summ <= this.UserId.length - 1; summ++) {\r\n                        let UserName: string = this.UserId[summ];\r\n\r\n                        htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                    }\r\n                }\r\n                else {\r\n                    for (let summ = 0; summ <= this.selectedDropDownUserId.length - 1; summ++) {\r\n                        let UserName: string = this.selectedDropDownUserId[summ];\r\n\r\n                        htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                    }\r\n                }\r\n                htmlBuilder += \"<td align=left nowrap width='100%'></td>\"\r\n                htmlBuilder += \"</tr>\"\r\n                let strPckgCnt: string;\r\n                for (let summcnt = 0; summcnt <= this.lstTable1Data.length - 1; summcnt++) {\r\n                    htmlBuilder += \"<tr width='100%'>\"\r\n                    htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstTable1Data[summcnt].START_INTERVAL + \"</span></td>\";\r\n\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        for (let user = 0; user <= this.UserId.length - 1; user++) {\r\n                            let UserName: string = this.UserId[user];\r\n                            let pckgcnt: number = 0;\r\n                            let List: any = [];\r\n                            List = asEnumerable(this.lstTable1Data).Where(pck => pck.UserId == UserName && pck.START_INTERVAL == this.lstTable1Data[summcnt].START_INTERVAL).ToArray();\r\n                            for (let summPckgcnt = 0; summPckgcnt <= List.length - 1; summPckgcnt++) {\r\n                                pckgcnt = List[summPckgcnt].PACKAGE_COUNT;\r\n                            }\r\n\r\n                            strPckgCnt = pckgcnt.toString();\r\n                            if (strPckgCnt == null || strPckgCnt === \"\") {\r\n                                strPckgCnt = \"0\";\r\n                            }\r\n\r\n                            htmlBuilder += \"<td align=right nowrap><span class=c2>\" + strPckgCnt + \"</span></td>\"\r\n\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let user = 0; user <= this.selectedDropDownUserId.length - 1; user++) {\r\n                            let UserName: string = this.selectedDropDownUserId[user];\r\n                            let pckgcnt: number = 0;\r\n                            let List: any = [];\r\n                            List = asEnumerable(this.lstTable1Data).Where(pck => pck.UserId == UserName && pck.START_INTERVAL == this.lstTable1Data[summcnt].START_INTERVAL).ToArray();\r\n                            for (let summPckgcnt = 0; summPckgcnt <= List.length - 1; summPckgcnt++) {\r\n                                pckgcnt = List[summPckgcnt].PACKAGE_COUNT;\r\n                            }\r\n\r\n                            strPckgCnt = pckgcnt.toString();\r\n                            if (strPckgCnt == null || strPckgCnt === \"\") {\r\n                                strPckgCnt = \"0\";\r\n                            }\r\n\r\n                            htmlBuilder += \"<td align=right nowrap><span class=c2>\" + strPckgCnt + \"</span></td>\"\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (summcnt == 0) {\r\n                        if (reqType == \"Mail\") {\r\n                            htmlBuilder += \"<td  width='100%' align='left' valign='middle' rowspan=\" + this.lstTable1Data.length + \" ><img width='800px;' src=\" + imgEmpDayForRecvPath + \"EmpProdRecvSumm.png /></td>\";\r\n\r\n                        }\r\n                        else {\r\n                            htmlBuilder += \"<td  colspan='12' align='left' valign='middle' rowspan=\" + this.lstTable1Data.length + \" ><div align='center' style='text-align:center'><img height='280' width='550' src=\" + imgEmpDayForRecvPath + \"EmpProdRecvSumm.png /></div></td>\";\r\n\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n                    htmlBuilder += \"</tr>\";\r\n                }\r\n                htmlBuilder += \"</table>\";\r\n                htmlBuilder += \"</td></tr>\";\r\n                htmlBuilder += \"</Table>\";\r\n                return await htmlBuilder;\r\n\r\n            }\r\n            catch (ex) {\r\n                htmlBuilder = '';\r\n                return htmlBuilder;\r\n            }\r\n\r\n        }\r\n\r\n        else if (this.activeTab === \"Deliver by Employee\") {\r\n            var chartImageDelv1 = document.getElementById(\"ChartIdForDelv1\") as HTMLCanvasElement;\r\n            var imageDelv1 = chartImageDelv1.toDataURL(\"image/png\");\r\n            imageDelv1 = imageDelv1.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDelv1, \"EmpProdDelv0\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            var chartImageDelv2 = document.getElementById(\"ChartIdForDelv2\") as HTMLCanvasElement;\r\n            var imageDelv2 = chartImageDelv2.toDataURL(\"image/png\");\r\n            imageDelv2 = imageDelv2.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDelv2, \"EmpProdDelv1\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            var chartImageDelv3 = document.getElementById(\"ChartIdForDelv3\") as HTMLCanvasElement;\r\n            var imageDelv3 = chartImageDelv3.toDataURL(\"image/png\");\r\n            imageDelv3 = imageDelv3.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDelv3, \"EmpProdDelv2\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            var chartImageDelv4 = document.getElementById(\"ChartIdForDelv4\") as HTMLCanvasElement;\r\n            var imageDelv4 = chartImageDelv4.toDataURL(\"image/png\");\r\n            imageDelv4 = imageDelv4.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDelv4, \"EmpProdDelv3\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            var chartImageDelv5 = document.getElementById(\"ChartIdForDelv5\") as HTMLCanvasElement;\r\n            var imageDelv5 = chartImageDelv5.toDataURL(\"image/png\");\r\n            imageDelv5 = imageDelv5.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDelv5, \"EmpProdDelv4\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            var chartImageDelvSumm = document.getElementById(\"ChartIdForSummaryDeliver\") as HTMLCanvasElement;\r\n            var imageDelvSumm = chartImageDelvSumm.toDataURL(\"image/png\");\r\n            imageDelvSumm = imageDelvSumm.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDelvSumm, \"EmpProdDelvSumm\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n\r\n\r\n            let htmlBuilder: string = '';\r\n            try {\r\n                this.statusCode = -1;\r\n                this.growlMessage = [];\r\n                let sbMailText: string;\r\n                let _strFrmDt: string;\r\n                let _strToDt: string;\r\n\r\n                let imgserverPath: string = '';\r\n                let imgEmpDayForDelvPath: string = '';\r\n\r\n                await this.commonService.getServerIP()\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        var data = res.json() as AtParWebApiResponse<string>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.ipAddress = data.DataVariable.toString();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            htmlBuilder = '';\r\n                            return htmlBuilder;\r\n                        }\r\n                    });\r\n\r\n\r\n                await this.commonService.getSSLConfigDetails()\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        this.growlMessage = [];\r\n                        var data = res.json() as AtParWebApiResponse<SSL_CONFIG_DETAILS>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.gstrProtocal = data.Data.PROTOCOL.toString();\r\n                                this.gstrServerName = data.Data.SERVER_NAME.toString();\r\n                                this.gstrPortNo = data.Data.PORT_NO.toString();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            htmlBuilder = '';\r\n                            return htmlBuilder;\r\n                        }\r\n\r\n                    });\r\n\r\n                let phyname;\r\n                imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/atpar/web/images/';\r\n                imgEmpDayForDelvPath = this.httpService.BaseUrl + '/Uploaded/';\r\n                let Curdate: Date = this.frmDate;\r\n                let strTitle: string = \"\\\"\" + \"AtparVersion2.4.4\" + \"\\\"\";\r\n                let title: string = '\"\"' + \"AtparVersion 2.8\" + '\"\"';\r\n\r\n                htmlBuilder += \"<Table align=left width=100% cellpadding=0 cellspacing = 0 vAlign=top>\";\r\n\r\n                if (reqType == \"Print\") {\r\n\r\n                    htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg title=Atpar Version 2.4.4><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                    htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                        \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                    htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                    htmlBuilder += \"<tr><td colspan=5 align=left><span class=c2><b>Dock Performance Report From \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \"</b></span></td><td align=right valign=top>&nbsp;\"\r\n                    htmlBuilder += \"<A  href=\" + \"\" + \"javascript:window.print()\" + \"><img src=\" + imgserverPath + \"print.jpg></A>\"\r\n                }\r\n                else {\r\n                    if (reqType == \"Mail\") {\r\n                        htmlBuilder += \"<TR width='100%'  height='27px'><td colspan=2 align=left bgcolor='#fe9836' width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg></td><td align=left  width='85%' height='63' nowrap></td></TR>\"\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                    }\r\n                    htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                        \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                    htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                    htmlBuilder += \"<tr><td align=left><span class=c2><b>Dock Receive   By Employee From \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \" </b></span></td><td align=right valign=top>&nbsp;\"\r\n\r\n                }\r\n                htmlBuilder += \"</td></tr></table></td></tr><br/>\";\r\n                let dtfromdate = this.fromDate\r\n                let chartDatee = new Date(dtfromdate);\r\n                let dttodate = this.toDate\r\n                let datediff = new Date(this.toDate).getDate() - new Date(this.fromDate).getDate();\r\n                let x = 0;\r\n                let pint: number = 0\r\n                while (x <= datediff) {\r\n                    pint += 1;\r\n                    let SelDate: string = chartDatee.toString();\r\n                    htmlBuilder += \"<br/><tr><td colspan=2 align=left><b><span class=c2> Deliver By Employee Day - \" + this.convertDateFormate(SelDate) + \"</span></b></td><td align=right valign=top>&nbsp;\"\r\n                    htmlBuilder += \"<tr><td colspan=2><table align=left width=99% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding=4>\"\r\n                    htmlBuilder += \"<tr width='100%' bgcolor=#d3d3d3>\"\r\n                    htmlBuilder += \"<td align=center nowrap ><b><span class=c2></span></b></td>\"\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n                            let UserName: string = this.UserId[i];\r\n                            htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\"\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n                            let UserName: string = this.selectedDropDownUserId[i];\r\n                            htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\"\r\n                        }\r\n                    }\r\n                    htmlBuilder += \"<td align=Center nowrap width='100%'><b><span class=c2>Graph</span></b></td>\"\r\n\r\n                    htmlBuilder += \"</tr>\";\r\n\r\n                    for (let z = 0; z <= this.lstTable1Data.length - 1; z++) {\r\n                        htmlBuilder += \"<tr width='100%'>\";\r\n                        htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstTable1Data[z].START_INTERVAL + \"</span></td>\";\r\n                        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                            for (let xy = 0; xy <= this.UserId.length - 1; xy++) {\r\n                                let UserName: string = this.UserId[xy];\r\n                                //htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                                let dr: any = asEnumerable(this.lstTable2Data).Where(cnt => cnt.UserId == UserName && cnt.START_INTERVAL == this.lstTable1Data[z].START_INTERVAL && cnt.TRANS_DATE == this.convertDateFormate(SelDate)).ToArray();\r\n                                if (dr.length > 0) {\r\n                                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + dr[0].PACKAGE_COUNT + \"</span></td>\";\r\n                                }\r\n                                else {\r\n                                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + \"0\" + \"</span></td>\";\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (let xy = 0; xy <= this.selectedDropDownUserId.length - 1; xy++) {\r\n                                let UserName: string = this.selectedDropDownUserId[xy];\r\n                                //htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                                let dr: any = asEnumerable(this.lstTable2Data).Where(cnt => cnt.UserId == UserName && cnt.START_INTERVAL == this.lstTable1Data[z].START_INTERVAL && cnt.TRANS_DATE == this.convertDateFormate(SelDate)).ToArray();\r\n                                if (dr.length > 0) {\r\n                                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + dr[0].PACKAGE_COUNT + \"</span></td>\";\r\n                                }\r\n                                else {\r\n                                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + \"0\" + \"</span></td>\";\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n\r\n                        if (z == 0) {\r\n                            if (reqType == \"Mail\") {\r\n                                htmlBuilder += \"<td  width='100%' align='left' valign='middle' rowspan=\" + this.lstTable2Data.length + \"><img width='800px;' src=\" + imgEmpDayForDelvPath + \"EmpProdDelv\" + x.toString() + \".png /></td>\"\r\n\r\n                            }\r\n\r\n                            else {\r\n                                htmlBuilder += \"<td  colspan='12' align='left' valign='middle' rowspan=\" + this.lstTable2Data.length + \"><div align='center' style='text-align:center'><img height='280' width='550' src=\" + imgEmpDayForDelvPath + \"EmpProdDelv\" + x.toString() + \".png /></div></td>\";\r\n                            }\r\n\r\n\r\n                        }\r\n                        htmlBuilder += \"</tr>\";\r\n                    }\r\n                    htmlBuilder += \"</table>\";\r\n                    htmlBuilder += \"</td></tr>\";\r\n                    x += 1;\r\n                    chartDatee = new Date(chartDatee.setDate(chartDatee.getDate() + 1));\r\n                }\r\n\r\n                htmlBuilder += \"<br/><tr><td colspan=5 align=left><b><span class=c2>Dock Deliver By Employee -Summary </span></b></td><td align=right valign=top>&nbsp;\"\r\n                htmlBuilder += \"</td></tr><tr height=20></tr></table></td></tr><br/><tr><td colspan=2> \"\r\n                htmlBuilder += \"<table align=left width=99% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding=4>\"\r\n                htmlBuilder += \"<tr width='100%' bgcolor=#d3d3d3>\"\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2></span></b></td>\"\r\n                if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                    for (let summ = 0; summ <= this.UserId.length - 1; summ++) {\r\n                        let UserName: string = this.UserId[summ];\r\n\r\n                        htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                    }\r\n                }\r\n                else {\r\n                    for (let summ = 0; summ <= this.selectedDropDownUserId.length - 1; summ++) {\r\n                        let UserName: string = this.selectedDropDownUserId[summ];\r\n\r\n                        htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                    }\r\n                }\r\n                htmlBuilder += \"<td align=left nowrap width='100%'></td>\"\r\n                htmlBuilder += \"</tr>\"\r\n                let strPckgCnt: string;\r\n                for (let summcnt = 0; summcnt <= this.lstTable2Data.length - 1; summcnt++) {\r\n                    htmlBuilder += \"<tr width='100%'>\"\r\n                    htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstTable2Data[summcnt].START_INTERVAL + \"</span></td>\";\r\n\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n\r\n                        for (let user = 0; user <= this.UserId.length - 1; user++) {\r\n                            let UserName: string = this.UserId[user];\r\n                            let pckgcnt: number = 0;\r\n                            let List: any = [];\r\n                            List = asEnumerable(this.lstTable2Data).Where(pck => pck.UserId == UserName && pck.START_INTERVAL == this.lstTable2Data[summcnt].START_INTERVAL).ToArray();\r\n                            for (let summPckgcnt = 0; summPckgcnt <= List.length - 1; summPckgcnt++) {\r\n                                pckgcnt = List[summPckgcnt].PACKAGE_COUNT;\r\n                            }\r\n\r\n                            strPckgCnt = pckgcnt.toString();\r\n                            if (strPckgCnt == null || strPckgCnt === \"\") {\r\n                                strPckgCnt = \"0\";\r\n                            }\r\n\r\n                            htmlBuilder += \"<td align=right nowrap><span class=c2>\" + strPckgCnt + \"</span></td>\"\r\n\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let user = 0; user <= this.selectedDropDownUserId.length - 1; user++) {\r\n                            let UserName: string = this.selectedDropDownUserId[user];\r\n                            let pckgcnt: number = 0;\r\n                            let List: any = [];\r\n                            List = asEnumerable(this.lstTable2Data).Where(pck => pck.UserId == UserName && pck.START_INTERVAL == this.lstTable2Data[summcnt].START_INTERVAL);\r\n                            for (let summPckgcnt = 0; summPckgcnt <= List.length - 1; summPckgcnt++) {\r\n                                pckgcnt = List[summPckgcnt].PACKAGE_COUNT;\r\n                            }\r\n\r\n                            strPckgCnt = pckgcnt.toString();\r\n                            if (strPckgCnt == null || strPckgCnt === \"\") {\r\n                                strPckgCnt = \"0\";\r\n                            }\r\n\r\n                            htmlBuilder += \"<td align=right nowrap><span class=c2>\" + strPckgCnt + \"</span></td>\"\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (summcnt == 0) {\r\n                        if (reqType == \"Mail\") {\r\n                            htmlBuilder += \"<td  width='100%' align='left' valign='middle' rowspan=\" + this.lstTable2Data.length + \" ><img width='800px;' src=\" + imgEmpDayForDelvPath + \"EmpProdDelvSumm.png /></td>\";\r\n\r\n                        }\r\n                        else {\r\n                            htmlBuilder += \"<td colspan='12' align='left' valign='middle' rowspan=\" + this.lstTable2Data.length + \" ><div align='center' style='text-align:center'><img height='280' width='550' src=\" + imgEmpDayForDelvPath + \"EmpProdDelvSumm.png /></div></td>\";\r\n\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n                    htmlBuilder += \"</tr>\";\r\n                }\r\n                htmlBuilder += \"</table>\";\r\n                htmlBuilder += \"</td></tr>\";\r\n                htmlBuilder += \"</Table>\";\r\n                return await htmlBuilder;\r\n\r\n            }\r\n            catch (ex) {\r\n                htmlBuilder = '';\r\n                return htmlBuilder;\r\n            }\r\n\r\n        }\r\n        else if (this.activeTab === \"Dock Performance\") {\r\n            var chartImageDock1 = document.getElementById(\"ChartIdForDock1\") as HTMLCanvasElement;\r\n            var imageDock1 = chartImageDock1.toDataURL(\"image/png\");\r\n            imageDock1 = imageDock1.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDock1, \"EmpProdDock0\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            var chartImageDock2 = document.getElementById(\"ChartIdForDock2\") as HTMLCanvasElement;\r\n            var imageDock2 = chartImageDock2.toDataURL(\"image/png\");\r\n            imageDock2 = imageDock2.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDock2, \"EmpProdDock1\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            var chartImageDock3 = document.getElementById(\"ChartIdForDock3\") as HTMLCanvasElement;\r\n            var imageDock3 = chartImageDock3.toDataURL(\"image/png\");\r\n            imageDock3 = imageDock3.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDock3, \"EmpProdDock2\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            var chartImageDock4 = document.getElementById(\"ChartIdForDock4\") as HTMLCanvasElement;\r\n            var imageDock4 = chartImageDock4.toDataURL(\"image/png\");\r\n            imageDock4 = imageDock4.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDock4, \"EmpProdDock3\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            var chartImageDock5 = document.getElementById(\"ChartIdForDock5\") as HTMLCanvasElement;\r\n            var imageDock5 = chartImageDock5.toDataURL(\"image/png\");\r\n            imageDock5 = imageDock5.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDock5, \"EmpProdDock4\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            var chartImageDockSumm = document.getElementById(\"ChartIdForSummaryDock\") as HTMLCanvasElement;\r\n            var imageDockSumm = chartImageDockSumm.toDataURL(\"image/png\");\r\n            imageDockSumm = imageDockSumm.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n            await this.commonService.saveImage(imageDockSumm, \"EmpProdDockSumm\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n\r\n\r\n            let htmlBuilder: string = '';\r\n            try {\r\n                this.statusCode = -1;\r\n                this.growlMessage = [];\r\n                let sbMailText: string;\r\n                let _strFrmDt: string;\r\n                let _strToDt: string;\r\n\r\n                let imgserverPath: string = '';\r\n                let imgEmpDayForDockPath: string = '';\r\n\r\n                await this.commonService.getServerIP()\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        var data = res.json() as AtParWebApiResponse<string>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.ipAddress = data.DataVariable.toString();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            htmlBuilder = '';\r\n                            return htmlBuilder;\r\n                        }\r\n                    });\r\n\r\n\r\n                await this.commonService.getSSLConfigDetails()\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        this.growlMessage = [];\r\n                        var data = res.json() as AtParWebApiResponse<SSL_CONFIG_DETAILS>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.gstrProtocal = data.Data.PROTOCOL.toString();\r\n                                this.gstrServerName = data.Data.SERVER_NAME.toString();\r\n                                this.gstrPortNo = data.Data.PORT_NO.toString();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            htmlBuilder = '';\r\n                            return htmlBuilder;\r\n                        }\r\n\r\n                    });\r\n\r\n                let phyname;\r\n                imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/atpar/web/images/';\r\n                imgEmpDayForDockPath = this.httpService.BaseUrl + '/Uploaded/';\r\n                let Curdate: Date = this.frmDate;\r\n                let strTitle: string = \"\\\"\" + \"AtparVersion2.4.4\" + \"\\\"\";\r\n                let title: string = '\"\"' + \"AtparVersion 2.8\" + '\"\"';\r\n\r\n                htmlBuilder += \"<Table align=left width=100% cellpadding=0 cellspacing = 0 vAlign=top>\";\r\n\r\n                if (reqType == \"Print\") {\r\n\r\n                    htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg title=Atpar Version 2.4.4><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                    htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                        \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                    htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                    htmlBuilder += \"<tr><td colspan=5 align=left><span class=c2><b>Dock Performance Report From \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \"</b></span></td><td align=right valign=top>&nbsp;\"\r\n                    htmlBuilder += \"<A  href=\" + \"\" + \"javascript:window.print()\" + \"><img src=\" + imgserverPath + \"print.jpg></A>\"\r\n                }\r\n                else {\r\n                    if (reqType == \"Mail\") {\r\n                        htmlBuilder += \"<TR width='100%'  height='27px'><td colspan=2 align=left bgcolor='#fe9836' width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg></td><td align=left  width='85%' height='63' nowrap></td></TR>\"\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                    }\r\n                    htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                        \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                    htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                    htmlBuilder += \"<tr><td align=left><span class=c2><b>Dock Performance Report From \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \" </b></span></td><td align=right valign=top>&nbsp;\"\r\n\r\n                }\r\n                htmlBuilder += \"</td></tr></table></td></tr><br/>\";\r\n                let dtfromdate = this.fromDate\r\n                let chartDatee = new Date(dtfromdate);\r\n                let dttodate = this.toDate\r\n                let datediff = new Date(this.toDate).getDate() - new Date(this.fromDate).getDate();\r\n                let x = 0;\r\n                let pint: number = 0\r\n                while (x <= datediff) {\r\n                    pint += 1;\r\n                    let SelDate: string = chartDatee.toString();\r\n                    htmlBuilder += \"<br/><tr><td colspan=2 align=left><b><span class=c2> Dock Performance By Employee Day - \" + this.convertDateFormate(SelDate) + \"</span></b></td><td align=right valign=top>&nbsp;\"\r\n                    htmlBuilder += \"<tr><td colspan=2><table align=left width=99% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding=4>\"\r\n                    htmlBuilder += \"<tr width='100%' bgcolor=#d3d3d3>\"\r\n                    htmlBuilder += \"<td align=center nowrap ><b><span class=c2></span></b></td>\"\r\n                    if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                        for (let i = 0; i <= this.UserId.length - 1; i++) {\r\n                            let UserName: string = this.UserId[i];\r\n                            htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\"\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let i = 0; i <= this.selectedDropDownUserId.length - 1; i++) {\r\n                            let UserName: string = this.selectedDropDownUserId[i];\r\n                            htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\"\r\n                        }\r\n                    }\r\n                    htmlBuilder += \"<td align=Center nowrap width='100%'><b><span class=c2>Graph</span></b></td>\"\r\n\r\n                    htmlBuilder += \"</tr>\";\r\n\r\n                    for (let z = 0; z <= this.lstTable1Data.length - 1; z++) {\r\n                        htmlBuilder += \"<tr width='100%'>\";\r\n                        htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstTable1Data[z].START_INTERVAL + \"</span></td>\";\r\n\r\n                        if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                            for (let xy = 0; xy <= this.UserId.length - 1; xy++) {\r\n                                let UserName: string = this.UserId[xy];\r\n                                //htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                                let dr: any = asEnumerable(this.lstTable1Data).Where(cnt => cnt.UserId == UserName && cnt.START_INTERVAL == this.lstTable1Data[z].START_INTERVAL && cnt.TRANS_DATE == this.convertDateFormate(SelDate)).ToArray();\r\n                                let dr1: any = asEnumerable(this.lstTable2Data).Where(cnt => cnt.UserId == UserName && cnt.START_INTERVAL == this.lstTable1Data[z].START_INTERVAL && cnt.TRANS_DATE == this.convertDateFormate(SelDate)).ToArray();\r\n                                let sumDock: number = 0;\r\n                                if (dr.length > 0) {\r\n                                    sumDock += dr[0].PACKAGE_COUNT;\r\n                                }\r\n                                if (dr1.length > 0) {\r\n                                    sumDock += dr1[0].PACKAGE_COUNT;\r\n                                }\r\n                                htmlBuilder += \"<td align=right nowrap><span class=c2>\" + sumDock.toString() + \"</span></td>\"\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            for (let xy = 0; xy <= this.selectedDropDownUserId.length - 1; xy++) {\r\n                                let UserName: string = this.selectedDropDownUserId[xy];\r\n                                //htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                                let dr: any = asEnumerable(this.lstTable1Data).Where(cnt => cnt.UserId == UserName && cnt.START_INTERVAL == this.lstTable1Data[z].START_INTERVAL && cnt.TRANS_DATE == this.convertDateFormate(SelDate)).ToArray();\r\n                                let dr1: any = asEnumerable(this.lstTable2Data).Where(cnt => cnt.UserId == UserName && cnt.START_INTERVAL == this.lstTable1Data[z].START_INTERVAL && cnt.TRANS_DATE == this.convertDateFormate(SelDate)).ToArray();\r\n                                let sumDock: number = 0;\r\n                                if (dr.length > 0) {\r\n                                    sumDock += dr[0].PACKAGE_COUNT;\r\n                                }\r\n                                if (dr1.length > 0) {\r\n                                    sumDock += dr1[0].PACKAGE_COUNT;\r\n                                }\r\n                                htmlBuilder += \"<td align=right nowrap><span class=c2>\" + sumDock.toString() + \"</span></td>\"\r\n                            }\r\n                        }\r\n\r\n\r\n                        if (z == 0) {\r\n                            if (reqType == \"Mail\") {\r\n                                htmlBuilder += \"<td  width='100%'  align='left' valign='middle' rowspan=\" + this.lstTable2Data.length + \"><img width='800px;' src=\" + imgEmpDayForDockPath + \"EmpProdDock\" + x.toString() + \".png /></td>\"\r\n\r\n                            }\r\n\r\n                            else {\r\n                                htmlBuilder += \"<td colspan='12'  align='left' valign='middle' rowspan=\" + this.lstTable2Data.length + \" ><div align='center' style='text-align:center'><img height='280' width='550' src=\" + imgEmpDayForDockPath + \"EmpProdDock\" + x.toString() + \".png /></div></td>\";\r\n                            }\r\n\r\n\r\n                        }\r\n                        htmlBuilder += \"</tr>\";\r\n                    }\r\n                    htmlBuilder += \"</table>\";\r\n                    htmlBuilder += \"</td></tr>\";\r\n                    x += 1;\r\n                    chartDatee = new Date(chartDatee.setDate(chartDatee.getDate() + 1));\r\n                }\r\n\r\n                htmlBuilder += \"<br/><tr><td colspan=5 align=left><b><span class=c2>Dock Performance By Employee -Summary </span></b></td><td align=right valign=top>&nbsp;\"\r\n                htmlBuilder += \"</td></tr><tr height=20></tr></table></td></tr><br/><tr><td colspan=2> \"\r\n                htmlBuilder += \"<table align=left width=99% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding=4>\"\r\n                htmlBuilder += \"<tr width='100%' bgcolor=#d3d3d3>\"\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2></span></b></td>\"\r\n                if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                    for (let summ = 0; summ <= this.UserId.length - 1; summ++) {\r\n                        let UserName: string = this.UserId[summ];\r\n                        htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                    }\r\n                }\r\n                else {\r\n                    for (let summ = 0; summ <= this.selectedDropDownUserId.length - 1; summ++) {\r\n                        let UserName: string = this.selectedDropDownUserId[summ];\r\n                        htmlBuilder += \"<td align=center nowrap ><b><span class=c2>\" + UserName + \"</span></b></td>\";\r\n                    }\r\n                }\r\n                htmlBuilder += \"<td align=left nowrap width='100%'></td>\"\r\n                htmlBuilder += \"</tr>\"\r\n                let strPckgCnt: string;\r\n                if (this.selectedDropDownUserId.indexOf(\"ALL\") > -1) {\r\n                    for (let summcnt = 0; summcnt <= this.lstTable1Data.length - 1; summcnt++) {\r\n                        htmlBuilder += \"<tr width='100%'>\"\r\n                        htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstTable1Data[summcnt].START_INTERVAL + \"</span></td>\";\r\n                        for (let user = 0; user <= this.UserId.length - 1; user++) {\r\n                            let UserName: string = this.UserId[user];\r\n                            let pckgcnt: number = 0;\r\n                            let pckgcnt1: number = 0;\r\n                            let List: any = [];\r\n                            let List1: any = [];\r\n                            List = asEnumerable(this.lstTable1Data).Where(pck => pck.UserId == UserName && pck.START_INTERVAL == this.lstTable1Data[summcnt].START_INTERVAL).ToArray();\r\n                            List1 = asEnumerable(this.lstTable2Data).Where(pck => pck.UserId == UserName && pck.START_INTERVAL == this.lstTable2Data[summcnt].START_INTERVAL).ToArray();\r\n                            for (let summPckgcnt = 0; summPckgcnt <= List.length - 1; summPckgcnt++) {\r\n                                pckgcnt = List[summPckgcnt].PACKAGE_COUNT;\r\n                            }\r\n                            for (let summPckgcnt1 = 0; summPckgcnt1 <= List1.length - 1; summPckgcnt1++) {\r\n                                pckgcnt1 = List1[summPckgcnt1].PACKAGE_COUNT;\r\n                            }\r\n                            if (pckgcnt.toString() == null || pckgcnt.toString() === \"\") {\r\n                                pckgcnt = 0;\r\n                            }\r\n                            if (pckgcnt1.toString() == null || pckgcnt1.toString() === \"\") {\r\n                                pckgcnt1 = 0;\r\n                            }\r\n                            let totalValue = pckgcnt + pckgcnt1;\r\n                            strPckgCnt = totalValue.toString();\r\n                            if (strPckgCnt == null || strPckgCnt === \"\") {\r\n                                strPckgCnt = \"0\";\r\n                            }\r\n\r\n                            htmlBuilder += \"<td align=right nowrap><span class=c2>\" + strPckgCnt + \"</span></td>\"\r\n\r\n                        }\r\n                        if (summcnt == 0) {\r\n                            if (reqType == \"Mail\") {\r\n                                htmlBuilder += \"<td  width='100%' align='left' valign='middle' rowspan=\" + this.lstTable2Data.length + \" ><img width='800px;' src=\" + imgEmpDayForDockPath + \"EmpProdDockSumm.png /></td>\";\r\n\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td  colspan='12' align='left' valign='middle' rowspan=\" + this.lstTable2Data.length + \" ><div align='center' style='text-align:center'><img height='280' width='550' src=\" + imgEmpDayForDockPath + \"EmpProdDockSumm.png /></div></td>\";\r\n\r\n                            }\r\n\r\n\r\n\r\n                        }\r\n                        htmlBuilder += \"</tr>\";\r\n                    }\r\n                }\r\n                else {\r\n                    for (let summcnt = 0; summcnt <= this.lstTable1Data.length - 1; summcnt++) {\r\n                        htmlBuilder += \"<tr width='100%'>\"\r\n                        htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstTable1Data[summcnt].START_INTERVAL + \"</span></td>\";\r\n                        for (let user = 0; user <= this.selectedDropDownUserId.length - 1; user++) {\r\n                            let UserName: string = this.selectedDropDownUserId[user];\r\n                            let pckgcnt: number = 0;\r\n                            let pckgcnt1: number = 0;\r\n                            let List: any = [];\r\n                            let List1: any = [];\r\n                            List = asEnumerable(this.lstTable1Data).Where(pck => pck.UserId == UserName && pck.START_INTERVAL == this.lstTable1Data[summcnt].START_INTERVAL).ToArray();\r\n                            List1 = asEnumerable(this.lstTable2Data).Where(pck => pck.UserId == UserName && pck.START_INTERVAL == this.lstTable2Data[summcnt].START_INTERVAL).ToArray();\r\n                            for (let summPckgcnt = 0; summPckgcnt <= List.length - 1; summPckgcnt++) {\r\n                                pckgcnt = List[summPckgcnt].PACKAGE_COUNT;\r\n                            }\r\n                            for (let summPckgcnt1 = 0; summPckgcnt1 <= List1.length - 1; summPckgcnt1++) {\r\n                                pckgcnt1 = List1[summPckgcnt1].PACKAGE_COUNT;\r\n                            }\r\n                            if (pckgcnt.toString() == null || pckgcnt.toString() === \"\") {\r\n                                pckgcnt = 0;\r\n                            }\r\n                            if (pckgcnt1.toString() == null || pckgcnt1.toString() === \"\") {\r\n                                pckgcnt1 = 0;\r\n                            }\r\n                            let totalValue = pckgcnt + pckgcnt1;\r\n                            strPckgCnt = totalValue.toString();\r\n\r\n                            if (strPckgCnt == null || strPckgCnt === \"\") {\r\n                                strPckgCnt = \"0\";\r\n                            }\r\n\r\n                            htmlBuilder += \"<td align=right nowrap><span class=c2>\" + strPckgCnt + \"</span></td>\"\r\n\r\n                        }\r\n                        if (summcnt == 0) {\r\n                            if (reqType == \"Mail\") {\r\n                                htmlBuilder += \"<td  width='100%' align='left' valign='middle' rowspan=\" + this.lstTable2Data.length + \" ><img width='800px;' src=\" + imgEmpDayForDockPath + \"EmpProdDockSumm.png /></td>\";\r\n\r\n                            }\r\n                            else {\r\n                                htmlBuilder += \"<td  colspan='12' align='left' valign='middle' rowspan=\" + this.lstTable2Data.length + \" ><div align='center' style='text-align:center'><img height='280' width='550' src=\" + imgEmpDayForDockPath + \"EmpProdDockSumm.png /></div></td>\";\r\n\r\n                            }\r\n\r\n\r\n\r\n                        }\r\n                        htmlBuilder += \"</tr>\";\r\n                    }\r\n                }\r\n\r\n                htmlBuilder += \"</table>\";\r\n                htmlBuilder += \"</td></tr>\";\r\n\r\n                htmlBuilder += \"</Table>\";\r\n                return await htmlBuilder;\r\n\r\n            }\r\n            catch (ex) {\r\n                htmlBuilder = '';\r\n                return htmlBuilder;\r\n            }\r\n        }\r\n        else {\r\n            let htmlBuilder: string = '';\r\n            try {\r\n                this.statusCode = -1;\r\n                this.growlMessage = [];\r\n                let sbMailText: string;\r\n                let _strFrmDt: string;\r\n                let _strToDt: string;\r\n\r\n                let imgserverPath: string = '';\r\n                let imgEmpDayForDockPath: string = '';\r\n\r\n                await this.commonService.getServerIP()\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        var data = res.json() as AtParWebApiResponse<string>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.ipAddress = data.DataVariable.toString();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            htmlBuilder = '';\r\n                            return htmlBuilder;\r\n                        }\r\n                    });\r\n\r\n\r\n                await this.commonService.getSSLConfigDetails()\r\n                    .catch(this.httpService.handleError)\r\n                    .then((res: Response) => {\r\n                        this.growlMessage = [];\r\n                        var data = res.json() as AtParWebApiResponse<SSL_CONFIG_DETAILS>;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.gstrProtocal = data.Data.PROTOCOL.toString();\r\n                                this.gstrServerName = data.Data.SERVER_NAME.toString();\r\n                                this.gstrPortNo = data.Data.PORT_NO.toString();\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (data.StatType != StatusType.Success) {\r\n                            htmlBuilder = '';\r\n                            return htmlBuilder;\r\n                        }\r\n\r\n                    });\r\n\r\n                let phyname;\r\n                imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/atpar/web/images/';\r\n                let Curdate: Date = this.frmDate;\r\n                let strTitle: string = \"\\\"\" + \"AtparVersion2.4.4\" + \"\\\"\";\r\n                let title: string = '\"\"' + \"AtparVersion 2.8\" + '\"\"';\r\n\r\n\r\n                htmlBuilder += \"<Table align= left width= 100 % cellpadding=0 cellspacing = 0 vAlign= top>\";\r\n                if (reqType === \"Print\") {\r\n\r\n                    htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg title=Atpar Version 2.4.4><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\"\r\n                    htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                        \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                    htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                    htmlBuilder += \"<tr><td colspan=5 align=left><b><span class=c2>Deliver cycle time report from  \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \" </span></b></td><td align=right valign=top>&nbsp;\"\r\n                    htmlBuilder += \"<A  href=\" + \"\" + \"javascript:window.print()\" + \"><img src=\" + imgserverPath + \"print.jpg></A>\"\r\n                }\r\n                else {\r\n                    if (reqType === \"Mail\") {\r\n                        htmlBuilder += \"<TR width='100%'  height='27px'><td colspan=2 align=left bgcolor='#fe9836' width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg></td><td align=left  width='85%' height='63' nowrap></td></TR>\"\r\n                    }\r\n                    else {\r\n                        htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg><img src=\" + imgserverPath + \"topbg.jpg width=100% height=63></td></TR>\";\r\n                    }\r\n                    htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                        \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                    htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0></tr>\"\r\n                    htmlBuilder += \"<tr><td colspan=5 align=left><b><span class=c2>Employee Productivity by Day From \" + this.convertDateFormate(this.fromDate) + \" To \" + this.convertDateFormate(this.toDate) + \"</b></span></td><td align=right valign=top>&nbsp;\";\r\n                }\r\n                htmlBuilder += \"</td></tr><tr height=20></tr></table></td></tr><tr><td colspan=2> \";\r\n                htmlBuilder += \"<table align=left width=40% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1 cellpadding=4>\";\r\n                htmlBuilder += \"<tr bgcolor=#d3d3d3>\";\r\n                htmlBuilder += \"<td align=center nowrap><b><span class=c2>Less than (hours)</span></b></td>\";\r\n                htmlBuilder += \"<td align=center nowrap><b><span class=c2>Count</span></b></td>\";\r\n                htmlBuilder += \"<td align=center nowrap><b><span class=c2>%</span></b></td>\";\r\n                htmlBuilder += \"</tr>\";\r\n\r\n                for (let i = 0; i <= this.lstCycleHourDetails.length - 1; i++) {\r\n                    htmlBuilder += \"<tr>\"\r\n                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstCycleHourDetails[i].HOURSSUMMARY + \"</span></td>\";\r\n                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstCycleHourDetails[i].COUNTSUMMARY + \"</span></td>\";\r\n                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstCycleHourDetails[i].COUNT_PERCENTSUMMARY + \"</span></td>\";\r\n                    htmlBuilder += \"</tr>\"\r\n                }\r\n                htmlBuilder += \"</table></td></tr><tr><td colspan=2>\"\r\n                htmlBuilder += \"<table align=left width=40% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1>\";\r\n                htmlBuilder += \"<tr bgcolor=#d3d3d3>\"\r\n                htmlBuilder += \"<td align=center nowrap colspan=2><b><span class=c2>Results</span></b></td>\"\r\n                htmlBuilder += \"</tr>\"\r\n                htmlBuilder += \"<tr>\"\r\n                htmlBuilder += \"<td align=center nowrap><span class=c2>COUNT</span></td>\"\r\n                htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.Results[0].Count + \"</span></td>\"\r\n                htmlBuilder += \"</tr>\"\r\n                htmlBuilder += \"<tr>\"\r\n                htmlBuilder += \"<td align=center nowrap><span class=c2>AVG</span></td>\"\r\n                htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.Results[0].AVG + \"</span></td>\"\r\n                htmlBuilder += \"</tr>\"\r\n                htmlBuilder += \"<tr>\"\r\n                htmlBuilder += \"<td align=center nowrap><span class=c2>ST.DEV</span></td>\"\r\n                htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.Results[0].StDev + \"</span></td>\"\r\n                htmlBuilder += \"</tr>\"\r\n                htmlBuilder += \"<tr>\"\r\n                htmlBuilder += \"<td align=center nowrap><span class=c2>MAX</span></td>\"\r\n                htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.Results[0].Max + \"</span></td>\"\r\n                htmlBuilder += \"</tr>\"\r\n                htmlBuilder += \"<tr>\"\r\n                htmlBuilder += \"<td align=center nowrap><span class=c2>MIN</span></td>\"\r\n                htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.Results[0].Min + \"</span></td>\"\r\n                htmlBuilder += \"</tr>\"\r\n                htmlBuilder += \"</table></td></tr><tr><td colspan=2>\"\r\n                htmlBuilder += \"<table align=left width=99% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1>\";\r\n                htmlBuilder += \"<tr bgcolor=#d3d3d3>\";\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Tracking #</span></b></td>\";\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Delivery Person</span></b></td>\";\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Cycle Time</span></b></td>\";\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Hours</span></b></td>\";\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Minutes</span></b></td>\";\r\n                htmlBuilder += \"<td align=center nowrap ><b><span class=c2>Seconds</span></b></td>\";\r\n                htmlBuilder += \"<td align=center nowrap><b><span class=c2>Total Hours</span></b></td>\";\r\n                htmlBuilder += \"</tr>\";\r\n\r\n                for (let j = 0; j <= this.lstFinalCycleData.length - 1; j++) {\r\n                    htmlBuilder += \"<tr>\";\r\n                    if (reqType === \"Print\") {\r\n                        if (this.lstFinalCycleData[j].TRACKING_NBR == null || this.lstFinalCycleData[j].TRACKING_NBR === \"\") {\r\n                            this.lstFinalCycleData[j].TRACKING_NBR = \"\";\r\n                        }\r\n\r\n                        htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstFinalCycleData[j].TRACKING_NBR + \"</span></td>\";\r\n                    }\r\n                    else {\r\n                        if (this.lstFinalCycleData[j].TRACKING_NBR == null || this.lstFinalCycleData[j].TRACKING_NBR === \"\") {\r\n                            this.lstFinalCycleData[j].TRACKING_NBR = \"\";\r\n                        }\r\n\r\n                        htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstFinalCycleData[j].TRACKING_NBR + \"</span></td>\";\r\n                    }\r\n\r\n                    htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstFinalCycleData[j].DELIVER_FROM + \"</span></td>\";\r\n                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstFinalCycleData[j].CYCLE_TIME + \"</span></td>\";\r\n                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstFinalCycleData[j].HOURS + \"</span></td>\";\r\n                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstFinalCycleData[j].MINS + \"</span></td>\";\r\n                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstFinalCycleData[j].SECONDS + \"</span></td>\";\r\n                    htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstFinalCycleData[j].TOT_HOURS + \"</span></td>\";\r\n                    htmlBuilder += \"</tr>\";\r\n\r\n                }\r\n                htmlBuilder += \"</table>\";\r\n                htmlBuilder += \"</td></tr>\";\r\n                htmlBuilder += \"</Table>\";\r\n                return htmlBuilder;\r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    convertDateFormate(strDate) {\r\n        var date = new Date(strDate),\r\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n            day = (\"0\" + date.getDate()).slice(-2);\r\n        return [mnth, day , date.getFullYear()].join(\"/\");\r\n    }\r\n\r\n    selectedTab(option: any) {\r\n        debugger;\r\n    }\r\n\r\n    enableSelectedTab(option: any) {\r\n        this.tabSelection = option;\r\n        if (option != null) {\r\n            this.activeTab = option.title;\r\n        }\r\n    }\r\n\r\n    closeMailPopup() {\r\n        this.growlMessage = [];\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-productivity-report.component.ts","import { Component, OnDestroy, Input } from '@angular/core';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { Employee } from '../components/datatable/employee';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { Message } from '../components/common/api';\r\nimport { TokenEntry_Enum, ClientType } from '../Shared/AtParEnums';\r\nimport { ReleasePackagesServiceComponent } from './deliver-release-packages.service.component'\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { MT_POU_DEPT } from '../../app/Entities/MT_POU_DEPT';\r\nimport { MT_ATPAR_TRANSACTION } from '../../app/Entities/MT_ATPAR_TRANSACTION';\r\nimport { MT_POU_CASE_CART_HEADER } from '../../app/Entities/MT_POU_CASE_CART_HEADER';\r\nimport { StatusType } from '../Shared/AtParEnums';\r\nimport { AtParSharedDataService } from \"../Shared/AtParSharedDataService\";\r\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\r\nimport { EnumApps } from '../Shared/AtParEnums';\r\nimport { List, Enumerable } from 'linqts';\r\nimport { asEnumerable } from 'linq-es5';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { MT_ATPAR_ORG_GROUP_BUNITS } from '../../app/Entities/MT_ATPAR_ORG_GROUP_BUNITS';\r\nimport { MT_ATPAR_DETAIL_TRANSACTION } from '../../app/Entities/mt_atpar_detail_transaction';\r\nimport { SelectItem } from '../components/common/api';\r\nimport { BusinessType, AppTransactionStatus } from '../Shared/AtParEnums';\r\nimport { ConfirmationService } from '../components/common/api';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./deliver-release-packages.component.html'),\r\n    providers: [datatableservice, AtParCommonService, ReleasePackagesServiceComponent, AtParConstants, AtParSharedDataService, ConfirmationService],\r\n})\r\n\r\nexport class ReleasePackagesComponent {\r\n    deviceTokenEntry: string[] = [];\r\n    recordsPerPageSize: number;\r\n    growlMessage: Message[] = [];\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    selectedOrgGroupId: string;\r\n    selectedBunit: string = \"\";\r\n    orgGrpId: string = \"\";\r\n    blnShowOrgGroupDD: boolean = false;\r\n    lstDBData: MT_ATPAR_DETAIL_TRANSACTION[];\r\n    lstgridfilterData: any[];\r\n    lstOrgGroups: SelectItem[] = [];\r\n    lstFilteredBUnits: SelectItem[] = [];\r\n    orgGroupIDForDBUpdate: string;\r\n    showGrid: boolean = false;\r\n    selectedParLocation: string = \"\";\r\n    transactionIdlist: string = \"\";\r\n    UserIdlist: string = \"\";\r\n    tranId: number;\r\n    tranBoolean: boolean;\r\n    startIndex: number;\r\n    EndIndex: number;\r\n    Lflag: string;\r\n    pTransId: string;\r\n    pUserId: string;\r\n    appId: number;\r\n    selectedFlag: boolean = false;\r\n\r\n    constructor(private httpService: HttpService, private _http: Http, public dataservice: datatableservice,\r\n        private commonService: AtParCommonService,\r\n        private releasePackagesService: ReleasePackagesServiceComponent,\r\n        private spinnerService: SpinnerService,\r\n        private atParConstant: AtParConstants,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private atParSharedDataService: AtParSharedDataService,\r\n        private confirmationService: ConfirmationService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n            this.recordsPerPageSize = + this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n            this.appId = EnumApps.Deliver;\r\n            this.bindOrgGroups();\r\n            this.spinnerService.stop();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n\r\n    async bindOrgGroups() {\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.commonService.getUserOrgGroups(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n\r\n\r\n                            if (this.orgGroupData.length == 1) {\r\n\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.orgGrpId = this.orgGroupData[0].ORG_GROUP_ID + \" - \" + this.orgGroupData[0].ORG_GROUP_NAME;\r\n\r\n                                this.populateBusinessUnits();\r\n\r\n                                this.spinnerService.stop();\r\n                                break;\r\n\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.blnShowOrgGroupDD = true;\r\n\r\n                                this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" })\r\n                                this.lstFilteredBUnits = [];\r\n                                this.lstFilteredBUnits.push({ label: \"Select BUnit\", value: \"\" })\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID !== \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + \" - \" + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindOrgGroups\");\r\n        }\r\n    }\r\n\r\n    async populateBusinessUnits() {\r\n        this.spinnerService.start();\r\n        try {\r\n            if (this.blnShowOrgGroupLabel == true) {\r\n                this.orgGroupIDForDBUpdate = this.orgGrpId.split(\"-\")[0];\r\n            }\r\n            else {\r\n                this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n            }\r\n            await this.commonService.getOrgBusinessUnits(this.orgGroupIDForDBUpdate, BusinessType.Inventory).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUP_BUNITS>;\r\n                    this.growlMessage = [];\r\n                    this.lstFilteredBUnits = [];\r\n                    this.lstFilteredBUnits.push({ label: \"Select BUnit\", value: \"\" })\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            for (let i = 0; i < data.DataList.length; i++) {\r\n                                this.lstFilteredBUnits.push({\r\n                                    label: data.DataList[i].toString(),\r\n                                    value: data.DataList[i].toString()\r\n                                })\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.showGrid = false;\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.showGrid = false;\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.showGrid = false;\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"populateBusinessUnits\");\r\n        }\r\n    }\r\n\r\n    async ddlOrgGrpIdChanged() {\r\n        this.showGrid = false;\r\n        this.growlMessage = [];\r\n\r\n        if (this.selectedOrgGroupId == \"Select One\") {\r\n            this.lstFilteredBUnits = [];\r\n            this.lstFilteredBUnits.push({ label: \"Select BUnit\", value: \"\" });\r\n            return;\r\n        }\r\n        this.spinnerService.start();\r\n        try {\r\n            this.selectedBunit = \"\";\r\n            this.populateBusinessUnits();\r\n            this.spinnerService.stop();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ddlOrgGrpIdChanged\");\r\n        }\r\n    }\r\n\r\n    ddlBUnitChanged() {\r\n\r\n\r\n        this.growlMessage = [];\r\n        this.showGrid = false;\r\n    }\r\n\r\n    go_Click() {\r\n        try {\r\n            this.showGrid = false;\r\n            if (this.blnShowOrgGroupLabel == true) {\r\n                this.selectedOrgGroupId = this.orgGrpId.split(\"-\")[0].trim();\r\n                this.BindDataGrid();\r\n            }\r\n            else if (this.blnShowOrgGroupDD) {\r\n                if (this.selectedOrgGroupId == \"Select One\" || this.selectedOrgGroupId == undefined) {\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid Org Group ID\" });\r\n                }\r\n                else {\r\n                    this.BindDataGrid();\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"go_Click\");\r\n        }\r\n    }\r\n\r\n    BindDataGrid() {\r\n        try {\r\n            if (this.selectedBunit === \"\") {\r\n                this.selectedBunit = \"All\";\r\n            }\r\n            this.GetPackageDetails(\"\", \"\", \"\");\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"BindDataGrid\");\r\n        }\r\n    }\r\n\r\n    async GetPackageDetails(Lflag, pTransId, pUserId) {\r\n        this.spinnerService.start();\r\n        try {\r\n            await this.releasePackagesService.GetReleasePackages(this.appId, pUserId, this.selectedOrgGroupId, this.selectedBunit, this.selectedParLocation, Lflag, pTransId).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_DETAIL_TRANSACTION>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.showGrid = true;\r\n                            this.lstDBData = data.DataList;\r\n                            for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                                let changeDate = this.lstDBData[i].DOWNLOAD_DT_TIME;\r\n                                var dateStr = new Date(changeDate).toLocaleString().replace(/[^A-Za-z 0-9 \\.,\\?\"\"!@#\\$%\\^&\\*\\(\\)-_=\\+;:<>\\/\\\\\\|\\}\\{\\[\\]`~]*/g, '');\r\n                                var date = new Date(dateStr);\r\n                                this.lstDBData[i].DOWNLOAD_DT_TIME = date.toLocaleString();\r\n                                this.lstDBData[i].DOWNLOAD_DT_TIME = this.lstDBData[i].DOWNLOAD_DT_TIME.replace(',', ' ');\r\n                                if (this.lstDBData[i].CURRENT_EVENT == AppTransactionStatus.Downloaded.toString()) {\r\n                                    this.lstDBData[i].CURRENT_EVENT = \"DownLoad\";\r\n                                }\r\n                                else if (this.lstDBData[i].CURRENT_EVENT == AppTransactionStatus.statLoad.toString()) {\r\n                                    this.lstDBData[i].CURRENT_EVENT = \"Load\";\r\n                                }\r\n                                else if (this.lstDBData[i].CURRENT_EVENT == AppTransactionStatus.statPickup.toString()) {\r\n                                    this.lstDBData[i].CURRENT_EVENT = \"Pickup\";\r\n                                }\r\n                                else if (this.lstDBData[i].CURRENT_EVENT == AppTransactionStatus.statUnload.toString()) {\r\n                                    this.lstDBData[i].CURRENT_EVENT = \"Unload\";\r\n                                }\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.showGrid = false;\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.showGrid = false;\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.showGrid = false;\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"GetPackageDetails\");\r\n            this.showGrid = false;\r\n        }\r\n    }\r\n\r\n    unlockRow(event, data: MT_ATPAR_DETAIL_TRANSACTION) {\r\n        try {\r\n            this.growlMessage = [];\r\n            if (event == true) {\r\n                for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                    if (this.lstDBData[i].TRANSACTION_ID == data.TRANSACTION_ID) {\r\n                        this.lstDBData[i].Status = true;\r\n                        this.lstDBData[i].CHK_VALUE = \"1\";\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                    if (this.lstDBData[i].TRANSACTION_ID == data.TRANSACTION_ID) {\r\n                        this.lstDBData[i].Status = false;\r\n                        this.lstDBData[i].CHK_VALUE = \"0\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"unlockRow\");\r\n        }\r\n    }\r\n\r\n    UnlockSelectedRecords() {\r\n        try {\r\n            this.transactionIdlist = '';\r\n            this.UserIdlist = '';\r\n            for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                if (this.lstDBData[i].CHK_VALUE === \"1\") {\r\n                    this.transactionIdlist = this.transactionIdlist.concat(this.lstDBData[i].TRANSACTION_ID + \",\");\r\n                    this.UserIdlist = this.UserIdlist.concat(this.lstDBData[i].UID + \",\");\r\n                }\r\n            }\r\n            if (this.transactionIdlist != '' || this.transactionIdlist != undefined) {\r\n                this.transactionIdlist = this.transactionIdlist.replace(/,\\s*$/, \"\");//this removes last unwanted comma\r\n            }\r\n            if (this.UserIdlist != '' || this.UserIdlist != undefined) {\r\n                this.UserIdlist = this.UserIdlist.replace(/,\\s*$/, \"\");//this removes last unwanted comma\r\n            }\r\n            if (this.transactionIdlist === \"\") {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select Order(s) to unlock\" });\r\n                return;\r\n            }\r\n            this.growlMessage = [];\r\n            this.confirmationService.confirm({\r\n                message: \"Are you sure you want to unlock the Order(s) ?\",\r\n                accept: () => {\r\n                    this.GetPackageDetails('Y', this.transactionIdlist, this.UserIdlist);\r\n                },\r\n                reject: () => {\r\n                }\r\n            })\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"UnlockSelectedRecords\");\r\n        }\r\n    }\r\n\r\n    checkAll() {\r\n        try {\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n            if (this.lstgridfilterData != null && this.lstgridfilterData != undefined) {\r\n                if (this.EndIndex > this.lstgridfilterData.length) {\r\n                    this.EndIndex = this.lstgridfilterData.length;\r\n                }\r\n\r\n                for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                    this.lstgridfilterData[i].Status = true;\r\n                    this.lstgridfilterData[i].CHK_VALUE = \"1\";\r\n                }\r\n            }\r\n            else {\r\n                if (this.EndIndex > this.lstDBData.length) {\r\n                    this.EndIndex = this.lstDBData.length;\r\n                }\r\n\r\n                for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                    this.lstDBData[i].Status = true;\r\n                    this.lstDBData[i].CHK_VALUE = \"1\";\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkAll\");\r\n        }\r\n    }\r\n\r\n    uncheckAll() {\r\n        try {\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n            if (this.lstgridfilterData != null && this.lstgridfilterData != undefined) {\r\n                if (this.EndIndex > this.lstgridfilterData.length) {\r\n                    this.EndIndex = this.lstgridfilterData.length;\r\n                }\r\n\r\n                for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                    this.lstgridfilterData[i].Status = false;\r\n                    this.lstgridfilterData[i].CHK_VALUE = '0';\r\n                }\r\n            }\r\n            else {\r\n                if (this.EndIndex > this.lstDBData.length) {\r\n                    this.EndIndex = this.lstDBData.length;\r\n                }\r\n\r\n                for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                    this.lstDBData[i].Status = false;\r\n                    this.lstDBData[i].CHK_VALUE = '0';\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"uncheckAll\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * removing values in string  contains comma separated values\r\n     * @param list\r\n     * @param value\r\n     * @param separator\r\n     */\r\n    removeTransactionId(list, value, separator) {\r\n        try {\r\n            separator = separator || \",\";\r\n            var values = list.split(separator);\r\n            for (var i = 0; i < values.length; i++) {\r\n                if (values[i] == value) {\r\n                    values.splice(i, 1);\r\n                    return values.join(separator);\r\n                }\r\n            }\r\n            return list;\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"removeTransactionId\");\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-release-packages.component.ts","import { OnInit, Component, OnDestroy, Input, ViewChild} from '@angular/core';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { Message } from './../components/common/api';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../entities/mt_atpar_org_groups';\r\nimport { MT_DELV_LOC_DETAILS } from '../entities/mt_delv_loc_details';\r\nimport { DeliverySetupDropOffServices } from './deliver-setup-dropoff-location-services';\r\nimport { SelectItem } from './../components/common/api';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { ClientType, BusinessType, ModeEnum, StatusType, YesNo_Enum, TokenEntry_Enum } from '../Shared/AtParEnums';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\nimport { DataTable } from '../components/datatable/datatable';\r\n\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./deliver-setup-drop-off-locations.component.html'),\r\n    providers: [AtParCommonService, HttpService, AtParConstants, DeliverySetupDropOffServices]\r\n})\r\n\r\nexport class SetupDropOffLoactionsComponent {\r\n    @ViewChild(DataTable) dataTableComponent: DataTable;\r\n    searchFrom: boolean = true;\r\n    addEditFrom: boolean = false;\r\n    orgGrpId: string = \"\";\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n    lblShowOrgGroupLabel: boolean = false;\r\n    ddlShowOrgGroupId: boolean = false;\r\n    orgGroupIdNgModel: string = \"\";\r\n    lstOrgGroups: SelectItem[] = [];\r\n    deviceTokenEntry: string[] = [];\r\n    growlMessage: Message[] = [];\r\n    pageSize: number;\r\n    searchLocationNgModel: string = \"\";\r\n    searchDescriptionNgModel: string = \"\";\r\n    showGrid: boolean = false;\r\n    previousLocationdata: string;\r\n    ddlStatusType: any;\r\n    deliversetuplocDetails: MT_DELV_LOC_DETAILS;\r\n    lstGridData: MT_DELV_LOC_DETAILS[];\r\n    mainlstGridData: Array<MT_DELV_LOC_DETAILS>;\r\n    orgGroupIDForDBUpdate: string;\r\n    statusMessage: string;\r\n    locationValidation: number;\r\n    orgIdDisabled: boolean = false;\r\n    saveAndUpdateButton: boolean = true;\r\n    mode: string;\r\n    statusType: string = \"\";\r\n    breadCrumbMenu: Menus;\r\n\r\n    public constructor(\r\n        private deliverySetupDropOffServices: DeliverySetupDropOffServices,\r\n        private spinnerService: SpinnerService,\r\n        private commonService: AtParCommonService,\r\n        private httpService: HttpService,\r\n        private atParConstant: AtParConstants,\r\n    ) {\r\n        this.breadCrumbMenu = new Menus();\r\n    }\r\n\r\n    async  ngOnInit() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n            this.pageSize = + this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n            this.ddlStatusType = [];\r\n            this.ddlStatusType.push({ label: 'All', value: \"\" });\r\n            this.ddlStatusType.push({ label: 'Active', value: true });\r\n            this.ddlStatusType.push({ label: 'InActive', value: false });\r\n            this.spinnerService.stop();\r\n            this.spinnerService.start();\r\n            this.deliversetuplocDetails = new MT_DELV_LOC_DETAILS();\r\n            this.mainlstGridData = new Array<MT_DELV_LOC_DETAILS>()\r\n            await this.bindOrgGroups();\r\n            this.spinnerService.stop();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n\r\n    async bindOrgGroups() {\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.commonService.getUserOrgGroups(this.deviceTokenEntry[TokenEntry_Enum.UserID],\r\n                this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.spinnerService.stop();\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n                            if (this.orgGroupData.length == 1) {\r\n                                this.lblShowOrgGroupLabel = true;\r\n                                this.orgGrpId = this.orgGroupData[0].ORG_GROUP_ID + \" - \" + this.orgGroupData[0].ORG_GROUP_NAME;\r\n                                this.orgGroupIdNgModel = this.orgGroupData[0].ORG_GROUP_ID;\r\n                                break;\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.ddlShowOrgGroupId = true;\r\n                                this.lstGridData = [];\r\n                                this.lstOrgGroups = [];\r\n                                this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" })\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID !== \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + \" - \" + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID + \" - \" + this.orgGroupData[i].ORG_GROUP_NAME })\r\n                                    }\r\n                                }\r\n                                break;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            this.spinnerService.stop();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindOrgGroups\");\r\n        }\r\n    }\r\n\r\n    async ddlOrgGrpIdChanged() {\r\n        try {\r\n            this.showGrid = false;\r\n            if (this.orgGroupIdNgModel != \"Select One\") {\r\n                if (this.deliversetuplocDetails.DROP_OFF_LOCATION_ID != null &&\r\n                    this.deliversetuplocDetails.DROP_OFF_LOCATION_ID != undefined\r\n\r\n                    && this.deliversetuplocDetails.DROP_OFF_LOCATION_ID.trim().length > 0) {\r\n                    this.saveAndUpdateButton = false;\r\n                } else {\r\n                    this.saveAndUpdateButton = true;\r\n                }\r\n            }\r\n            else {\r\n                this.saveAndUpdateButton = true;\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ddlOrgGrpIdChanged\");\r\n        }\r\n    }\r\n\r\n    async  btn_go() {\r\n        try {\r\n            this.statusType = \"\";\r\n            this.mainlstGridData = [];\r\n            this.lstGridData = [];\r\n            this.growlMessage = [];\r\n            if (this.ddlShowOrgGroupId) {\r\n                if (this.orgGroupIdNgModel == \"Select One\" || this.orgGroupIdNgModel == \"\") {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select the Org Group Id \" });\r\n                }\r\n                else {\r\n                    this.showGrid = false;\r\n                    this.growlMessage = [];\r\n                    await this.getDropOffLocsLists();\r\n                }\r\n            }\r\n            else {\r\n                this.showGrid = false;\r\n                this.growlMessage = [];\r\n                await this.getDropOffLocsLists();\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"btn_go\");\r\n        }\r\n    }\r\n\r\n    editOrggroupId: string;\r\n\r\n    async   getDropOffLocsLists() {\r\n        if (this.lblShowOrgGroupLabel) {\r\n            this.editOrggroupId = this.orgGrpId;\r\n            this.orgGroupIDForDBUpdate = this.orgGrpId.split(\"-\")[0].trim();\r\n        }\r\n        else {\r\n            this.editOrggroupId = this.orgGroupIdNgModel;\r\n            this.orgGroupIDForDBUpdate = this.orgGroupIdNgModel.split(\"-\")[0].trim();\r\n        }\r\n        if (this.searchLocationNgModel == undefined || this.searchLocationNgModel == null ||\r\n            this.searchDescriptionNgModel == undefined || this.searchDescriptionNgModel == null) {\r\n            this.searchLocationNgModel.replace(/\\'/g, \"''\").trim();\r\n            this.searchDescriptionNgModel.replace(/\\'/g, \"''\").trim();\r\n        }\r\n        try {\r\n            this.growlMessage = [];\r\n            this.lstGridData = [];\r\n            this.spinnerService.start();\r\n            await this.deliverySetupDropOffServices.getDropOffLocs(this.searchLocationNgModel, this.searchDescriptionNgModel, this.orgGroupIDForDBUpdate, this.deviceTokenEntry)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_DELV_LOC_DETAILS>;\r\n                    this.spinnerService.stop();\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            let lstGrid = res.json().DataList;\r\n                            if (lstGrid.length > 0) {\r\n                                this.lstGridData = lstGrid;\r\n                                for (let x = 0; x < this.lstGridData.length; x++) {\r\n                                    let dropOfflocDetails = new MT_DELV_LOC_DETAILS();\r\n                                    dropOfflocDetails.DROP_OFF_LOCATION_ID = this.lstGridData[x].DROP_OFF_LOCATION_ID;\r\n                                    dropOfflocDetails.LAST_CLIENT_ADDRESS = this.lstGridData[x].LAST_CLIENT_ADDRESS;\r\n                                    dropOfflocDetails.LAST_UPDATE_DATE = this.lstGridData[x].LAST_UPDATE_DATE;\r\n                                    dropOfflocDetails.LAST_UPDATE_USER = this.lstGridData[x].LAST_UPDATE_USER;\r\n                                    dropOfflocDetails.LOCATION_DESC = this.lstGridData[x].LOCATION_DESC;\r\n                                    dropOfflocDetails.ORG_GROUP_ID = this.lstGridData[x].ORG_GROUP_ID;\r\n                                    dropOfflocDetails.STATUS = this.lstGridData[x].STATUS;\r\n                                    this.mainlstGridData.push(dropOfflocDetails);\r\n                                }\r\n                                this.showGrid = true;\r\n                            }\r\n                            else {\r\n                                this.showGrid = false;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage = [];\r\n                            this.showGrid = false;\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage = [];\r\n                            this.showGrid = false;\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage = [];\r\n                            this.showGrid = false;\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getDropOffLocsLists\");\r\n        }\r\n    }\r\n\r\n    editdropOffLocation(rowData) {\r\n        try {\r\n            this.breadCrumbMenu.SUB_MENU_NAME = 'Edit Drop Off Location';\r\n            this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n            this.growlMessage = [];\r\n            this.deliversetuplocDetails = new MT_DELV_LOC_DETAILS();\r\n            this.deliversetuplocDetails.DROP_OFF_LOCATION_ID = rowData.DROP_OFF_LOCATION_ID;\r\n            this.previousLocationdata = rowData.DROP_OFF_LOCATION_ID;\r\n            this.deliversetuplocDetails.LOCATION_DESC = rowData.LOCATION_DESC;\r\n            this.deliversetuplocDetails.ORG_GROUP_ID = rowData.ORG_GROUP_ID;\r\n            this.orgGrpId = rowData.ORG_GROUP_ID\r\n            this.orgGrpId = this.editOrggroupId;\r\n            this.lblShowOrgGroupLabel = true;\r\n            this.ddlShowOrgGroupId = false;\r\n            this.addEditFrom = true;\r\n            this.searchFrom = false;\r\n            this.showGrid = false;\r\n            this.mode = ModeEnum[ModeEnum.Edit].toString();\r\n            this.locationValidation = 0;\r\n            this.saveAndUpdateButton = false;\r\n        }\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, \"editdropOffLocation\");\r\n        }\r\n    }\r\n\r\n    bindModelDataChange(event: any) {\r\n        try {\r\n            if (\"saveLocationsNgModel\" == event.TextBoxID.toString()) {\r\n                this.locationValidation = event.validationrules.filter(x => x.status == false).length;\r\n            }\r\n            if (this.ddlShowOrgGroupId) {\r\n                if (this.orgGroupIdNgModel != \"Select One\" && this.locationValidation == 0) {\r\n                    this.saveAndUpdateButton = false;\r\n                }\r\n                else {\r\n                    this.saveAndUpdateButton = true;\r\n                }\r\n            }\r\n            else if (!this.ddlShowOrgGroupId) {\r\n                if (this.locationValidation == 0) {\r\n                    this.saveAndUpdateButton = false;\r\n                }\r\n                else {\r\n                    this.saveAndUpdateButton = true;\r\n                }\r\n            }\r\n        }\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, \"bindModelDataChange\");\r\n        }\r\n    }\r\n\r\n    add() {\r\n        try {\r\n            this.breadCrumbMenu.SUB_MENU_NAME = 'Create Drop Off Location';\r\n            this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n            this.growlMessage = [];\r\n            this.deliversetuplocDetails = new MT_DELV_LOC_DETAILS();\r\n            this.deliversetuplocDetails.LOCATION_DESC = null;\r\n            this.deliversetuplocDetails.DROP_OFF_LOCATION_ID = null;\r\n            this.addEditFrom = true;\r\n            this.searchFrom = false;\r\n            this.showGrid = false;\r\n            this.orgGroupIdNgModel = \"Select One\"\r\n            this.mode = ModeEnum[ModeEnum.Add].toString();\r\n            this.mode = \"Add\"\r\n            this.saveAndUpdateButton = true;\r\n            this.orgIdDisabled = false;\r\n            this.searchDescriptionNgModel = \"\";\r\n            this.searchLocationNgModel = \"\";\r\n        }\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, \"add\");\r\n        }\r\n    }\r\n\r\n    close() {\r\n        try {\r\n            this.breadCrumbMenu.SUB_MENU_NAME = '';\r\n            this.spinnerService.emitChangeBreadCrumbEvt(JSON.stringify(this.breadCrumbMenu));\r\n            this.addEditFrom = false;\r\n            this.searchFrom = true;\r\n            this.showGrid = false;\r\n            this.orgGroupIdNgModel = \"Select One\"\r\n            this.deliversetuplocDetails = new MT_DELV_LOC_DETAILS();\r\n            this.growlMessage = [];\r\n            this.deliversetuplocDetails.DROP_OFF_LOCATION_ID = null;\r\n            this.searchLocationNgModel = \"\";\r\n            if (this.mode == \"Edit\") {\r\n                this.bindOrgGroups();\r\n                this.lblShowOrgGroupLabel = false;\r\n            }\r\n        }\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, \"close\");\r\n        }\r\n    }\r\n\r\n    async saveOrUpdate() {\r\n        try {\r\n            if (this.mode == \"Add\") {\r\n                await this.saveDropoffLocDetails();\r\n            }\r\n            else if (this.mode == \"Edit\") {\r\n                await this.upDateDropoffLocDetails();\r\n            }\r\n        }\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, \"saveOrUpdate\");\r\n        }\r\n    }\r\n\r\n    async saveDropoffLocDetails() {\r\n        this.growlMessage = [];\r\n        try {\r\n            if (this.deliversetuplocDetails.LOCATION_DESC == undefined || this.deliversetuplocDetails.LOCATION_DESC == null) {\r\n                this.deliversetuplocDetails.LOCATION_DESC = \"\";\r\n            }\r\n            if (this.lblShowOrgGroupLabel == true) {\r\n                this.orgGroupIDForDBUpdate = this.orgGrpId.split(\" - \")[0].trim();\r\n            }\r\n            else {\r\n                this.orgGroupIDForDBUpdate = this.orgGroupIdNgModel;\r\n            }\r\n            this.deliversetuplocDetails.ORG_GROUP_ID = this.orgGroupIDForDBUpdate.split(\"-\")[0];\r\n            this.deliversetuplocDetails.DROP_OFF_LOCATION_ID.replace(/\\'/g, \"''\").trim();\r\n            this.deliversetuplocDetails.LOCATION_DESC.replace(/\\'/g, \"''\").trim();\r\n            this.deliversetuplocDetails.STATUS = true;\r\n            this.spinnerService.start();\r\n            await this.deliverySetupDropOffServices.addDropOffLocs(this.deliversetuplocDetails, this.deviceTokenEntry)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    let webresp = res.json() as AtParWebApiResponse<MT_DELV_LOC_DETAILS>;\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.growlMessage = [];\r\n                            this.statusMessage = AtParConstants.Created_Msg.replace(\"1%\", \"Drop Off Location\").replace(\"2%\", this.deliversetuplocDetails.DROP_OFF_LOCATION_ID);\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: this.statusMessage });\r\n                            this.deliversetuplocDetails = new MT_DELV_LOC_DETAILS();\r\n                            this.orgGroupIdNgModel = \"Select One\";\r\n                            this.saveAndUpdateButton = true;\r\n                            this.showGrid = false;\r\n                            if (this.ddlShowOrgGroupId) {\r\n                                document.getElementById('txtddllstOrgGroups').focus();\r\n                            }\r\n                            else {\r\n                                document.getElementById('saveLocationsNgModel').focus();\r\n                            }\r\n                            this.locationValidation = null;\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage = [];\r\n                            if (webresp.StatusCode == AtparStatusCodes.ATPAR_E_LOCGRPIDALREADYEXISTS) {\r\n                                this.growlMessage.push({\r\n                                    severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Drop Off Location \" + this.deliversetuplocDetails.DROP_OFF_LOCATION_ID + \" Already  Exists\"\r\n                                });\r\n                            }\r\n                            else {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, \"saveDropoffLocDetails\");\r\n        }\r\n    }\r\n\r\n    async upDateDropoffLocDetails() {\r\n        this.growlMessage = [];\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.deliverySetupDropOffServices.UpdateDropOffLocs(this.deliversetuplocDetails.DROP_OFF_LOCATION_ID, this.deliversetuplocDetails.LOCATION_DESC,\r\n                this.deliversetuplocDetails.ORG_GROUP_ID, this.deviceTokenEntry[TokenEntry_Enum.UserID], this.previousLocationdata, this.deviceTokenEntry)\r\n                .catch(this.httpService.handleError).then((webresp: Response) => {\r\n                    this.spinnerService.stop();\r\n                    let response = webresp.json() as AtParWebApiResponse<number>;\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.growlMessage = [];\r\n                            this.statusMessage = AtParConstants.Updated_Msg.replace(\"1%\", \"Drop Off Location\").replace(\"2%\", this.deliversetuplocDetails.DROP_OFF_LOCATION_ID);\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: this.statusMessage });\r\n                            document.getElementById('saveLocationsNgModel').focus();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage = [];\r\n                            if (response.StatusCode == AtparStatusCodes.ATPAR_E_LOCGRPIDALREADYEXISTS) {\r\n                                this.growlMessage.push({\r\n                                    severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Drop Off Location Id \" + this.deliversetuplocDetails.DROP_OFF_LOCATION_ID + \" Already  Exists\"\r\n                                });\r\n                            }\r\n                            else {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            }\r\n                        } break;\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, \"upDateDropoffLocDetails\");\r\n        }\r\n    }\r\n\r\n    edit() {\r\n        this.growlMessage = [];\r\n        this.addEditFrom = false;\r\n        this.searchFrom = false;\r\n        this.showGrid = false;\r\n    }\r\n\r\n    async changeStatus(droplocationData) {\r\n        try {\r\n            this.deliversetuplocDetails = new MT_DELV_LOC_DETAILS();\r\n            this.deliversetuplocDetails.DROP_OFF_LOCATION_ID = droplocationData.DROP_OFF_LOCATION_ID;\r\n            this.deliversetuplocDetails.LOCATION_DESC = droplocationData.LOCATION_DESC;\r\n            this.deliversetuplocDetails.ORG_GROUP_ID = droplocationData.ORG_GROUP_ID;\r\n            this.deliversetuplocDetails.STATUS = droplocationData.STATUS;\r\n            await this.statusUpdate();\r\n        }\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, \"changeStatus\");\r\n        }\r\n    }\r\n\r\n    async statusUpdate() {\r\n        let updatestatus\r\n        this.growlMessage = [];\r\n        try {\r\n            this.spinnerService.start();\r\n            if (this.deliversetuplocDetails.STATUS == true) {\r\n                updatestatus = 1;\r\n            }\r\n            else {\r\n                updatestatus = 0;\r\n            }\r\n            await this.deliverySetupDropOffServices.statusUpdateDropOffLocS(updatestatus, this.deliversetuplocDetails.ORG_GROUP_ID, this.deliversetuplocDetails.DROP_OFF_LOCATION_ID, this.deviceTokenEntry[TokenEntry_Enum.UserID], this.deviceTokenEntry)\r\n                .catch(this.httpService.handleError).then(async (webresp: Response) => {\r\n                    this.spinnerService.stop();\r\n                    let response = webresp.json() as AtParWebApiResponse<number>;\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstGridData.length = 0;\r\n                            this.growlMessage = [];\r\n                            this.statusMessage = AtParConstants.Updated_Status_Msg.replace(\"1%\", \"Drop Off Location\").replace(\"2%\", this.deliversetuplocDetails.DROP_OFF_LOCATION_ID);\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: this.statusMessage });\r\n                            let filterData: any = [];\r\n                            let matchedrecord = this.mainlstGridData.filter(x => x.DROP_OFF_LOCATION_ID == this.deliversetuplocDetails.DROP_OFF_LOCATION_ID)\r\n                            matchedrecord[0].STATUS = this.deliversetuplocDetails.STATUS;\r\n                            if (this.statusType.toString() == \"true\") {\r\n                                filterData = this.mainlstGridData.filter(x => x.STATUS == true)\r\n                            } else if (this.statusType.toString() == \"false\") {\r\n                                filterData = this.mainlstGridData.filter(x => x.STATUS == false)\r\n                            } else {\r\n                                filterData = this.mainlstGridData\r\n                            }\r\n                            if (filterData != null) {\r\n                                for (let x = 0; x < filterData.length; x++) {\r\n                                    let dropOfflocDetails = new MT_DELV_LOC_DETAILS();\r\n                                    dropOfflocDetails.DROP_OFF_LOCATION_ID = filterData[x].DROP_OFF_LOCATION_ID;\r\n                                    dropOfflocDetails.LAST_CLIENT_ADDRESS = filterData[x].LAST_CLIENT_ADDRESS;\r\n                                    dropOfflocDetails.LAST_UPDATE_DATE = filterData[x].LAST_UPDATE_DATE;\r\n                                    dropOfflocDetails.LAST_UPDATE_USER = filterData[x].LAST_UPDATE_USER;\r\n                                    dropOfflocDetails.LOCATION_DESC = filterData[x].LOCATION_DESC;\r\n                                    dropOfflocDetails.ORG_GROUP_ID = filterData[x].ORG_GROUP_ID;\r\n                                    dropOfflocDetails.STATUS = filterData[x].STATUS;\r\n                                    this.lstGridData.push(dropOfflocDetails);\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage = [];\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, \"statusUpdate\");\r\n        }\r\n    }\r\n\r\n    async dataFilter(evtdata, filed, filterMatchMode) {\r\n        try {\r\n            let filterData;\r\n            this.lstGridData = [];\r\n            if (this.statusType.toString() == \"true\") {\r\n                filterData = this.mainlstGridData.filter(x => x.STATUS == true)\r\n            } else if (this.statusType.toString() == \"false\") {\r\n                filterData = this.mainlstGridData.filter(x => x.STATUS == false)\r\n            } else {\r\n                filterData = this.mainlstGridData\r\n            }\r\n            if (filterData != null) {\r\n                for (let x = 0; x < filterData.length; x++) {\r\n                    let dropOfflocDetails = new MT_DELV_LOC_DETAILS();\r\n                    dropOfflocDetails.DROP_OFF_LOCATION_ID = filterData[x].DROP_OFF_LOCATION_ID;\r\n                    dropOfflocDetails.LAST_CLIENT_ADDRESS = filterData[x].LAST_CLIENT_ADDRESS;\r\n                    dropOfflocDetails.LAST_UPDATE_DATE = filterData[x].LAST_UPDATE_DATE;\r\n                    dropOfflocDetails.LAST_UPDATE_USER = filterData[x].LAST_UPDATE_USER;\r\n                    dropOfflocDetails.LOCATION_DESC = filterData[x].LOCATION_DESC;\r\n                    dropOfflocDetails.ORG_GROUP_ID = filterData[x].ORG_GROUP_ID;\r\n                    dropOfflocDetails.STATUS = filterData[x].STATUS;\r\n                    this.lstGridData.push(dropOfflocDetails);\r\n                }\r\n            }\r\n            this.dataTableComponent.reset();\r\n        }\r\n        catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, \"dataFilter\");\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.deviceTokenEntry = [];\r\n        this.growlMessage = [];\r\n        this.showGrid = null;\r\n        this.spinnerService.stop();\r\n        this.pageSize = null;\r\n        this.statusMessage = null;\r\n        this.addEditFrom = null;\r\n        this.locationValidation = null;\r\n        this.saveAndUpdateButton = null;\r\n        this.searchFrom = null;\r\n        this.mode = null;\r\n        this.lstGridData = null;\r\n        this.lstOrgGroups = null;\r\n        this.orgGroupIdNgModel = null;\r\n        this.ddlShowOrgGroupId = null;\r\n        this.orgGroupData = null;\r\n        this.searchLocationNgModel = null;\r\n        this.searchDescriptionNgModel = null;\r\n        this.previousLocationdata = null;\r\n        this.ddlStatusType = null;\r\n        this.deliversetuplocDetails = null;\r\n        this.orgGroupIDForDBUpdate = null;\r\n        this.statusMessage = null;\r\n        this.orgIdDisabled = null;\r\n        this.mode = null;\r\n        this.orgGrpId = null;\r\n        this.lblShowOrgGroupLabel = null;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-setup-drop-off-locations.component.ts","import { Component, OnInit, Input, ViewChild, OnDestroy } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { MT_DELV_SHIPTO_ID_ALLOCATION } from '../Entities/MT_DELV_SHIPTO_ID_ALLOCATION';\r\nimport { ShipToIdAllocationForDeliveryOfStockItemsServices } from '../../app/Deliver/deliver-shiptoid-allocation-for-delivery-of-stock-items.services';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { SelectItem } from './../components/common/api';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { TokenEntry_Enum, StatusType, EnumApps } from '../Shared/AtParEnums';\r\nimport { SpinnerSentEvent } from '../components/spinner/spinner.sent.event';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { Message } from '../components/common/api';\r\nimport { ConfirmationService } from '../components/common/api';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../entities/mt_atpar_org_groups';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n    template: require('./deliver-shiptoid-allocation-for-delivery-of-stock-items.component.html'),\r\n    providers: [ConfirmationService, ShipToIdAllocationForDeliveryOfStockItemsServices, AtParCommonService]\r\n})\r\n\r\nexport class ShipToIdAllocationForDeliveryOfStockItemsComponent implements OnInit {\r\n    @ViewChild(DataTable) dataTableComponent: DataTable;\r\n    /*Varaible Declaration*/\r\n    strOrgGrpId: string = \"\";\r\n    strlblOrgGrpId: string = \"\";\r\n    strAllOrgId: string = \"\";\r\n    statusMesssage: string = \"\";\r\n    strOrgGroupName: string = \"\";\r\n    orgGrpIdData: string = \"\";\r\n    selectedOrgGrpId: string = \"\";\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    blnShowOrgGroupsDropdown: boolean = false;\r\n    isVisible: boolean = false;\r\n    checked: boolean = false;\r\n    blnSortByColumn: boolean = true;\r\n    recordsPerPageSize: number;\r\n    startIndex: number;\r\n    EndIndex: number;\r\n    statusCode: number;\r\n    lstOrgGroups: SelectItem[] = [];\r\n    deviceTokenEntry: string[] = [];\r\n    growlMessage: Message[] = [];\r\n    sortedCheckedRec: MT_DELV_SHIPTO_ID_ALLOCATION[];\r\n    sortedUnCheckedRec: MT_DELV_SHIPTO_ID_ALLOCATION[];\r\n    dataCheckedSorting: MT_DELV_SHIPTO_ID_ALLOCATION[] = [];\r\n    dataUnCheckedSorting: Array<MT_DELV_SHIPTO_ID_ALLOCATION> = [];\r\n    lstDBData: Array<MT_DELV_SHIPTO_ID_ALLOCATION> = [];\r\n    lstCheckedShiftToIds: Array<MT_DELV_SHIPTO_ID_ALLOCATION> = [];\r\n\r\n    /**\r\n     * Constructor\r\n     * @param ShipToIdAllocationForDeliveryOfStockItemsServices\r\n     * @param AtParCommonService\r\n     * @param httpService\r\n     * @param spinnerService   \r\n     */\r\n    constructor(private httpService: HttpService,\r\n        private commonService: AtParCommonService,\r\n        private shipToIdAllocationForDeliveryOfStockItemsServices: ShipToIdAllocationForDeliveryOfStockItemsServices,\r\n        private spinnerService: SpinnerService, private atParConstant: AtParConstants\r\n    ) { }\r\n\r\n    /**\r\n    * Init Function for binding OrgGroupIds to the dropdown when page loading \r\n    */\r\n\r\n    async  ngOnInit() {\r\n        try {\r\n            this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n            this.strlblOrgGrpId = this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID];\r\n            this.recordsPerPageSize = +this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n            this.lstCheckedShiftToIds = new Array<MT_DELV_SHIPTO_ID_ALLOCATION>();\r\n            this.dataCheckedSorting = new Array<MT_DELV_SHIPTO_ID_ALLOCATION>();\r\n            this.dataUnCheckedSorting = new Array<MT_DELV_SHIPTO_ID_ALLOCATION>();\r\n            await this.bindUserOrgGroups();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Getting data from database and bind records to data table\r\n    * Using Ternary Operator instead of if/else condition\r\n    */\r\n    async   bindUserOrgGroups() {\r\n        try {\r\n            this.spinnerService.start();\r\n            if (this.strlblOrgGrpId == \"All\") {\r\n                this.blnShowOrgGroupLabel = false;\r\n                this.blnShowOrgGroupsDropdown = true;\r\n                await this.commonService.getUserOrgGroups(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.strlblOrgGrpId).catch(this.httpService.handleError).then((response: Response) => {\r\n                    let data = response.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.spinnerService.stop();\r\n                    this.statusCode = data.StatusCode;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstOrgGroups = [];\r\n                            this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" });\r\n                            for (let i = 0; i <= data.DataList.length - 1; i++) {\r\n                                if (data.DataList[i].ORG_GROUP_ID !== \"All\") {\r\n                                    this.strAllOrgId = data.DataList[i].ORG_GROUP_ID + \" - \" + data.DataList[i].ORG_GROUP_NAME;\r\n                                    this.lstOrgGroups.push({ label: this.strAllOrgId, value: data.DataList[i].ORG_GROUP_ID })\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.blnShowOrgGroupsDropdown = false;\r\n                await this.commonService.getOrgGrpIDs(this.strlblOrgGrpId, this.strOrgGroupName, this.deviceTokenEntry)\r\n                    .catch(this.httpService.handleError).then((response: Response) => {\r\n                        let data = response.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                        this.spinnerService.stop();\r\n                        this.statusCode = data.StatusCode;\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.orgGrpIdData = data.DataList[0].ORG_GROUP_ID + \" - \" + data.DataList[0].ORG_GROUP_NAME;\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindUserOrgGroups\");\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when click on Go button\r\n    * Using Ternary Operator instead of if/else & if/else(if) conditions\r\n    */\r\n    async   btnGoClick() {\r\n        if (this.isVisible == true) {\r\n            this.dataTableComponent.reset();\r\n        }\r\n        if (this.blnShowOrgGroupsDropdown == true) {\r\n            if (this.selectedOrgGrpId == \"Select One\" || this.selectedOrgGrpId == \"\") {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid Org Group ID\" });\r\n                return;\r\n            }\r\n        }\r\n        this.strOrgGrpId = (this.blnShowOrgGroupsDropdown == false) ? this.strlblOrgGrpId : this.selectedOrgGrpId;\r\n        this.isVisible = false;\r\n        this.growlMessage = [];\r\n        this.lstDBData = new Array<MT_DELV_SHIPTO_ID_ALLOCATION>();\r\n        try {\r\n            this.spinnerService.start();\r\n            await this.shipToIdAllocationForDeliveryOfStockItemsServices.getOrgGrpShiptoIDs(this.strOrgGrpId, this.deviceTokenEntry[TokenEntry_Enum.UserID]).catch(this.httpService.handleError).then((response: Response) => {\r\n                let data = response.json() as AtParWebApiResponse<MT_DELV_SHIPTO_ID_ALLOCATION>;\r\n                this.statusCode = data.StatusCode;\r\n                status = data.StatusCode;\r\n                this.spinnerService.stop();\r\n                switch (data.StatType) {\r\n                    case StatusType.Success: {\r\n                        this.lstDBData = [];\r\n                        for (let i = 0; i <= data.DataList.length - 1; i++) {\r\n                            data.DataList[i].checkvalue = (data.DataList[i].CHK_ALLOCATED == 1) ? true : false;\r\n                        }\r\n                        this.lstDBData = data.DataList;\r\n                        this.BindDataGrid();\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.isVisible = false;\r\n                        this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.isVisible = false;\r\n                        if (this.statusCode == AtparStatusCodes.ATPAR_BUNIT_NOTALLOC) {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"No Assigned Org Business Units \" });\r\n                            break;\r\n                        }\r\n                        else {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    case StatusType.Custom: {\r\n                        this.isVisible = false;\r\n                        this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"btnGoClick\");\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    /*\r\n    * Storing data for sorting in two different  lists one for allocated and another for Unallocated \r\n    */\r\n    BindDataGrid() {\r\n        try {\r\n            this.dataCheckedSorting = [];\r\n            this.dataUnCheckedSorting = [];\r\n            for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                if (this.lstDBData[i].CHK_ALLOCATED == 1) {\r\n                    this.dataCheckedSorting.push(this.lstDBData[i]);\r\n                }\r\n                else {\r\n                    this.dataUnCheckedSorting.push(this.lstDBData[i]);\r\n                }\r\n            }\r\n            this.isVisible = true;\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"BindDataGrid\");\r\n        }\r\n    }\r\n\r\n    /*\r\n    * This method is calling when we selecting particular record in DataTable and getting selected record data\r\n    */\r\n    selectedRow(values: any, event) {\r\n        try {\r\n            values.CHK_VALUE = (event == true) ? 1 : 0;\r\n            for (var i = 0; i < this.lstCheckedShiftToIds.length; i++) {\r\n                if (this.lstCheckedShiftToIds[i].SHIPTO_ID == values.SHIPTO_ID) {\r\n                    var index = this.lstCheckedShiftToIds.indexOf(this.lstCheckedShiftToIds[i], 0);\r\n                    this.lstCheckedShiftToIds.splice(index, 1);\r\n                }\r\n            }\r\n            this.lstCheckedShiftToIds.push(values);\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"selectedRow\");\r\n        }\r\n    }\r\n\r\n    /*\r\n    * This method is for sorting the data  based on seleted column in DataTable\r\n    * Using Ternary Operator instead of if/else condition\r\n    */\r\n    customSort(event) {\r\n        try {\r\n            var element = event;\r\n            this.lstDBData = [];\r\n            this.blnSortByColumn = !this.blnSortByColumn;\r\n            this.sortedCheckedRec = [];\r\n            this.sortedUnCheckedRec = [];\r\n            this.sortedCheckedRec = this.dataCheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] < b[element.field])\r\n                    return -1;\r\n                if (a[element.field] > b[element.field])\r\n                    return 1;\r\n                return 0;\r\n            });\r\n            this.sortedUnCheckedRec = this.dataUnCheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] < b[element.field])\r\n                    return -1;\r\n                if (a[element.field] > b[element.field])\r\n                    return 1;\r\n                return 0;\r\n            });\r\n            this.lstDBData = [];\r\n            this.lstDBData = (this.blnSortByColumn == false) ? this.sortedCheckedRec.reverse().concat(this.sortedUnCheckedRec.reverse()) : this.sortedCheckedRec.concat(this.sortedUnCheckedRec);\r\n            this.sortedCheckedRec = [];\r\n            this.sortedUnCheckedRec = [];\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"customSort\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when click on CheckAll Button in Datatable\r\n    */\r\n    checkAll() {\r\n        try {\r\n            this.lstCheckedShiftToIds = [];\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n            if (this.EndIndex > this.lstDBData.length) {\r\n                this.EndIndex = this.lstDBData.length;\r\n            }\r\n\r\n            for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                this.lstDBData[i].checkvalue = true;\r\n                this.lstDBData[i].CHK_VALUE = 1;\r\n                this.lstCheckedShiftToIds.push(this.lstDBData[i]);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkAll\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when click on None Button in Datatable\r\n    */\r\n    unCheckAll() {\r\n        try {\r\n            this.lstCheckedShiftToIds = [];\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n            if (this.EndIndex > this.lstDBData.length) {\r\n                this.EndIndex = this.lstDBData.length;\r\n            }\r\n            for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                this.lstDBData[i].checkvalue = false;\r\n                this.lstDBData[i].CHK_VALUE = 0;\r\n                this.lstCheckedShiftToIds.push(this.lstDBData[i]);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"unCheckAll\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when user selecting  OrgGrpId in dropdown\r\n    */\r\n    ddlOrgGrpIdChanged() {\r\n        this.growlMessage = [];\r\n        this.spinnerService.start();\r\n        this.isVisible = false;\r\n        try {\r\n            this.strOrgGrpId = this.selectedOrgGrpId;\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ddlOrgGrpIdChanged\");\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * This method is calling when user click on Submit Button \r\n    */\r\n    async btn_Submit($event) {\r\n        this.growlMessage = [];\r\n        try {\r\n            this.spinnerService.start();\r\n            if (this.blnShowOrgGroupsDropdown == false) {\r\n                for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                    this.lstDBData[i].ORG_GROUP_ID = this.strlblOrgGrpId;\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                    this.lstDBData[i].ORG_GROUP_ID = this.strOrgGrpId;\r\n                }\r\n            }\r\n            await this.shipToIdAllocationForDeliveryOfStockItemsServices.allocateShiptoIDs(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.lstDBData)\r\n                .catch(this.httpService.handleError).then((response: Response) => {\r\n                    let data = response.json() as AtParWebApiResponse<MT_DELV_SHIPTO_ID_ALLOCATION>;\r\n                    this.spinnerService.stop();\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Updated Successfully' });\r\n                            this.isVisible = false;\r\n                            this.lstDBData = [];\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"btn_Submit\");\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    /**\r\n     * This method is for clearing all the variables\r\n     * @param event\r\n     */\r\n    ngOnDestroy() {\r\n        this.deviceTokenEntry = null;\r\n        this.lstCheckedShiftToIds = null;\r\n        this.lstDBData = null;\r\n        this.lstOrgGroups = null;\r\n        this.growlMessage = null;\r\n        this.sortedCheckedRec = [];\r\n        this.sortedUnCheckedRec = [];\r\n        this.strOrgGrpId = null;\r\n        this.strAllOrgId = null;\r\n        this.strOrgGroupName = null;\r\n        this.strlblOrgGrpId = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-shiptoid-allocation-for-delivery-of-stock-items.component.ts","import { Component } from '@angular/core';\r\nimport { EnumApps } from '../Shared/AtParEnums';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./deliver-user-parameters.component.html')\r\n})\r\n\r\nexport class UserParametersComponent {\r\n    dlvrAppId: number = EnumApps.Deliver;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-user-parameters.component.ts","import { Component } from '@angular/core';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./deliver.component.html')\r\n})\r\n\r\n\r\nexport class DeliverComponent { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { MT_DELV_BU_ALLOCATION } from '../../app/Entities/MT_DELV_BU_ALLOCATION';\r\nimport { VM_ATPAR_IBU_ALLOCATION } from '../../app/Entities/VM_ATPAR_IBU_ALLOCATION';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\n\r\n@Injectable()\r\nexport class DeliverAllocateBunitServices {\r\n\r\n    constructor(private httpservice: HttpService) {\r\n    }\r\n\r\n    getBUnits(bArray, userID, bUnit, description, serverUserID) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/DeliverAllocBU/GetBUnits\",\r\n            params: {\r\n                \"bArray\": bArray,              \r\n                \"userID\": userID,\r\n                \"bUnit\": bUnit,\r\n                \"description\": description,\r\n                \"serverUserID\": serverUserID\r\n            }\r\n\r\n        }).map(res => <AtParWebApiResponse<VM_ATPAR_IBU_ALLOCATION>>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    allocateBUnits(userID, serverUserID, lstBUnitsAllocation, blnSearched, lstCheckedBUnits: Array<VM_ATPAR_IBU_ALLOCATION>) {\r\n        return this.httpservice.create({\r\n            apiMethod: \"/api/DeliverAllocBU/AllocateBUnits\",\r\n            formData: lstCheckedBUnits,\r\n            params: {              \r\n                \"userID\": userID,\r\n                \"serverUserID\": serverUserID,\r\n                \"lstBUnitsAllocation\": lstBUnitsAllocation,\r\n                \"searched\": blnSearched               \r\n            }\r\n\r\n        }).map(res => <AtParWebApiResponse<MT_DELV_BU_ALLOCATION>>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-allocate-business-units.component.services.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\n\r\n@Injectable()\r\nexport class AssignSignatoriesService {\r\n    public headers: Headers;\r\n\r\n    constructor(private httpservice: HttpService) {\r\n\r\n    }\r\n\r\n    async getCodes(code) {\r\n        return await this.httpservice.getSync({\r\n            apiMethod: \"/api/AssignSignatories/GetCodes\",\r\n            params: {\r\n                \"code\": code\r\n            }\r\n        })\r\n    }\r\n\r\n    async getAuthSign(code) {\r\n        return await this.httpservice.getSync({\r\n            apiMethod: \"/api/AssignSignatories/GetAuthSign\",\r\n            params: {\r\n                \"code\": code\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteAuthSign(costCenterCode, userId) {\r\n        var inputParams = { \"costCenterCode\": costCenterCode }\r\n        if (userId == null) {\r\n            inputParams[\"userId\"] = \" \";\r\n        }\r\n\r\n        return this.httpservice.update({\r\n            apiMethod: \"/api/AssignSignatories/DeleteAuthSign\",\r\n            params: {\r\n                \"costCenterCode\": costCenterCode,\r\n                \"userId\": userId,\r\n            }\r\n        }).map(res => <AtParWebApiResponse<any>>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    addAuthSign(costCenterCode, userId, firstName, lastName, middleName) {\r\n        return this.httpservice.update({\r\n            apiMethod: \"/api/AssignSignatories/AddAuthSign\",\r\n            params: {\r\n                \"costCenterCode\": costCenterCode,\r\n                \"userId\": userId,\r\n                \"firstName\": firstName,\r\n                \"lastName\": lastName,\r\n                \"middleName\": middleName\r\n            }\r\n        }).map(res => <AtParWebApiResponse<any>>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    updateAuthSign(newCostCenterCode, oldCostCenterCode) {\r\n        return this.httpservice.update({\r\n            apiMethod: \"/api/AssignSignatories/UpdateAuthSign\",\r\n            params: {\r\n                \"newCostCenterCode\": newCostCenterCode,\r\n                \"oldCostCenterCode\": oldCostCenterCode\r\n            }\r\n        }).map(res => <AtParWebApiResponse<any>>res.json()).catch(this.handleError);\r\n    }\r\n    \r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-assign-signatories.services.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\n\r\n@Injectable()\r\nexport class DeliveryReportServiceComponent {\r\n    public headers: Headers;\r\n\r\n    constructor(private httpservice: HttpService) {\r\n\r\n    }\r\n    public async  GetDeliveryReportData(OrgGroupID, fromDate, ToDate, srvrUserID, PoId, DeliverTo, TrackingNo, DeliverdBy,\r\n        DeptId, VendorName, ItmDesc, Loc, ItemId,\r\n        Carrier, Requestor, BlnTflag, DeliveryLoc, Status, CurrStatus, LocDescr, PakageType,\r\n        Pallet) {\r\n\r\n        return await this.httpservice.getSync({\r\n            apiMethod: \"/api/DeliveryReport/GetDeliveryReportData\",\r\n            params: {\r\n                \"orgGroupId\": OrgGroupID,\r\n                \"fromDate\": fromDate,\r\n                \"ToDate\": ToDate,\r\n                \"srvrUserID\": srvrUserID,\r\n                \"PoId\": PoId,\r\n                \"DeliverTo\": DeliverTo,\r\n                \"TrackingNo\": TrackingNo,\r\n                \"DeliverdBy\": DeliverdBy,\r\n                \"DeptId\": DeptId,\r\n                \"VendorName\": VendorName,\r\n                \"ItmDesc\": ItmDesc,\r\n                \"Loc\": Loc,\r\n                \"ItemId\": ItemId,\r\n                \"Carrier\": Carrier,\r\n                \"Requestor\": Requestor,\r\n                \"BlnTflag\": BlnTflag,\r\n                \"DeliveryLoc\": DeliveryLoc,\r\n                \"Status\": Status,\r\n                \"CurrStatus\": CurrStatus,\r\n                \"LocDescr\": LocDescr,\r\n                \"PakageType\": PakageType,\r\n                \"Pallet\": Pallet\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    public handleError(error: Response) {\r\n\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-delivery-report.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { MT_DELV_EXCLUDE_LOC } from '../../app/Entities/MT_DELV_EXCLUDE_LOC';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\n\r\n@Injectable()\r\nexport class ExcludeLocationsService {\r\n\r\n    public headers: Headers;\r\n    constructor(private httpservice: HttpService) {\r\n    }\r\n\r\n    getAllLocations(setID, location, deviceTokenEntry: string[]) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/ExcludeLocs/GetAllLocations\",\r\n            params: {\r\n                \"setID\": setID,\r\n                \"location\": location,\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        }).map(res => <AtParWebApiResponse<MT_DELV_EXCLUDE_LOC>>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    excludeLocs(lstLocs: Array<MT_DELV_EXCLUDE_LOC>, deviceTokenEntry) {\r\n        return this.httpservice.create({\r\n            apiMethod: \"/api/ExcludeLocs/ExcludeLocs\",\r\n            formData: lstLocs,\r\n            params: {\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        }).map(res => <AtParWebApiResponse<MT_DELV_EXCLUDE_LOC>>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-exclude-locations.services.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { MT_CRCT_USER_ALLOCATION } from '../../app/Entities/MT_CRCT_USER_ALLOCATION';\r\n@Injectable()\r\nexport class DeliverProductivityService {\r\n    public headers: Headers;\r\n\r\n    constructor(private httpservice: HttpService) {\r\n\r\n    }\r\n    async  GetProductivityReport(orgGroupID, fromdate, todate, userid, interval, fTime, toTime) {\r\n\r\n        return await this.httpservice.getSync({\r\n            apiMethod: \"/api/ProductivityReport/GetProductivityReport\",\r\n            params: {\r\n                \"orgGroupID\": orgGroupID,\r\n                \"fromDate\": fromdate,\r\n                \"toDate\": todate,\r\n                \"userID\": userid,\r\n                \"interval\": interval,\r\n                \"fTime\": fTime,\r\n                \"toTime\": toTime\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    async  GetCycleTimeReport(orgGroupID, fromdate, todate, userid, startEvent, endEvent) {\r\n\r\n        return await this.httpservice.getSync({\r\n            apiMethod: \"/api/ProductivityReport/GetCycleTimeReport\",\r\n            params: {\r\n                \"orgGroupID\": orgGroupID,\r\n                \"fromDate\": fromdate,\r\n                \"toDate\": todate,\r\n                \"userID\": userid,\r\n                \"startEvent\": startEvent,\r\n                \"endEvent\": endEvent\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-productivity-report.component.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\n\r\n@Injectable()\r\nexport class ReleasePackagesServiceComponent {\r\n    public headers: Headers;\r\n\r\n    constructor(private httpservice: HttpService) {\r\n\r\n    }\r\n\r\n    async  GetReleasePackages(appId, userId, orgGroupId, bunit, trckNoOrPoIdOrLoc, flag, transId) {\r\n        return await this.httpservice.getSync({\r\n            apiMethod: \"/api/ReleasePackages/GetReleasePackages\",\r\n            params: {\r\n                \"appId\": appId,\r\n                \"userId\": userId,\r\n                \"orgGroupId\": orgGroupId,\r\n                \"bunit\": bunit,\r\n                \"trckNoOrPoIdOrLoc\": trckNoOrPoIdOrLoc,\r\n                \"flag\": flag,\r\n                \"transId\": transId,\r\n            }\r\n        })\r\n    }\r\n\r\n    async  GetCases(deviceTokenEntry) {\r\n        return await this.httpservice.getSync({\r\n            apiMethod: \"/api/ReleaseCases/GetDownloadCases\",\r\n            params: {\r\n                \"departmentID\": deviceTokenEntry\r\n            }\r\n        })\r\n    }\r\n\r\n    async  ProcessReleaseCases(pIsUpdate, pTransID, pDeptID, pCaseID, deviceTokenEntry, transactionIdlist) {\r\n        return await this.httpservice.getSync({\r\n            apiMethod: \"/api/ReleaseCases/ProcessReleaseCases\",\r\n            params: {\r\n                \"pIsUpdate\": pIsUpdate,\r\n                \"pTransID\": pTransID,\r\n                \"pDeptID\": pDeptID,\r\n                \"pCaseID\": pCaseID,\r\n                \"deviceTokenEntry\": deviceTokenEntry,\r\n                \"tranIDs\": transactionIdlist\r\n            }\r\n        })\r\n    }\r\n\r\n    async  GetDepartmentUsers(departmentID, orgGroupID) {\r\n        return await this.httpservice.getSync({\r\n            apiMethod: \"/api/DepartmentUserAllocation/GetDepartmentUsers\",\r\n            params: {\r\n                \"departmentID\": departmentID,\r\n                \"orgGroupID\": orgGroupID\r\n            }\r\n        })\r\n    }\r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-release-packages.service.component.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DeliverComponent } from './deliver.component';\r\nimport { AllocateBusinessUnitsComponent } from './deliver-allocate-business-units.component';\r\nimport { AllocateLocationGroupsComponent } from './deliver-allocate-location-groups.component';\r\nimport { AssignSignatoriesComponent } from './deliver-assign-signatories.component';\r\nimport { CarrierInformationComponent } from './deliver-carrier-information.component';\r\nimport { DailyActivityComponent } from './deliver-daily-activity.component';\r\nimport { DailyUserActivityComponent } from './deliver-daily-user-activity.component';\r\nimport { DeliveryReportComponent } from './deliver-delivery-report.component';\r\nimport { ExcludeLocationsComponent } from './deliver-exclude-locations.component';\r\nimport { ProductivityReportComponent } from './deliver-productivity-report.component';\r\nimport { ReleasePackagesComponent } from './deliver-release-packages.component';\r\nimport { SetupDropOffLoactionsComponent } from './deliver-setup-drop-off-locations.component';\r\nimport { ShipToIdAllocationForDeliveryOfStockItemsComponent } from './deliver-shiptoid-allocation-for-delivery-of-stock-items.component';\r\nimport { UserParametersComponent } from './deliver-user-parameters.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DeliverComponent,\r\n        children: [\r\n            { path: 'allocatebusinessunits', component: AllocateBusinessUnitsComponent },\r\n            { path: 'allocatelocationgroups', component: AllocateLocationGroupsComponent },\r\n            { path: 'assignsignatories', component: AssignSignatoriesComponent },\r\n            { path: 'carrierinformation', component: CarrierInformationComponent },\r\n            { path: 'dailyactivity', component: DailyActivityComponent },\r\n            { path: 'dailyuserActivity', component: DailyUserActivityComponent },\r\n            { path: 'deliveryreport', component: DeliveryReportComponent },\r\n            { path: 'excludelocations', component: ExcludeLocationsComponent },\r\n            { path: 'productivityreport', component: ProductivityReportComponent },\r\n            { path: 'releasepackages', component: ReleasePackagesComponent },\r\n            { path: 'setupdropofflocations', component: SetupDropOffLoactionsComponent },\r\n            { path: 'shiptoidallocationfordeliveryofstockitems', component: ShipToIdAllocationForDeliveryOfStockItemsComponent },\r\n            { path: 'userparameters', component: UserParametersComponent },\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class DeliverRoutingModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-routing.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParKeyValuePair } from '../../app/Entities/atparkeyvaluepair';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { TokenEntry_Enum, EnumApps } from '../Shared/AtParEnums';\r\n\r\n@Injectable()\r\n\r\nexport class DeliverySetupDropOffServices {\r\n    public headers: Headers;\r\n\r\n    constructor(private httpservice: HttpService) {\r\n    }\r\n\r\n    public getDropOffLocs(locID, locDesc, orgGroupID, deviceTokenEntry) {\r\n        return this.httpservice.getSync({\r\n            apiMethod: \"/api/DropOffLocs/GetDropOffLocs\",\r\n            params: {\r\n                \"locID\": locID,\r\n                \"locDesc\": locDesc,\r\n                \"orgGroupID\": orgGroupID,\r\n               \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        })\r\n    }\r\n\r\n    public addDropOffLocs(lstDBData, deviceTokenEntry) {\r\n        return this.httpservice.create({\r\n            apiMethod: \"/api/DropOffLocs/InsertDropOffLocs\",\r\n            formData: lstDBData,\r\n            params: {\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        }).toPromise();\r\n    }\r\n\r\n    public UpdateDropOffLocs(drpLocID, locDesc, orgGroupID, userID, prevLocID, deviceTokenEntry) {\r\n        return this.httpservice.create({\r\n            apiMethod: \"/api/DropOffLocs/EditUpdateDropOffLocs\",\r\n            params: {\r\n                \"drpLocID\": drpLocID,\r\n                \"locDesc\": locDesc,\r\n                \"orgGroupID\": orgGroupID,\r\n                \"userID\": userID,\r\n                \"prevLocID\": prevLocID,\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        }).toPromise();\r\n    }\r\n\r\n    public statusUpdateDropOffLocS(status, orgGroupID, locID, userID, deviceTokenEntry) {\r\n        return this.httpservice.create({\r\n            apiMethod: \"/api/DropOffLocs/UpdateDropOffLocs\",\r\n            params: {\r\n                \"status\": status,\r\n                \"orgGroupID\": orgGroupID,\r\n                \"locID\": locID,\r\n                \"userID\": userID,\r\n                \"deviceTokenEntry\": deviceTokenEntry\r\n            }\r\n        }).toPromise();\r\n    }\r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-setup-dropoff-location-services.ts","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { MT_DELV_SHIPTO_ID_ALLOCATION } from '../Entities/MT_DELV_SHIPTO_ID_ALLOCATION';\r\n\r\n@Injectable()\r\nexport class ShipToIdAllocationForDeliveryOfStockItemsServices {\r\n    constructor(private httpservice: HttpService) { }\r\n\r\n    public async getOrgGrpShiptoIDs(orgGroupID, serverUserID) {\r\n        return await this.httpservice.getSync({\r\n            apiMethod: \"/api/DeliverShiptoIDs/GetOrgGrpShiptoIDs\",\r\n            params: {\r\n                \"orgGroupID\": orgGroupID,\r\n                \"serverUserID\": serverUserID\r\n            }\r\n        });\r\n    }\r\n\r\n    public async allocateShiptoIDs(serverUserID, lstShiptoIDs: Array<MT_DELV_SHIPTO_ID_ALLOCATION>) {\r\n        return await this.httpservice.create({\r\n            apiMethod: \"/api/DeliverShiptoIDs/AllocateShiptoIDs\",\r\n            formData:lstShiptoIDs,\r\n            params: {\r\n                \"serverUserID\": serverUserID\r\n            }\r\n        }).toPromise();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver-shiptoid-allocation-for-delivery-of-stock-items.services.ts","import { NgModule } from '@angular/core';\r\nimport { DeliverComponent } from './deliver.component';\r\nimport { AllocateBusinessUnitsComponent } from './deliver-allocate-business-units.component';\r\nimport { AllocateLocationGroupsComponent } from './deliver-allocate-location-groups.component';\r\nimport { AssignSignatoriesComponent } from './deliver-assign-signatories.component';\r\nimport { CarrierInformationComponent } from './deliver-carrier-information.component';\r\nimport { DailyActivityComponent } from './deliver-daily-activity.component';\r\nimport { DailyUserActivityComponent } from './deliver-daily-user-activity.component';\r\nimport { DeliveryReportComponent } from './deliver-delivery-report.component';\r\nimport { ExcludeLocationsComponent } from './deliver-exclude-locations.component';\r\nimport { ProductivityReportComponent } from './deliver-productivity-report.component';\r\nimport { ReleasePackagesComponent } from './deliver-release-packages.component';\r\nimport { SetupDropOffLoactionsComponent } from './deliver-setup-drop-off-locations.component';\r\nimport { ShipToIdAllocationForDeliveryOfStockItemsComponent } from './deliver-shiptoid-allocation-for-delivery-of-stock-items.component';\r\nimport { UserParametersComponent } from './deliver-user-parameters.component';\r\nimport { DeliverRoutingModule } from './deliver-routing.module';\r\nimport { SharedModule } from '../Shared/shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        DeliverRoutingModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        DeliverComponent,\r\n        AllocateBusinessUnitsComponent,\r\n        AllocateLocationGroupsComponent,\r\n        AssignSignatoriesComponent,\r\n        CarrierInformationComponent,\r\n        DailyActivityComponent,\r\n        DailyUserActivityComponent,\r\n        DeliveryReportComponent,\r\n        ExcludeLocationsComponent,\r\n        ProductivityReportComponent,\r\n        ReleasePackagesComponent,\r\n        SetupDropOffLoactionsComponent,\r\n        ShipToIdAllocationForDeliveryOfStockItemsComponent,\r\n        UserParametersComponent\r\n    ]\r\n})\r\n\r\nexport class DeliverModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Deliver/deliver.module.ts","export class MT_DELV_COST_CENTER_AUTH_PERSON {\r\n    public COST_CENTER_CODE: string;\r\n    public AUTH_USER_ID: string;\r\n    public FIRST_NAME: string;\r\n    public LAST_NAME: string;\r\n    public MIDDLE_NAME: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/MT_DELV_COST_CENTER_AUTH_PERSON.ts","export class VM_CYCLETIME_DETAILS {\r\n    public TRANSACTION_ID: string;\r\n    public TRACKING_NBR: string;\r\n    public DELIVER_FROM: string;\r\n    public CYCLE_TIME: string;\r\n    public HOURS: string;\r\n    public MINS: string;\r\n    public SECONDS: string;\r\n    public TOT_HOURS: any;\r\n    public HOURSSUMMARY: string;\r\n    public COUNTSUMMARY: string;\r\n    public COUNT_PERCENTSUMMARY: number;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/VM_CYCLETIME_DETAILS.ts","export class VM_DELV_PO_COMMENTS {\r\n\r\n    public HEADER_COMMENTS: string;\r\n    public LINE_COMMENTS: string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/VM_DELV_PO_COMMENTS.ts","export class VM_DELV_PROD {\r\n    public START_INTERVAL: string;\r\n    public PACKAGE_COUNT: any;\r\n    public UserId: string;\r\n    public Day: string;\r\n    public TIME: any;\r\n    public TRANS_DATE: string;\r\n    public LAST_UPDATE_USER: string;\r\n    public LAST_CLIENT_ADDRESS: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/VM_DELV_PROD.ts","export class VM_RESULTS {\r\n    public AVG: string;\r\n    public Count: string;\r\n    public Min: string;\r\n    public Max: string;\r\n    public StDev: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/VM_RESULTS.ts","export class VM_TABLE_AVG {\r\n    public START_INTERVAL: string;\r\n    public PACKAGE_COUNT: any;\r\n    public UserId: string;\r\n    public AVG_TIME: number;\r\n    public MAX_TIME: number;\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/VM_TABLE_AVG.ts","export class MT_DELV_LOC_DETAILS {\r\n    public ORG_GROUP_ID: string;\r\n    public DROP_OFF_LOCATION_ID: string;\r\n    public LOCATION_DESC: string;\r\n    public STATUS: boolean;\r\n    public LAST_UPDATE_DATE:  Date;\r\n    public LAST_UPDATE_USER: string;\r\n    public LAST_CLIENT_ADDRESS: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/entities/mt_delv_loc_details.ts","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\" *ngIf=\\\"true\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">Org Group ID </label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{orgGrpIDData}}</label>\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedOrgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\" (onChange)=\\\"ddlOrgGrpIdChanged()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">User ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstUsers\\\" [id]=\\\"'ddllstUsers'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedDropDownUserId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (onChange)=\\\"ddlUserChanged()\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">Business Unit</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-ac-server [(ngModel)]=\\\"selectedBunit\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"lstFilteredBUnits\\\" (completeMethod)=\\\"fillBUnitsAuto($event)\\\"></atpar-ac-server>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div style=\\\"clear:both;\\\"></div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">Description</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"selectedDescription\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"''\\\" [id]=\\\"'txtdescription'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"getAllBUnits()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"isVisible\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <atpar-datatable [value]=\\\"lstDBData\\\" [style]=\\\"{'width':'100%'}\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"recordsPerPageSize\\\" (filteredData)=\\\"filterdata($event)\\\"\\r\\n                                                 [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [responsive]=\\\"true\\\">\\r\\n\\r\\n                                    <p-column [style]=\\\"{'width':'7%', 'text-align':'center'}\\\" header=\\\"Select\\\">\\r\\n                                        <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                            <ul class=\\\"list-inline li-all-none\\\">\\r\\n                                                <li>\\r\\n                                                    <span (click)=\\\"checkAll()\\\" style=\\\"cursor:pointer\\\">All</span>\\r\\n                                                </li> |\\r\\n                                                <li>\\r\\n                                                    <span (click)=\\\"unCheckAll()\\\" style=\\\"cursor:pointer\\\">None</span>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </template>\\r\\n                                        <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <atpar-switch (change)=\\\"selectedRow(ven,$event)\\\" [(ngModel)]=\\\"ven.checkvalue\\\"></atpar-switch>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'12%'}\\\" field=\\\"BUSINESS_UNIT\\\" header=\\\"Business Unit\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'40%'}\\\" field=\\\"DESCR\\\" header=\\\"Description\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'30%'}\\\" field=\\\"USER_ID\\\" header=\\\"User\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\"> </p-column>\\r\\n\\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                            <br>\\r\\n                            <div class=\\\"col-xs-12 col-md-4 col-md-offset-5 col-sm-6 col-sm-offset-5\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" id=\\\"btnsubmitForGrid\\\" (click)=\\\"allocateBUnits()\\\">Submit &nbsp;<i class=\\\"fa fa-check\\\"></i></button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-allocate-business-units.component.html\n// module id = 1967\n// module chunks = 12","module.exports = \"<div>\\r\\n    <atpar-allocate-location-groups [appId]=\\\"deliverAppId\\\"></atpar-allocate-location-groups>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-allocate-location-groups.component.html\n// module id = 1968\n// module chunks = 12","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:10px 0px 10px 0;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" *ngIf=\\\"filter\\\">\\r\\n                            <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">Cost Center</label>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                    <atpar-ac-server [(ngModel)]=\\\"codes\\\" [id]=\\\"'CostCenter'\\\" [name]=\\\"txtCostCenter\\\" [suggestions]=\\\"lstDBDataSearch\\\" (completeMethod)=\\\"searchAutoCompleteCode($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-ac-server>\\r\\n                                    <!--<atpar-text [(ngModel)]=\\\"codes\\\" [name]=\\\"txtCostCenter\\\" [isFocused]=\\\"'true'\\\" [validations]=\\\"'alpha_numeric_space'\\\" [id]=\\\"'CostCenter'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>-->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12 col-sm-2 col-md-4 form-group\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"go()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"addCostCenterCode()\\\">Add &nbsp;<i class=\\\"fa fa-plus\\\"></i> </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div style=\\\"clear:both;\\\"></div>\\r\\n                        <div class=\\\"col-xs-12 container\\\" *ngIf=\\\"pop\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <div class=\\\"col-lg-12 col-md-12 col-xs-12\\\">\\r\\n                                    <span *ngIf=\\\"lstDBData.length > 0\\\" class=\\\"text-primary pull-right\\\">{{lstDBData.length}}  Code(s) Found</span>\\r\\n                                </div>\\r\\n                                \\r\\n                                <atpar-datatable [value]=\\\"lstDBData\\\" #dt [style]=\\\"{'width':'100%'}\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"recordsPerPageSize\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                    <p-column header=\\\"Action\\\" [style]=\\\"{'width':'8%','text-align':'center'}\\\">\\r\\n                                        <template let-rowData=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <i class=\\\"fa fa-pencil fa-bg bg-red\\\" style=\\\"cursor:pointer;\\\" title=\\\"Edit\\\" (click)=\\\"editCostCenterCode(rowData)\\\"></i>&nbsp;\\r\\n                                            <i class=\\\"fa fa-trash fa-bg bg-red\\\" style=\\\"cursor:pointer;\\\" title=\\\"Delete\\\" (click)=\\\"confirmDelete(rowData, true)\\\"></i>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"COST_CENTER_CODE\\\" header=\\\"Code\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column header=\\\"Assign Signatories\\\">\\r\\n                                        <template let-rowData=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <span (click)=\\\"assignSignatories(rowData)\\\" class=\\\"grid-link\\\">Assign Signatories</span>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div style=\\\"clear:both;\\\"></div>\\r\\n\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" *ngIf=\\\"form\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-3 col-md-3\\\">Code</label>\\r\\n                                <div class=\\\"col-xs-12 col-sm-3 col-md-3\\\">\\r\\n                                    <atpar-text [(ngModel)]=\\\"newItem.COST_CENTER_CODE\\\" [name]=\\\"txtCode\\\" [isFocused]=\\\"'true'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [validations]=\\\"'mandatory,ALPHA_NUMERIC_EXCEPT_FST_SPACE,max=50'\\\" [id]=\\\"'Code'\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [title]=\\\"'Use only A-Z,a-z,0-9,max 50 characters'\\\"></atpar-text>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12 col-sm-6 col-sm-offset-3 col-md-4 col-md-offset-4\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" *ngIf=\\\"!isEditMode\\\" (click)=\\\"saveSignatoryCode()\\\" [disabled]=\\\"disableButton\\\">Save &nbsp; <i class=\\\"fa fa-floppy-o\\\"></i></button>\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" *ngIf=\\\"isEditMode\\\" (click)=\\\"saveSignatoryCode()\\\" [disabled]=\\\"disableButton\\\">Update &nbsp;<i class=\\\"fa fa-check\\\"></i> </button>\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"goCancel()\\\">Cancel &nbsp;<i class=\\\"fa fa-close\\\"></i> </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div style=\\\"clear:both;\\\"></div>\\r\\n\\r\\n                        <div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"table\\\">\\r\\n                            <button class=\\\"btn btn-purple sbtn pull-right\\\" (click)=\\\"edit()\\\">Add &nbsp;<i class=\\\"fa fa-plus\\\"></i> </button>\\r\\n                            <br>\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <span class=\\\"text-primary\\\">{{strData}}</span>\\r\\n                                <div *ngIf=\\\"tableData\\\">\\r\\n                                    <br />\\r\\n                                    <div class=\\\"col-lg-12 col-md-12 col-xs-12\\\">\\r\\n                                        <span *ngIf=\\\"lstSignDBData.length > 0\\\" class=\\\"text-primary pull-right\\\">{{lstSignDBData.length}}  Record(s) Found</span>\\r\\n                                    </div>\\r\\n\\r\\n                                    <atpar-datatable [value]=\\\"lstSignDBData\\\" [style]=\\\"{'width':'100%'}\\\" #dt [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"recordsPerPageSize\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                        <p-column header=\\\"Action\\\" [style]=\\\"{'width':'4%','text-align':'center'}\\\">\\r\\n                                            <template let-rowData=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                                <i class=\\\"fa fa-trash fa-bg bg-red\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"confirmDelete(rowData, false)\\\" title=\\\"Delete\\\"></i>\\r\\n                                            </template>\\r\\n                                        </p-column>\\r\\n                                        <p-column field=\\\"AUTH_USER_ID\\\" header=\\\"User ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                        <p-column field=\\\"FIRST_NAME\\\" header=\\\"First Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                        <p-column field=\\\"LAST_NAME\\\" header=\\\"Last Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                        <p-column field=\\\"MIDDLE_NAME\\\" header=\\\"Middle Name\\\" [sortable]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'9%'}\\\"></p-column>\\r\\n                                    </atpar-datatable><br>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6 col-md-offset-5 col-sm-6 col-sm-offset-5\\\" *ngIf=\\\"table\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"goBack()\\\"><i class=\\\"fa fa-arrow-left\\\"></i> &nbsp;Go Back </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div style=\\\"clear:both;\\\"></div>\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" *ngIf=\\\"form2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-3 col-md-3\\\">User ID</label>\\r\\n                                <div class=\\\"col-xs-12 col-sm-3 col-md-3\\\">\\r\\n                                    <atpar-text [(ngModel)]=\\\"newItem.AUTH_USER_ID\\\" [name]=\\\"txtAuthUserId\\\" [validations]=\\\"'mandatory,ALPHA_NUMERIC_EXCEPT_FST_SPACE,max=50'\\\" [title]=\\\"'Use only A-Z,a-z,0-9,max 50 characters'\\\" [id]=\\\"'userID'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-md-6 help_txt\\\">\\r\\n                                    <!--Enter User ID Here-->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-3 col-md-3\\\">First Name</label>\\r\\n                                <div class=\\\"col-xs-12 col-sm-3 col-md-3\\\">\\r\\n                                    <atpar-text [(ngModel)]=\\\"newItem.FIRST_NAME\\\" [name]=\\\"txtFirstName\\\" [validations]=\\\"'mandatory,ALPHA_NUMERIC_EXCEPT_FST_SPACE,max=50'\\\" [title]=\\\"'Use only A-Z,a-z,0-9,max 50 characters'\\\" [id]=\\\"'fName'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-md-6 help_txt\\\">\\r\\n                                    <!--Enter First Name Here-->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-3 col-md-3\\\">Last Name</label>\\r\\n                                <div class=\\\"col-xs-12 col-sm-3 col-md-3\\\">\\r\\n                                    <atpar-text [(ngModel)]=\\\"newItem.LAST_NAME\\\" [name]=\\\"txtLastName\\\" [validations]=\\\"'ALPHA_NUMERIC_EXCEPT_FST_SPACE,max=50'\\\" [title]=\\\"'Use only A-Z,a-z,0-9,max 50 characters'\\\" [id]=\\\"'txtLastName'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-md-6 help_txt\\\">\\r\\n                                    <!--Enter Last Name Here-->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-3 col-md-3\\\">Middle Name</label>\\r\\n                                <div class=\\\"col-xs-12 col-sm-3 col-md-3\\\">\\r\\n                                    <atpar-text [(ngModel)]=\\\"newItem.MIDDLE_NAME\\\" [name]=\\\"txtMiddleName\\\" [validations]=\\\"'ALPHA_NUMERIC_EXCEPT_FST_SPACE,max=1'\\\" [title]=\\\"'Use only A-Z,a-z,0-9,max 1 character'\\\" (bindModelDataChange)=\\\"bindModelDataChange($event)\\\" [id]=\\\"'txtMiddleName'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-md-6 help_txt\\\">\\r\\n                                    <!--Enter Middle Name Here-->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12 col-sm-6 col-sm-offset-5 col-md-4 col-md-offset-4\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"saveAuthSignatoryCode()\\\" [disabled]=\\\"disableButtonUser\\\">Save &nbsp; <i class=\\\"fa fa-floppy-o\\\"></i></button>\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"close()\\\"><i class=\\\"fa fa-arrow-left\\\"></i> &nbsp;Go Back </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"content-section implementation\\\">\\r\\n        <atpar-confirmdialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\"></atpar-confirmdialog>\\r\\n    </div>\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-assign-signatories.component.html\n// module id = 1969\n// module chunks = 12","module.exports = \"<div>\\r\\n    <atpar-carrier-information [appId]=\\\"dlvrAppId\\\"></atpar-carrier-information>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-carrier-information.component.html\n// module id = 1970\n// module chunks = 12","module.exports = \"<div>\\r\\n    <span>Deliver Daily Activity Screen</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-daily-activity.component.html\n// module id = 1971\n// module chunks = 12","module.exports = \"<div>\\r\\n    <span>Deliver Daily User Activity</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-daily-user-activity.component.html\n// module id = 1972\n// module chunks = 12","module.exports = \"\\r\\n\\r\\n\\r\\n<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:10px 0px 10px 0px;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"pull-right\\\" id=\\\"tdExports\\\" *ngIf=\\\"showexport\\\">\\r\\n                                    <ul class=\\\"list-inline\\\">\\r\\n                                        <li class=\\\"no-padding\\\" style=\\\"cursor:pointer\\\">\\r\\n                                            <i class=\\\"fa fa-envelope-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgMail\\\" title=\\\"Send mail\\\" (click)=\\\"onSendMailIconClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                        <li class=\\\"no-padding\\\" style=\\\"cursor:pointer\\\">\\r\\n                                            <i class=\\\"fa fa-print fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgPrint\\\" title=\\\"Print\\\" (click)=\\\"onPrintClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                        <li class=\\\"no-padding\\\" style=\\\"cursor:pointer\\\">\\r\\n                                            <i class=\\\"fa fa-file-excel-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgExcel\\\" title=\\\"Excel Format\\\" (click)=\\\"onExportToExcelClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Order # </label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"PoId\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'OrderNo'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Recipient</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"DeliverTo\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'Recipient'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Tracking#</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"TrackingNo\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'TrackingNo'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\"> Package Type</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <!--<atpar-text [(ngModel)]=\\\"selectedOrderNo\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'OrderNo'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>-->\\r\\n                                        <atpar-select [options]=\\\"lstPackType\\\" [id]=\\\"'ddlPackType'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedPackageType\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Requestor</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n\\r\\n                                        <atpar-text [(ngModel)]=\\\"Requestor\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'Requestor'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Pallet</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"Pallet\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'Pallet'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Status</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstStatus\\\" [id]=\\\"'ddlStatus'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedStatus\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"blnStatus\\\" (onChange)=\\\"ddlStatusChanged()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Current Status</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstCurrentStatus\\\" [id]=\\\"'ddlCurrentStatus'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedCurrStatus\\\" [disabled]=\\\"blnCurrStatus\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (onChange)=\\\"ddlCurrentStatusChanged()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">From Date</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                         <p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'fromDate'\\\" [(ngModel)]=\\\"fromDate\\\" [placeholder]=\\\"'From Date'\\\" [dateFormat]=\\\"'mm/dd/yy'\\\" [required]=\\\"true\\\" [readonlyInput]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1950:2050\\\"></p-calendar>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12\\\">                                \\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">To Date</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                         <p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'toDate'\\\" [(ngModel)]=\\\"toDate\\\" [placeholder]=\\\"'To Date'\\\" [dateFormat]=\\\"'mm/dd/yy'\\\" [required]=\\\"true\\\" [readonlyInput]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1950:2050\\\"></p-calendar>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"BindDataGrid()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>                                    \\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--<div class=\\\"col-xs-12\\\">\\r\\n                                <a (click)=\\\"show()\\\"><i class=\\\"fa fa-plus-circle fa-2x\\\" *ngIf=\\\"plus\\\"></i><i class=\\\"fa fa-minus-circle fa-2x\\\" *ngIf=\\\"!plus\\\"></i></a>\\r\\n                            </div>-->\\r\\n\\r\\n                            <div class=\\\"col-md-12 \\\" style=\\\"padding-bottom: 7px;\\\">\\r\\n                                <a>\\r\\n                                    <i class=\\\"fa fa-plus fa-bg bg-red\\\" *ngIf=\\\"plus\\\" style=\\\"cursor:pointer\\\" (click)=\\\"show()\\\"></i>\\r\\n                                    <i class=\\\"fa fa-minus fa-bg bg-red\\\" *ngIf=\\\"!plus\\\" style=\\\"cursor:pointer\\\" (click)=\\\"show()\\\"></i>\\r\\n                                </a>\\r\\n                            </div>\\r\\n\\r\\n                            <br />\\r\\n                            <div *ngIf=\\\"!plus\\\">\\r\\n                                <div class=\\\"col-xs-12\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Org Group ID </label>\\r\\n                                        <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                            <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{orgGrpId}}</label>\\r\\n                                            <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedOrgGrpId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\" (onChange)=\\\"ddlOrgGrpIdChanged()\\\"></atpar-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\"> Delivered By </label>\\r\\n                                        <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                            <atpar-select [options]=\\\"lstDeliverdBy\\\" [id]=\\\"'ddlDeliverdBy'\\\" [required]=\\\"false\\\" [(ngModel)]=\\\"DeliverdBy\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Dept ID </label>\\r\\n                                        <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"DeptId\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'DeptId'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">ItemID</label>\\r\\n                                        <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"ItemId\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'ItemId'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Item Description</label>\\r\\n                                        <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"ItmDesc\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'ItemDesc'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Carrier ID</label>\\r\\n                                        <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"Carrier\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'CarrierId'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12\\\">\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Vendor Name</label>\\r\\n                                        <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"VendorName\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'VendorName'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Location</label>\\r\\n                                        <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"Loc\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'Location'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Location Description</label>\\r\\n                                        <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                            <atpar-text [(ngModel)]=\\\"LocDescr\\\" [id]=\\\"'OrderNo'\\\" [name]=\\\"'LocationDesc'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </form>\\r\\n                        <br />\\r\\n                        <div class=\\\"col-xs-12 table-responsive\\\" id=\\\"Exportdiv\\\" *ngIf=\\\"showGrid\\\">\\r\\n                            <div class=\\\"container no-scrl\\\">\\r\\n                            <atpar-datatable [value]=\\\"deliverHeaders\\\" [paginator]=\\\"true\\\" id=\\\"DelvTable\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"deliverDetailRows\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\" (filteredData)=\\\"onDeliverFilterData($event)\\\" scrollable=\\\"true\\\" [style]=\\\"{'width':'100%'}\\\" resizableColumns=\\\"true\\\">\\r\\n                                <p-column header=\\\"Transaction ID\\\" field=\\\"TRANSACTION_ID\\\" *ngIf=\\\"false\\\"></p-column>\\r\\n                                <p-column expander=\\\"true\\\" styleClass=\\\"col-icon\\\" [style]=\\\"{'width':'35px'}\\\"></p-column>\\r\\n                                <p-column header=\\\"Order# - Line#\\\" field=\\\"PO_ID\\\" [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\">\\r\\n                                    <template let-heddetail=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <span style=\\\"float:left\\\">{{heddetail.PO_ID}}</span>\\r\\n                                        <span>-</span>\\r\\n                                        <span>{{heddetail.LINE_NO}}</span>\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n                                <p-column header=\\\"External Tracking#\\\" field=\\\"REPORT_DATA_3\\\" [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Internal Tracking# \\\" field=\\\"REPORT_DATA_31\\\" [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Location - Description\\\" field=\\\"LOCATION\\\" [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Dept ID\\\" field=\\\"DEPT_ID\\\"  [style]=\\\"{'width':'120px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Qty\\\" field=\\\"QTY\\\" styleClass=\\\"text-right\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"UOM\\\" field=\\\"UOM\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Current Owner \\\" field=\\\"CURRENT_STATUS_USER\\\" [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Status (Event Time) \\\" field=\\\"STATUS_MESSAGE\\\" [style]=\\\"{'width':'230px','font-weight':'bold'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n                                    <template let-heddetail=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <span style=\\\"float:left\\\">{{heddetail.STATUS_MESSAGE}}</span>\\r\\n                                        <span>({{heddetail.STATUS_TIME}} )</span>\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n                                <p-column header=\\\"ItemID\\\" field=\\\"ITEM_ID\\\" [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Mfg ItemID\\\" field=\\\"DEPARTMENT_ID\\\" [style]=\\\"{'width':'120px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Item Description\\\" field=\\\"REPORT_DATA_8\\\" [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'15%'}\\\"></p-column>\\r\\n                                <p-column header=\\\"Carrier\\\" field=\\\"CARRIER_ID\\\"  [style]=\\\"{'width':'120px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Receipt Date\\\" field=\\\"RECEIPT_DATE\\\" [style]=\\\"{'width':'150px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"PickUp User\\\" field=\\\"PICKUP_USER\\\" [style]=\\\"{'width':'120px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Requestor\\\" field=\\\"DELIVERED_TO\\\" [style]=\\\"{'width':'120px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Vendor Name\\\" field=\\\"VENDOR_NAME\\\" [style]=\\\"{'width':'120px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Notes\\\" field=\\\"ITEM_NOTES\\\" [style]=\\\"{'width':'200px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                <p-column header=\\\"Pallet\\\" field=\\\"PALLET\\\" [style]=\\\"{'width':'120px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n\\r\\n                                <template let-header pTemplate=\\\"rowexpansion\\\">\\r\\n                                    <atpar-datatable [value]=\\\"header.POCOMMENTS\\\" [responsive]=\\\"true\\\" *ngIf=\\\"header.SHOW_PO_COMMENTS\\\">\\r\\n                                        <p-column field=\\\"HEADER_COMMENTS\\\">\\r\\n                                            <template let-hedHCmts=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                                <span style=\\\"float:left\\\">PO Header Comments: {{hedHCmts.HEADER_COMMENTS}}</span>\\r\\n                                            </template>\\r\\n                                        </p-column>\\r\\n                                    </atpar-datatable>\\r\\n\\r\\n                                    <atpar-datatable [value]=\\\"header.DETAILS\\\" [paginator]=\\\"false\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"5\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                        <p-header>\\r\\n                                            <i class=\\\"fa fa-envelope-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgMail\\\" title=\\\"Send mail\\\"  style=\\\"cursor:pointer;font-size:18px;float:left;margin-right:8px\\\" (click)=\\\"onSendEventsMailClick($event,header.DETAILS)\\\"></i>&nbsp;                                           \\r\\n                                            \\r\\n                                            <!--<i class=\\\"fa fa-envelope-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgMail\\\" title=\\\"Send mail\\\" (click)=\\\"onSendMailIconClick($event)\\\"></i>&nbsp;-->\\r\\n                                            <span>\\r\\n                                                <atpar-text [(ngModel)]=\\\"txtEventsMail\\\" [id]=\\\"'txtEventsMail'\\\" [style]=\\\"{'width':'120px'}\\\" [name]=\\\"'EventMail'\\\" [validations]=\\\"'max=50,email'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                            </span>\\r\\n                                        </p-header>\\r\\n                                        <p-column header=\\\"Event\\\" field=\\\"STATUS_MESSAGE\\\" [style]=\\\"{'width':'120px'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"Event Date\\\" field=\\\"STATUS_TIME\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"Cycle Time\\\" field=\\\"CYCLE_TIME\\\" [style]=\\\"{'width':'120px'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"User\\\" field=\\\"STATUS_USER\\\" [style]=\\\"{'width':'150px'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"Recipient\\\" field=\\\"RECEPIENT\\\" [style]=\\\"{'width':'120px'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"Delivery Location\\\" field=\\\"DELIVERY_LOCATION\\\" [style]=\\\"{'width':'80px'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"Drop Off\\\" field=\\\"HANDOVER\\\" [style]=\\\"{'width':'80px'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"Signature\\\" field=\\\"SIGNATURE\\\">\\r\\n                                            <template let-col let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n\\r\\n                                                <img src=\\\"data:image/jpg;base64,{{ven.SIGNATURE}}\\\" *ngIf=\\\"ven.STATUS_MESSAGE=='Delivered' || ven.STATUS_MESSAGE=='Re-Delivered' ?true:false\\\">\\r\\n                                            </template>\\r\\n\\r\\n                                        </p-column>\\r\\n\\r\\n\\r\\n                                    </atpar-datatable>\\r\\n                                    <atpar-datatable [value]=\\\"header.POCOMMENTS\\\" [responsive]=\\\"true\\\" *ngIf=\\\"header.SHOW_LINE_COMMENTS\\\">\\r\\n                                        <p-column field=\\\"LINE_COMMENTS\\\" [style]=\\\"{'width':'15%'}\\\">\\r\\n                                            <template let-hedLCmts=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                                <span style=\\\"float:left\\\">PO Line Comments: {{hedLCmts.LINE_COMMENTS}}</span>\\r\\n                                            </template>\\r\\n\\r\\n                                        </p-column>\\r\\n                                    </atpar-datatable>\\r\\n                                    <atpar-datatable [value]=\\\"header.ATTEMPTS\\\" [paginator]=\\\"false\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"5\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[5,10,20]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\" *ngIf=\\\"header.showAttempts\\\">\\r\\n                                        <p-column header=\\\"Attempt date(dd/mm/yyyy)\\\" field=\\\"ATTEMPT_DATE\\\" [style]=\\\"{'width':'15%'}\\\"></p-column>\\r\\n                                        <p-column header=\\\"Comment\\\" field=\\\"COMMENT\\\" [style]=\\\"{'width':'15%'}\\\"></p-column>\\r\\n                                    </atpar-datatable>\\r\\n                                </template>\\r\\n                            </atpar-datatable>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<mail-dialog header=\\\"Enter Recipient`s Email Address\\\" [width]=\\\"450\\\" (onClose)=\\\"closeMailPopup()\\\" [(visible)]=\\\"isMailDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\">\\r\\n    <div class=\\\"ui-grid ui-grid-responsive ui-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-1 col-md-1 col-sm-3 col-xs-3\\\" style=\\\"margin-top:2%;margin-right:-2%\\\">\\r\\n                <span style=\\\"font-weight:600\\\">To : </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-8 col-md-8 col-sm-8 col-xs-8\\\">\\r\\n                <atpar-text [(ngModel)]=\\\"toMailAddr\\\" [name]=\\\"txtToMailAddr\\\" [id]=\\\"'txtToMailAddr'\\\"></atpar-text>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-1 col-md-1 col-sm-3 col-xs-3\\\">\\r\\n                <span><button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"onSendMailClick()\\\">Send &nbsp;<i class=\\\"fa fa-share-square-o\\\" aria-hidden=\\\"true\\\"></i></button> </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mail-dialog>\\r\\n\\r\\n<style>\\r\\n    .modal-content {\\r\\n        top: 50% !important;\\r\\n    }\\r\\n</style>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-delivery-report.component.html\n// module id = 1973\n// module chunks = 12","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:20px;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Set ID / Company</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"selectedSetID\\\" [name]=\\\"txtDeptId\\\" [validations]=\\\"'alpha_numeric_underscore_hyphen_backslash_nospace'\\\" [id]=\\\"'txtDeptId'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Location</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"selectedLocation\\\" [name]=\\\"txtDescription\\\" [validations]=\\\"'alpha_numeric_underscore_hyphen_backslash_nospace'\\\" [id]=\\\"'txtDescription'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"getAllLocations()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>\\r\\n                                <div style=\\\"clear:both;\\\"></div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-md-offset-5\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"isVisible\\\">\\r\\n                            <atpar-datatable [value]=\\\"lstDBData\\\" #dt [style]=\\\"{'width':'100%'}\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"pazeSize\\\" (filteredData)=\\\"filterdata($event)\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [responsive]=\\\"true\\\">\\r\\n                                <p-column [style]=\\\"{'width':'7%', 'text-align':'center'}\\\" header=\\\"Select\\\">\\r\\n                                    <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                        <ul class=\\\"list-inline li-all-none\\\">\\r\\n                                            <li>\\r\\n                                                <span (click)=\\\"checkAll()\\\" style=\\\"cursor:pointer\\\">All</span>\\r\\n                                            </li> |\\r\\n                                            <li>\\r\\n                                                <span (click)=\\\"unCheckAll()\\\" style=\\\"cursor:pointer\\\">None</span>\\r\\n                                            </li>\\r\\n                                        </ul>\\r\\n                                    </template>\\r\\n                                    <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <atpar-switch (change)=\\\"selectedRow(ven,$event)\\\" [(ngModel)]=\\\"ven.checkvalue\\\"></atpar-switch>\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n                                <p-column field=\\\"SETID\\\" header=\\\"Set ID\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                <p-column field=\\\"LOCATION\\\" header=\\\"Location\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                <p-column field=\\\"LOCATION_DESC\\\" header=\\\"Description\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n\\r\\n                            </atpar-datatable>\\r\\n                            <br />\\r\\n                            <div class=\\\"col-xs-12 col-md-4 col-sm-6 col-sm-offset-5 col-md-offset-5\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"confirm()\\\">Submit &nbsp;<i class=\\\"fa fa-check\\\"></i></button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"content-section implementation\\\">\\r\\n            <atpar-confirmdialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\"></atpar-confirmdialog>\\r\\n        </div>\\r\\n    </div>\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n</div>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-exclude-locations.component.html\n// module id = 1974\n// module chunks = 12","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px 0px 10px 0px;\\\">\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"tdExports\\\">\\r\\n                            <br />\\r\\n                            <div class=\\\"pull-right\\\" id=\\\"tdExports\\\">\\r\\n                                <ul class=\\\"list-inline\\\">\\r\\n                                    <li class=\\\"no-padding\\\">\\r\\n                                        <i class=\\\"fa fa-envelope-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgMail\\\" title=\\\"Send mail\\\" (click)=\\\"onSendMailIconClick($event)\\\"></i>&nbsp;\\r\\n                                    </li>\\r\\n                                    <li class=\\\"no-padding\\\">\\r\\n                                        <i class=\\\"fa fa-print fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgPrint\\\" title=\\\"Print\\\" (click)=\\\"onPrintClick($event)\\\"></i>&nbsp;\\r\\n                                    </li>\\r\\n                                    <li class=\\\"no-padding\\\">\\r\\n                                        <i class=\\\"fa fa-file-excel-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" id=\\\"imgExcel\\\" title=\\\"Excel Format\\\" (click)=\\\"onExportToExcelClick($event)\\\"></i>&nbsp;\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" novalidate>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Org Group ID </label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{orgGrpId}}</label>\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedOrgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\" (onChange)=\\\"ddlOrgGrpIdChanged()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Report Type</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstRepType\\\" [id]=\\\"'ddlRep'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedReportType\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" (onChange)=\\\"ddlRepTypeChanged()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <!--<label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">User ID</label>-->\\r\\n                                    <label for=\\\"test_step_element_id\\\" class=\\\"control-label col-md-4 col-sm-4 col-xs-12\\\">User ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <!--<atpar-select [options]=\\\"lstUsers\\\" [id]=\\\"'ddllstUsers'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedDropDownUserId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" (onChange)=\\\"ddlUsersIdChanged()\\\"></atpar-select>-->\\r\\n                                        <atpar-multiSelect [options]=\\\"lstUsers\\\" [(ngModel)]=\\\"selectedDropDownUserId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [id]=\\\"'selectedDropDownUserId'\\\" [required]=\\\"true\\\"></atpar-multiSelect>\\r\\n                                        <!--<atpar-listbox [options]=\\\"lstUsers\\\" [(ngModel)]=\\\"selectedDropDownUserId\\\" multiple=\\\"multiple\\\" [id]=\\\"'ddllstUsers'\\\" [required]=\\\"true\\\" checkbox=\\\"checkbox\\\" filter=\\\"filter\\\"  [style]=\\\"{'height':'100px','width':'150px','overflow':'scroll'}\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-listbox>-->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">From Time</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstFromTime\\\" [required]=\\\"true\\\" [id]=\\\"'ddlFromTime'\\\" [(ngModel)]=\\\"selectedFromTime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"blnFromToTimeInterval\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">To Time</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstToTime\\\" [required]=\\\"true\\\" [id]=\\\"'ddlToTime'\\\" [(ngModel)]=\\\"selectedToTime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"blnFromToTimeInterval\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Interval</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstInterval\\\" [required]=\\\"true\\\" [id]=\\\"'ddlInterval'\\\" [(ngModel)]=\\\"selectedInterval\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"blnFromToTimeInterval\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Start Event</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstStartEvent\\\" [required]=\\\"true\\\" [id]=\\\"'ddlStartEvent'\\\" [(ngModel)]=\\\"selectedStartEvent\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"blnStartEndEvents\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">End Event</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstEndEvent\\\" [required]=\\\"true\\\" [id]=\\\"'ddlEndEvent'\\\" [(ngModel)]=\\\"selectedEndEvent\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"blnStartEndEvents\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">From Date</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'fromDate'\\\" [(ngModel)]=\\\"fromDate\\\" [placeholder]=\\\"'From Date'\\\" [dateFormat]=\\\"'mm/dd/yy'\\\" [required]=\\\"true\\\" [readonlyInput]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [monthNavigator]=\\\"true\\\"  [yearNavigator]=\\\"true\\\"  yearRange=\\\"1950:2050\\\"></p-calendar>\\r\\n                                        <!--<p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'FromDatePicker'\\\" [(ngModel)]=\\\"fromDate\\\" [required]=\\\"true\\\" [placeholder]=\\\"'From Date'\\\" [readonlyInput]=\\\"true\\\" (onFocus)=\\\"onfocusFromCalendar($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [dateFormat]=\\\"'mm/dd/yy'\\\"></p-calendar>-->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">To Date</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <!--<p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'ToDatePicker'\\\" [(ngModel)]=\\\"toDate\\\" [required]=\\\"true\\\" [placeholder]=\\\"'To Date'\\\" [readonlyInput]=\\\"true\\\" (onFocus)=\\\"onfocusToCalendar($event)\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [dateFormat]=\\\"'mm/dd/yy'\\\"></p-calendar>-->\\r\\n                                        <p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'toDate'\\\" [(ngModel)]=\\\"toDate\\\" [placeholder]=\\\"'To Date'\\\" [dateFormat]=\\\"'mm/dd/yy'\\\" [required]=\\\"true\\\" [readonlyInput]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [monthNavigator]=\\\"true\\\"  [yearNavigator]=\\\"true\\\"  yearRange=\\\"1950:2050\\\"></p-calendar>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12  col-md-4\\\" style=\\\"margin-top: 20px;\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"bindGrid()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"clear\\\"></div>\\r\\n\\r\\n                            <br />\\r\\n                        </form>\\r\\n                        <div class=\\\"clear\\\"></div>\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"showGrid\\\">\\r\\n                            <div class=\\\"col-md-12 tab-btn\\\">\\r\\n                                <h3 class=\\\"title-hero\\\"> </h3>\\r\\n                                <div class=\\\"example-box-wrapper\\\">\\r\\n                                    <atpar-tabs [selectedTab]=\\\"activeTab\\\" (enableSelectedTab)=\\\"enableSelectedTab($event)\\\">\\r\\n\\r\\n                                        <atpar-tab tabTitle=\\\"Employee Productivity\\\" [active]=\\\"EmpProdTab\\\" (SelectedTab)=\\\"SelectedTab(tab)\\\">\\r\\n\\r\\n                                            <div class=\\\"form-group form-label-left col-md-8 col-md-offset-1 col-sm-12 col-xs-12\\\">\\r\\n                                                <span style=\\\"margin-left: 225px;\\\">D-Day</span>\\r\\n                                                <ul class=\\\"list-inline pull-in\\\" style=\\\"margin-left: 220px;\\\">\\r\\n\\r\\n                                                    <li>Day Packages <i class=\\\"fa fa-square\\\" style=\\\"color:#3391CE;\\\"></i></li>\\r\\n                                                    <li>'0'Time(hours) <i class=\\\"fa fa-square\\\" style=\\\"color:#48BF7D;\\\"></i></li>\\r\\n                                                </ul>\\r\\n                                                <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n                                                <div class=\\\"\\\">\\r\\n                                                    <atpar-chart type=\\\"bar\\\" [id]=\\\"'ChartIdEmpDay'\\\" [data]=\\\"data\\\" [options]=\\\"option\\\"></atpar-chart>\\r\\n\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group form-label-left col-md-8 col-md-offset-1 col-sm-12 col-xs-12\\\">\\r\\n                                                <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n                                                <div class=\\\"\\\">\\r\\n\\r\\n                                                    <atpar-chart type=\\\"bar\\\" [id]=\\\"'ChartIdAvgEmpProd'\\\" [data]=\\\"dataAvg\\\" [options]=\\\"optionForAvg\\\"></atpar-chart>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n\\r\\n                                        </atpar-tab>\\r\\n                                        <atpar-tab tabTitle=\\\"Receive by Employee\\\" [active]=\\\"atpardbTab\\\" (SelectedTab)=\\\"SelectedTab(tab)\\\">\\r\\n\\r\\n                                            <div class=\\\"form-group form-label-left col-md-8 col-md-offset-1 col-sm-12 col-xs-12\\\">\\r\\n                                                <div class=\\\"clearfix\\\"></div>\\r\\n                                                <div class=\\\"\\\">\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForRecv1'\\\" [data]=\\\"dataForRecv1\\\" [options]=\\\"optionForRecv1\\\" *ngIf=\\\"blnGraph1\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForRecv2'\\\" [data]=\\\"dataForRecv2\\\" [options]=\\\"optionForRecv2\\\" *ngIf=\\\"blnGraph2\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForRecv3'\\\" [data]=\\\"dataForRecv3\\\" [options]=\\\"optionForRecv3\\\" *ngIf=\\\"blnGraph3\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForRecv4'\\\" [data]=\\\"dataForRecv4\\\" [options]=\\\"optionForRecv4\\\" *ngIf=\\\"blnGraph4\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForRecv5'\\\" [data]=\\\"dataForRecv5\\\" [options]=\\\"optionForRecv5\\\" *ngIf=\\\"blnGraph5\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForSummaryRecv'\\\" [data]=\\\"dataForSummaryRecv\\\" [options]=\\\"optionForSummaryRecv\\\"></atpar-chart>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                                        </atpar-tab>\\r\\n                                        <atpar-tab tabTitle=\\\"Deliver by Employee\\\" [active]=\\\"atpardbTab\\\" (SelectedTab)=\\\"SelectedTab(tab)\\\">\\r\\n                                            <div class=\\\"form-group form-label-left col-md-8 col-md-offset-1 col-sm-12 col-xs-12\\\">\\r\\n                                                <div class=\\\"clearfix\\\"></div>\\r\\n                                                <div class=\\\"\\\">\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForDelv1'\\\" [data]=\\\"dataForDelv1\\\" [options]=\\\"optionForDeliver1\\\" *ngIf=\\\"blnGraph1\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForDelv2'\\\" [data]=\\\"dataForDelv2\\\" [options]=\\\"optionForDeliver2\\\" *ngIf=\\\"blnGraph2\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForDelv3'\\\" [data]=\\\"dataForDelv3\\\" [options]=\\\"optionForDeliver3\\\" *ngIf=\\\"blnGraph3\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForDelv4'\\\" [data]=\\\"dataForDelv4\\\" [options]=\\\"optionForDeliver4\\\" *ngIf=\\\"blnGraph4\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForDelv5'\\\" [data]=\\\"dataForDelv5\\\" [options]=\\\"optionForDeliver5\\\" *ngIf=\\\"blnGraph5\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForSummaryDeliver'\\\" [data]=\\\"dataForSummaryDeliver\\\" [options]=\\\"optionForSummaryDeliver\\\"></atpar-chart>\\r\\n\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </atpar-tab>\\r\\n                                        <atpar-tab tabTitle=\\\"Dock Performance\\\" [active]=\\\"emailTab\\\" (SelectedTab)=\\\"SelectedTab(tab)\\\">\\r\\n                                            <div class=\\\"form-group form-label-left col-md-8 col-md-offset-1 col-sm-12 col-xs-12\\\">\\r\\n                                                <div class=\\\"clearfix\\\"></div>\\r\\n                                                <div class=\\\"\\\">\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForDock1'\\\" [data]=\\\"dataForDock1\\\" [options]=\\\"optionForDock1\\\" *ngIf=\\\"blnGraph1\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForDock2'\\\" [data]=\\\"dataForDock2\\\" [options]=\\\"optionForDock2\\\" *ngIf=\\\"blnGraph2\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForDock3'\\\" [data]=\\\"dataForDock3\\\" [options]=\\\"optionForDock3\\\" *ngIf=\\\"blnGraph3\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForDock4'\\\" [data]=\\\"dataForDock4\\\" [options]=\\\"optionForDock4\\\" *ngIf=\\\"blnGraph4\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForDock5'\\\" [data]=\\\"dataForDock5\\\" [options]=\\\"optionForDock5\\\" *ngIf=\\\"blnGraph5\\\"></atpar-chart>\\r\\n                                                    <atpar-chart type=\\\"line\\\" [id]=\\\"'ChartIdForSummaryDock'\\\" [data]=\\\"dataForSummaryDock\\\" [options]=\\\"optionForSummaryDock\\\"></atpar-chart>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </atpar-tab>\\r\\n\\r\\n\\r\\n\\r\\n                                    </atpar-tabs>\\r\\n                                </div>\\r\\n                                <!--<br />-->\\r\\n                                <div *ngIf=\\\"isVisible\\\" class=\\\"col-xs-12 col-sm-6 col-sm-offset-5 col-md-4 col-md-offset-5\\\">\\r\\n                                    <button *ngIf=\\\"activeTab!='AtPar System' && activeTab!='Log'\\\" id=\\\"btnErpSystem\\\" class=\\\"btn btn-purple sbtn\\\" (click)=\\\"onSubmit()\\\">Submit &nbsp; <i class=\\\"fa fa-check\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"container table-group-section\\\" *ngIf=\\\"showGridCycleTime\\\" style=\\\"padding-left:0!important;padding-right:0!important;margin:0 10px!important;\\\">\\r\\n                            <div class=\\\"col-xs-12\\\" style=\\\"padding-left:0!important;padding-right:0!important;\\\">\\r\\n                                <atpar-datatable [value]=\\\"lstFinalCycleData\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"recordsPerPageSize\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                    <p-column field=\\\"TRACKING_NBR\\\" header=\\\"Tracking #\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"DELIVER_FROM\\\" header=\\\"Delivery Person\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"CYCLE_TIME\\\" header=\\\"Cycle Time\\\" [style]=\\\"{'text-align':'right'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"HOURS\\\" header=\\\"Hours\\\" [style]=\\\"{'text-align':'right'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"MINS\\\" header=\\\"Minutes\\\" [style]=\\\"{'text-align':'right'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"SECONDS\\\" header=\\\"Seconds\\\" [style]=\\\"{'text-align':'right'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"TOT_HOURS\\\" header=\\\"Total Hours\\\" [style]=\\\"{'text-align':'right'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n\\r\\n                                    </p-column>\\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                            <div class=\\\"clear\\\"></div>\\r\\n                            <div class=\\\"container inner-table-group-section\\\" style=\\\"padding-left:0!important;padding-right:0!important;\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-8\\\" style=\\\"padding-left:0!important;\\\">\\r\\n                                    <atpar-datatable [value]=\\\"lstCycleHourDetails\\\" [responsive]=\\\"true\\\">\\r\\n                                        <p-column field=\\\"HOURSSUMMARY\\\" header=\\\"Less than (hours)\\\" [style]=\\\"{'width':'4%','text-align':'center'}\\\">\\r\\n\\r\\n                                        </p-column>\\r\\n                                        <p-column field=\\\"COUNTSUMMARY\\\" header=\\\"Count\\\" [style]=\\\"{'width':'4%','text-align':'right'}\\\">\\r\\n\\r\\n                                        </p-column>\\r\\n                                        <p-column field=\\\"COUNT_PERCENTSUMMARY\\\" header=\\\"%\\\" [style]=\\\"{'width':'4%','text-align':'right'}\\\">\\r\\n\\r\\n                                        </p-column>\\r\\n\\r\\n                                    </atpar-datatable>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\" style=\\\"padding-right:0!important;\\\">\\r\\n                                    <br />\\r\\n                                    <br />\\r\\n                                    <span class=\\\"text-primary text-center\\\"><strong>Results</strong></span>\\r\\n                                    <br />\\r\\n                                    <atpar-datatable [value]=\\\"Results\\\" [responsive]=\\\"true\\\">\\r\\n                                        <p-column field=\\\"Count\\\" header=\\\"Count\\\" [style]=\\\"{'width':'4%','text-align':'right'}\\\">\\r\\n\\r\\n                                        </p-column>\\r\\n                                        <p-column field=\\\"AVG\\\" header=\\\"AVG\\\" [style]=\\\"{'width':'4%','text-align':'right'}\\\">\\r\\n\\r\\n                                        </p-column>\\r\\n                                        <p-column field=\\\"Min\\\" header=\\\"MIN\\\" [style]=\\\"{'width':'4%','text-align':'right'}\\\">\\r\\n\\r\\n                                        </p-column>\\r\\n                                        <p-column field=\\\"Max\\\" header=\\\"MAX\\\" [style]=\\\"{'width':'4%','text-align':'right'}\\\">\\r\\n\\r\\n                                        </p-column>\\r\\n                                        <p-column field=\\\"StDev\\\" header=\\\"ST.DEV\\\" [style]=\\\"{'width':'4%','text-align':'right'}\\\">\\r\\n\\r\\n                                        </p-column>\\r\\n\\r\\n                                    </atpar-datatable>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--<mail-dialog header=\\\"Enter Recipient`s Email Address\\\" [width]=\\\"450\\\" (onClose)=\\\"closeMailPopup()\\\" [(visible)]=\\\"isMailDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\">\\r\\n    <div class=\\\"ui-grid ui-grid-responsive ui-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-2 col-md-2 col-sm-3 col-xs-3\\\">\\r\\n                <span>To : </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-8 col-xs-8\\\">\\r\\n                <atpar-text [(ngModel)]=\\\"toMailAddr\\\" [name]=\\\"txtToMailAddr\\\" [id]=\\\"'txtToMailAddr'\\\"></atpar-text>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-md-2 col-sm-3 col-xs-3\\\">\\r\\n                <span><button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"onSendMailClick()\\\">Send &nbsp;<i class=\\\"fa fa-share-square-o\\\" aria-hidden=\\\"true\\\"></i></button> </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mail-dialog>-->\\r\\n\\r\\n<mail-dialog header=\\\"Enter Recipient`s Email Address\\\" [width]=\\\"450\\\" (onClose)=\\\"closeMailPopup()\\\" [(visible)]=\\\"isMailDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\">\\r\\n    <div class=\\\"ui-grid ui-grid-responsive ui-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-1 col-md-1 col-sm-3 col-xs-3\\\" style=\\\"margin-top:2%;margin-right:-2%\\\">\\r\\n                <span style=\\\"font-weight:600\\\">To : </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-8 col-md-8 col-sm-8 col-xs-8\\\">\\r\\n                <atpar-text [(ngModel)]=\\\"toMailAddr\\\" [name]=\\\"txtToMailAddr\\\" [id]=\\\"'txtToMailAddr'\\\"></atpar-text>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-1 col-md-1 col-sm-3 col-xs-3\\\">\\r\\n                <span><button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"onSendMailClick()\\\">Send &nbsp;<i class=\\\"fa fa-share-square-o\\\" aria-hidden=\\\"true\\\"></i></button> </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mail-dialog>\\r\\n\\r\\n<style>\\r\\n    .modal-content {\\r\\n        top: 50% !important;\\r\\n    }\\r\\n\\r\\n    ul.right-images li img {\\r\\n        width: 60px !important;\\r\\n        cursor: pointer;\\r\\n    }\\r\\n</style>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-productivity-report.component.html\n// module id = 1975\n// module chunks = 12","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Org Group ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <label *ngIf=\\\"blnShowOrgGroupLabel\\\" style=\\\"margin-top:10px\\\">{{orgGrpId}}</label>\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedOrgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\" (onChange)=\\\"ddlOrgGrpIdChanged()\\\"></atpar-select>\\r\\n                                        \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Business Unit</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                       \\r\\n                                        <atpar-select [options]=\\\"lstFilteredBUnits\\\" [id]=\\\"'ddlOrg'\\\" [(ngModel)]=\\\"selectedBunit\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Trk# / PO# / Location</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"selectedParLocation\\\" [name]=\\\"txtLocationID1\\\"  [validations]=\\\"'alpha_numeric_underscore_hyphen_backslash_nospace'\\\" [id]=\\\"'LocationID1'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div style=\\\"clear:both;\\\"></div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-md-4 col-sm-offset-5 col-md-offset-5\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"go_Click()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                               </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"showGrid\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <atpar-datatable [value]=\\\"lstDBData\\\" [style]=\\\"{'width':'100%'}\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"recordsPerPageSize\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                    <p-column header=\\\"Select\\\" [style]=\\\"{'text-align':'center','width':'7%'}\\\">\\r\\n                                        <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                            <ul class=\\\"list-inline\\\">\\r\\n                                                <li>\\r\\n                                                    <a style=\\\"cursor:pointer\\\" (click)=\\\"checkAll()\\\">All</a>\\r\\n                                                </li> |\\r\\n                                                <li>\\r\\n                                                    <a style=\\\"cursor:pointer\\\" (click)=\\\"uncheckAll()\\\">None</a>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </template>\\r\\n                                        <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <atpar-switch (change)=\\\"unlockRow($event,ven)\\\" [(ngModel)]=\\\"ven.Status\\\"></atpar-switch>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"TRACKINGNO_POID_LOC\\\" header=\\\"Trk# / PO# / Location\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"CURRENT_EVENT\\\" header=\\\"Current Event\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'12%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"DOWNLOAD_DT_TIME\\\" header=\\\"Date / Time\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'14%'}\\\"></p-column>\\r\\n                                    <p-column field=\\\"USERNAME\\\" header=\\\"User ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                            <br>\\r\\n                            <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-sm-offset-5 col-md-offset-5\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"UnlockSelectedRecords()\\\">Unlock &nbsp;<i class=\\\"fa fa-unlock\\\"></i></button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"content-section implementation\\\">\\r\\n                            <atpar-confirmdialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\"></atpar-confirmdialog>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-release-packages.component.html\n// module id = 1976\n// module chunks = 12","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <atpar-growl [value]=\\\"growlMessage\\\" sticky=“sticky”></atpar-growl>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0 0 10px 0;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" *ngIf=\\\"searchFrom\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\" *ngIf=\\\"lblShowOrgGroupLabel\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Org Group ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <label class=\\\"control-label lbl-left\\\">{{orgGrpId}}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\" *ngIf=\\\"ddlShowOrgGroupId\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Org Group ID </label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\"\\r\\n                                                      [(ngModel)]=\\\"orgGroupIdNgModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                      filter=\\\"filter\\\" *ngIf=\\\"ddlShowOrgGroupId\\\" (onChange)=\\\"ddlOrgGrpIdChanged($event)\\\" [name]=\\\"ddllstOrgGroups\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Location</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"searchLocationNgModel\\\" [name]=\\\"searchLocationNgModel\\\" *ngIf=\\\"!isEditMode\\\"\\r\\n                                                    [id]=\\\"'searchLocationNgModel'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-md-4 col-sm-6\\\">Description</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"searchDescriptionNgModel\\\" [name]=\\\"searchDescriptionNgModel\\\" *ngIf=\\\"!isEditMode\\\"\\r\\n                                                    [id]=\\\"'searchDescriptionNgModel'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div style=\\\"clear:both;\\\"></div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-sm-offset-5 col-md-4 col-md-offset-5\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"btn_go()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"add()\\\">Create &nbsp;<i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"showGrid\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <atpar-datatable [value]=\\\"lstGridData\\\" [style]=\\\"{'width':'100%'}\\\" [paginator]=\\\"true\\\" #dt [pageLinks]=\\\"3\\\" [rows]=\\\"pageSize\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                    <p-column header=\\\"Action\\\" field=\\\"DROP_OFF_LOCATION_ID\\\" [style]=\\\"{'width':'4%','text-align':'center'}\\\">\\r\\n                                        <template let-col let-rowData=\\\"rowData\\\" pTemplate type=\\\"body\\\">\\r\\n\\r\\n                                            <i class=\\\"fa fa-pencil fa-bg bg-red\\\" title=\\\"Edit\\\" (click)=\\\"editdropOffLocation(rowData)\\\" style=\\\"cursor:pointer\\\"></i>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <p-column header=\\\"Location\\\" field=\\\"DROP_OFF_LOCATION_ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'40%'}\\\">\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"LOCATION_DESC\\\" header=\\\"Description\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"STATUS\\\" header=\\\"Status\\\" [filter]=\\\"true\\\" [style]=\\\"{'width': '8%','overflow':'visible','text-align':'center'}\\\" filterMatchMode=\\\"equals\\\">\\r\\n                                        <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                            <atpar-select-grid [options]=\\\"ddlStatusType\\\" [(ngModel)]=\\\"statusType\\\" [style]=\\\"{'width':'100%'}\\\" [id]=\\\"'ddlddlStatusType'\\\" [required]=\\\"false\\\" (onChange)=\\\"dataFilter($event.value,col.field,col.filterMatchMode)\\\"></atpar-select-grid>\\r\\n                                        </template>\\r\\n                                        <template let-col let-droplocationData=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <atpar-switch [checked]=droplocationData[col.field] [(ngModel)]=\\\"droplocationData[col.field]\\\" name=\\\"changeStatus\\\" (click)=\\\"changeStatus(droplocationData)\\\"></atpar-switch>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n\\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" *ngIf=\\\"addEditFrom\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"form-group\\\" *ngIf=\\\"lblShowOrgGroupLabel\\\">\\r\\n                                    <label for=\\\"industry\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Org Group ID</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <label class=\\\"control-label lbl-left\\\">{{orgGrpId}}</label>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\" *ngIf=\\\"ddlShowOrgGroupId\\\">\\r\\n                                    <label for=\\\"industry\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Org Group ID</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\"\\r\\n                                                      [(ngModel)]=\\\"orgGroupIdNgModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                      filter=\\\"filter\\\" *ngIf=\\\"ddlShowOrgGroupId\\\" (onChange)=\\\"ddlOrgGrpIdChanged($event)\\\" [name]=\\\"ddllstOrgGroups\\\"\\r\\n                                                      [disabled]=\\\"orgIdDisabled\\\" [isfocus]=\\\"ddlShowOrgGroupId\\\"></atpar-select>\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"industry\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Location</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"deliversetuplocDetails.DROP_OFF_LOCATION_ID\\\" [name]=\\\"saveLocationsNgModel\\\"\\r\\n                                                    [id]=\\\"'saveLocationsNgModel'\\\"\\r\\n                                                    [validations]=\\\"'mandatory,alpha_numeric_hyphen_underscore_dot_tilde_verticalBar,max=20'\\\" [isFocused]=\\\"'true'\\\"\\r\\n                                                    (bindModelDataChange)=\\\"bindModelDataChange($event)\\\"\\r\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\" [title]=\\\"'Use only A-Z,a-z,0-9.-_,|,~ max 20 characters'\\\" *ngIf=\\\"lblShowOrgGroupLabel\\\"></atpar-text>\\r\\n                                        <atpar-text [(ngModel)]=\\\"deliversetuplocDetails.DROP_OFF_LOCATION_ID\\\" [name]=\\\"saveLocationsNgModel\\\"\\r\\n                                                    [id]=\\\"'saveLocationsNgModel'\\\"\\r\\n                                                    [validations]=\\\"'mandatory,alpha_numeric_hyphen_underscore_dot_tilde_verticalBar,max=20'\\\"\\r\\n                                                    (bindModelDataChange)=\\\"bindModelDataChange($event)\\\"\\r\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\" [title]=\\\"'Use only A-Z,a-z,0-9.-_,|,~ max 20 characters'\\\" *ngIf=\\\"!lblShowOrgGroupLabel\\\"></atpar-text>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"industry\\\" class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\">Description</label>\\r\\n                                    <div class=\\\"col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"deliversetuplocDetails.LOCATION_DESC\\\" [name]=\\\"saveDescriptionNgModel\\\" *ngIf=\\\"!isEditMode\\\"\\r\\n                                                    [id]=\\\"'saveDescriptionNgModel'\\\" \\r\\n                                                     [validations]=\\\"'max=254'\\\"\\r\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\" [title]=\\\"'Any character A-Z,a-z,0-9,!,#,$... max 254 characters'\\\"></atpar-text>\\r\\n\\r\\n\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-md-4 col-sm-offset-5 col-md-offset-5\\\">\\r\\n                                    <button class=\\\"btn btn-purple small\\\" (click)=\\\"saveOrUpdate()\\\" *ngIf=\\\"mode=='Add'\\\" [disabled]=\\\"saveAndUpdateButton\\\">Save &nbsp;<i class=\\\"fa fa-floppy-o\\\"></i></button> \\r\\n                                    <button class=\\\"btn btn-purple small\\\" (click)=\\\"saveOrUpdate()\\\" *ngIf=\\\"mode=='Edit'\\\" [disabled]=\\\"saveAndUpdateButton\\\">Update &nbsp;<i class=\\\"fa fa-check\\\"></i></button>\\r\\n                                    <button class=\\\"btn btn-purple small\\\" (click)=\\\"close()\\\"><i class=\\\"fa fa-arrow-left\\\"></i>&nbsp; Go Back</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-setup-drop-off-locations.component.html\n// module id = 1977\n// module chunks = 12","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\" *ngIf=\\\"true\\\">\\r\\n            <br>    \\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"control-label lbl-left col-xs-12 col-sm-6 col-md-4\\\">Org Group ID </label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{orgGrpIdData}}</label>\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" *ngIf=\\\"blnShowOrgGroupsDropdown\\\"  (onChange)=\\\"ddlOrgGrpIdChanged()\\\"\\r\\n                                                      [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedOrgGrpId\\\" \\r\\n                                                      [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-3 form-group\\\">\\r\\n                                        <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"btnGoClick()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>                              \\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n                        <div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"isVisible\\\" >\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <atpar-datatable [value]=\\\"lstDBData\\\" #dt [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"recordsPerPageSize\\\"\\r\\n                                                 [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [responsive]=\\\"true\\\">\\r\\n\\r\\n                                    <p-column [style]=\\\"{'width':'7%', 'text-align':'center'}\\\" header=\\\"Select\\\">\\r\\n                                        <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                            <ul class=\\\"list-inline  li-all-none\\\">\\r\\n                                                <li>\\r\\n                                                    <span (click)=\\\"checkAll()\\\" style=\\\"cursor:pointer\\\">All</span>\\r\\n                                                </li> |\\r\\n                                                <li>\\r\\n                                                    <span (click)=\\\"unCheckAll()\\\" style=\\\"cursor:pointer\\\">None</span>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </template>\\r\\n                                        <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <atpar-switch id=\\\"chkvalue\\\" (change)=\\\"selectedRow(ven,$event)\\\" [(ngModel)]=\\\"ven.checkvalue\\\"></atpar-switch>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'20%'}\\\" field=\\\"SHIPTO_ID\\\" header=\\\"ShipTo ID\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'40%'}\\\" field=\\\"DESCR\\\" header=\\\"ShipTo Name\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'20%'}\\\" field=\\\"ORG_ID\\\" header=\\\"Business Unit\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                            <br>\\r\\n                            <div class=\\\"col-xs-12 col-md-4 col-md-offset-5 col-sm-6 col-sm-offset-5\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" id=\\\"btnsubmitForGrid\\\" (click)=\\\"btn_Submit($event)\\\">Submit &nbsp;<i class=\\\"fa fa-check\\\"></i> </button>                             \\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-shiptoid-allocation-for-delivery-of-stock-items.component.html\n// module id = 1978\n// module chunks = 12","module.exports = \"<div>\\r\\n    <atpar-user-parameters [appId]=\\\"dlvrAppId\\\"></atpar-user-parameters>    \\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver-user-parameters.component.html\n// module id = 1979\n// module chunks = 12","module.exports = \"<div>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/Deliver/deliver.component.html\n// module id = 1980\n// module chunks = 12"],"sourceRoot":""}