{"version":3,"sources":["webpack:///./src/app/StockIssue/stis-allocate-destination-locations.component.ts","webpack:///./src/app/StockIssue/stis-allocate-distribution-types.component.ts","webpack:///./src/app/StockIssue/stis-allocate-inventory-business-units.component.ts","webpack:///./src/app/StockIssue/stis-daily-activity.component.ts","webpack:///./src/app/StockIssue/stis-daily-user-activity.component.ts","webpack:///./src/app/StockIssue/stis-issue-report.component.ts","webpack:///./src/app/StockIssue/stis-user-parameters.component.ts","webpack:///./src/app/StockIssue/stockissue.component.ts","webpack:///./src/app/StockIssue/stis-allocate-destination-locations.services.ts","webpack:///./src/app/StockIssue/stis-allocate-distribution-types.service.ts","webpack:///./src/app/StockIssue/stis-issue-report.service.ts","webpack:///./src/app/StockIssue/stockissue-routing.module.ts","webpack:///./src/app/StockIssue/stockissue.module.ts","webpack:///./src/app/StockIssue/stis-allocate-destination-locations.component.html","webpack:///./src/app/StockIssue/stis-allocate-distribution-types.component.html","webpack:///./src/app/StockIssue/stis-allocate-inventory-business-units.component.html","webpack:///./src/app/StockIssue/stis-daily-activity.component.html","webpack:///./src/app/StockIssue/stis-daily-user-activity.component.html","webpack:///./src/app/StockIssue/stis-issue-report.component.html","webpack:///./src/app/StockIssue/stis-user-parameters.component.html","webpack:///./src/app/StockIssue/stockissue.component.html"],"names":[],"mappings":"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","file":"16.601fce7cdc00a672fc7a.chunk.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { MT_ATPAR_USER } from '../../app/Entities/MT_ATPAR_USER';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { MT_ATPAR_ORG_GROUP_BUNITS } from '../../app/Entities/MT_ATPAR_ORG_GROUP_BUNITS';\r\nimport { MT_STIS_DEST_LOC_ALLOCATION } from '../../app/Entities/MT_STIS_DEST_LOC_ALLOCATION';\r\nimport { AllocateDestinationLocationsService } from '../../app/StockIssue/stis-allocate-destination-locations.services';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { TokenEntry_Enum, ClientType, StatusType, BusinessType, EnumApps } from '../Shared/AtParEnums';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { SelectItem, Message } from './../components/common/api';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { List, Enumerable } from 'linqts';\r\nimport { asEnumerable } from 'linq-es5';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n\r\n    template: require('./stis-allocate-destination-locations.component.html'),\r\n    providers: [AllocateDestinationLocationsService, HttpService, AtParCommonService, AtParConstants]\r\n})\r\n\r\nexport class AllocateDestinationLocationsComponent {\r\n    appID: number = 10;\r\n    lstBUnits: any[];\r\n    lstDBData: MT_STIS_DEST_LOC_ALLOCATION[];\r\n    lstgridfilterData: MT_STIS_DEST_LOC_ALLOCATION[];\r\n    deviceTokenEntry: string[] = [];\r\n    lstUsers: SelectItem[];\r\n    lstOrgGroups: SelectItem[];\r\n    ddllBunit: SelectItem[];\r\n    displayOptions: SelectItem[];\r\n    lstCheckedLocations: Array<MT_STIS_DEST_LOC_ALLOCATION>;\r\n    userDataList: MT_ATPAR_USER[];\r\n    selectedUserIDList: string = \"\";\r\n    blnSortByColumn: boolean = true;\r\n    dataCheckedSorting: MT_STIS_DEST_LOC_ALLOCATION[] = [];\r\n    dataUncheckedSorting: Array<MT_STIS_DEST_LOC_ALLOCATION>;\r\n    sortedcheckedrec: MT_STIS_DEST_LOC_ALLOCATION[];\r\n    sorteduncheckedrec: MT_STIS_DEST_LOC_ALLOCATION[];\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n\r\n    orgGrpID: string = \"\";\r\n    orgGrpIDData: string = \"\";\r\n    userID: string = \"\";\r\n    seletedStatus: string = \"\";\r\n    startIndex: number;\r\n    EndIndex: number;\r\n\r\n    //for orgGrpDropdown\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    blnShowOrgGroupDD: boolean = false;\r\n\r\n    //for userID DropDown\r\n    blnShowUserIDLabel: boolean = false;\r\n    blnShowUserIDDD: boolean = false;\r\n\r\n    selectedOrgGroupId: string = \"\";\r\n    selectedDropDownUserId: string = \"\";\r\n    selectedBunit: string = \"\";\r\n    selectedLocation: string = \"\";\r\n\r\n    isVisible: boolean = false;\r\n    growlMessage: Message[] = [];\r\n    lstLocations: MT_STIS_DEST_LOC_ALLOCATION[] = [];\r\n    orgGroupIDForDBUpdate: string;\r\n    lstFilteredLocation: any;\r\n    blnsortbycolumn: boolean = true;\r\n    custom: string = \"custom\";\r\n    pazeSize: number;\r\n\r\n    public constructor(\r\n        private allocateDestinationLocationsService: AllocateDestinationLocationsService,\r\n        private spinnerService: SpinnerService,\r\n        public atParCommonService: AtParCommonService,\r\n        private httpService: HttpService,\r\n        private atParConstant: AtParConstants\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n        this.lstCheckedLocations = new Array<MT_STIS_DEST_LOC_ALLOCATION>();\r\n        this.dataCheckedSorting = new Array<MT_STIS_DEST_LOC_ALLOCATION>();\r\n        this.dataUncheckedSorting = new Array<MT_STIS_DEST_LOC_ALLOCATION>();\r\n        this.lstFilteredLocation = new Array<MT_STIS_DEST_LOC_ALLOCATION>();\r\n        this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n        this.displayOptions = [];\r\n        this.displayOptions.push({ label: 'ALL', value: 'A' });\r\n        this.displayOptions.push({ label: 'Allocated', value: 'L' });\r\n        this.displayOptions.push({ label: 'Unallocated', value: 'U' });\r\n        this.seletedStatus = \"A\";\r\n        this.bindOrgGroups();\r\n\r\n        this.ddllBunit = [];\r\n\r\n        this.ddllBunit.push({ label: \"Select BUnit\", value: \"Select BUnit\" })\r\n\r\n        this.pazeSize = +this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n    }\r\n\r\n    async  bindOrgGroups() {\r\n\r\n        this.spinnerService.start();\r\n        try {\r\n            await this.atParCommonService.getUserOrgGroups(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n                            this.spinnerService.stop();\r\n                            if (this.orgGroupData.length == 1) {\r\n\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.orgGrpIDData = this.orgGroupData[0].ORG_GROUP_ID + \" - \" + this.orgGroupData[0].ORG_GROUP_NAME;\r\n                                this.orgGrpID = this.orgGroupData[0].ORG_GROUP_ID;\r\n\r\n                                this.bindUsersList();\r\n\r\n                                this.populateBusinessUnits();\r\n\r\n                                break;\r\n\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.blnShowOrgGroupDD = true;\r\n                                this.lstUsers = [];\r\n                                this.lstUsers.push({ label: \"Select User\", value: \"Select User\" })\r\n                                this.lstOrgGroups = [];\r\n                                this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" })\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID !== \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + \" - \" + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n\r\n\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindOrgGroups\");\r\n        }\r\n    }\r\n\r\n    async  ddlOrgGrpIdChanged() {\r\n        this.isVisible = false;\r\n        this.growlMessage = [];\r\n\r\n        if (this.selectedOrgGroupId == \"Select One\") {\r\n            this.selectedBunit = \"Select BUnit\";\r\n            this.selectedDropDownUserId = \"Select User\";\r\n            this.lstUsers = [];\r\n            this.ddllBunit = [];\r\n            this.ddllBunit.push({ label: \"Select BUnit\", value: \"Select BUnit\" })\r\n            this.lstUsers.push({ label: \"Select User\", value: \"Select User\" });\r\n            return;\r\n        }\r\n        this.selectedBunit = \"Select BUnit\";\r\n        this.selectedDropDownUserId = \"\";\r\n        this.lstDBData = new Array<MT_STIS_DEST_LOC_ALLOCATION>();\r\n        this.spinnerService.start();\r\n\r\n        try {\r\n\r\n            await this.bindUsersList();\r\n\r\n            await this.populateBusinessUnits();\r\n\r\n            this.spinnerService.stop();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ddlOrgGrpIdChanged\");\r\n        }\r\n\r\n    }\r\n\r\n    ddlUserChange() {\r\n        this.isVisible = false;\r\n    }\r\n\r\n    ddl_Change() {\r\n        this.isVisible = false;\r\n    }\r\n\r\n    async  bindUsersList() {\r\n        try {\r\n            if (this.blnShowOrgGroupLabel == true) {\r\n                this.orgGroupIDForDBUpdate = this.orgGrpID;\r\n            }\r\n            else {\r\n                this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n            }\r\n\r\n            this.lstUsers = [];\r\n            this.lstUsers.push({ label: \"Select User\", value: \"Select User\" });\r\n\r\n            this.spinnerService.start();\r\n\r\n\r\n            await this.atParCommonService.getUsersList(this.deviceTokenEntry[TokenEntry_Enum.UserID], EnumApps.StockIssue, this.orgGroupIDForDBUpdate)\r\n\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_USER>;\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            this.userDataList = data.DataList;\r\n                            for (let i = 0; i < data.DataList.length; i++) {\r\n                                this.lstUsers.push({\r\n                                    label: data.DataList[i].FULLNAME,\r\n                                    value: data.DataList[i].USER_ID\r\n                                })\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n        }\r\n\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindUsersList\");\r\n        }\r\n\r\n    }\r\n\r\n    selectedRow(values: any, event) {\r\n\r\n        if (event == true) {\r\n            values.CHK_VALUE = 1;\r\n        }\r\n        else {\r\n            values.CHK_VALUE = 0;\r\n        }\r\n\r\n        for (var i = 0; i < this.lstCheckedLocations.length; i++) {\r\n            if (this.lstCheckedLocations[i].LOCATION_ID === values.LOCATION_ID) {\r\n                var index = this.lstCheckedLocations.indexOf(this.lstCheckedLocations[i], 0)\r\n                this.lstCheckedLocations.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        this.lstCheckedLocations.push(values);\r\n    }\r\n\r\n    async  populateBusinessUnits(): Promise<boolean> {\r\n\r\n        if (this.blnShowOrgGroupLabel == true) {\r\n            this.orgGroupIDForDBUpdate = this.orgGrpID;\r\n        }\r\n        else {\r\n            this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n        }\r\n        this.lstBUnits = [];\r\n        this.ddllBunit = [];\r\n        this.ddllBunit.push({ label: \"Select BUnit\", value: \"Select BUnit\" })\r\n\r\n        let isOrgBUnitsExist: boolean = false;\r\n        this.spinnerService.start();\r\n\r\n        if ((this.orgGroupIDForDBUpdate == null || this.orgGroupIDForDBUpdate == undefined || this.orgGroupIDForDBUpdate == \"\" || this.orgGroupIDForDBUpdate == \"Select One\") && this.blnShowOrgGroupDD) {\r\n\r\n            this.growlMessage = [];\r\n            this.spinnerService.stop();\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select OrgGroupID\" });\r\n            return;\r\n        }\r\n\r\n\r\n        try {\r\n            await this.allocateDestinationLocationsService.getAllocInvBUnits(this.appID, this.deviceTokenEntry[TokenEntry_Enum.UserID], this.orgGroupIDForDBUpdate)\r\n                .forEach((res) => {\r\n\r\n                    this.growlMessage = [];\r\n                    if (res.StatusCode == AtparStatusCodes.E_NORECORDFOUND) {\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'No Assigned Org Business Units' });\r\n                        this.spinnerService.stop();\r\n                        return;\r\n                    }\r\n                    switch (res.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.spinnerService.stop();\r\n                            this.ddllBunit = [];\r\n                            this.lstBUnits = res.DataList;\r\n                            this.ddllBunit.push({ label: \"Select BUnit\", value: \"Select BUnit\" })\r\n                            for (var i = 0; i < this.lstBUnits.length; i++) {\r\n                                this.ddllBunit.push({ label: this.lstBUnits[i], value: this.lstBUnits[i] });\r\n\r\n                            }\r\n\r\n                            isOrgBUnitsExist = true;\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.isVisible = false;\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                            isOrgBUnitsExist = false;\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.isVisible = false;\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                            isOrgBUnitsExist = false;\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.isVisible = false;\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                            isOrgBUnitsExist = false;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            return Promise.resolve(isOrgBUnitsExist);\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"populateBusinessUnits\");\r\n        }\r\n    }\r\n\r\n    checkAll() {\r\n        this.lstCheckedLocations = [];\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n\r\n        if (this.lstgridfilterData != null && this.lstgridfilterData != undefined && this.lstgridfilterData.length > 0) {\r\n\r\n            if (this.EndIndex > this.lstgridfilterData.length) {\r\n                this.EndIndex = this.lstgridfilterData.length;\r\n            }\r\n\r\n            for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                this.lstgridfilterData[i].checkvalue = true;\r\n                this.lstgridfilterData[i].CHK_VALUE = 1;\r\n                this.lstCheckedLocations.push(this.lstgridfilterData[i]);\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            if (this.EndIndex > this.lstDBData.length) {\r\n                this.EndIndex = this.lstDBData.length;\r\n            }\r\n\r\n            for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                this.lstDBData[i].checkvalue = true;\r\n                this.lstDBData[i].CHK_VALUE = 1;\r\n                this.lstCheckedLocations.push(this.lstDBData[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    unCheckAll() {\r\n        this.lstCheckedLocations = [];\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n        if (this.lstgridfilterData != null && this.lstgridfilterData != undefined && this.lstgridfilterData.length > 0) {\r\n\r\n            if (this.EndIndex > this.lstgridfilterData.length) {\r\n                this.EndIndex = this.lstgridfilterData.length;\r\n            }\r\n\r\n            for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                this.lstgridfilterData[i].checkvalue = false;\r\n                this.lstgridfilterData[i].CHK_VALUE = 0;\r\n                this.lstCheckedLocations.push(this.lstgridfilterData[i]);\r\n            }\r\n        }\r\n        else {\r\n            if (this.EndIndex > this.lstDBData.length) {\r\n                this.EndIndex = this.lstDBData.length;\r\n            }\r\n\r\n            for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                this.lstDBData[i].checkvalue = false;\r\n                this.lstDBData[i].CHK_VALUE = 0;\r\n                this.lstCheckedLocations.push(this.lstDBData[i]);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    BindDataGrid() {\r\n        try {\r\n            var lstDBDataList;\r\n            this.growlMessage = [];\r\n\r\n            this.spinnerService.stop();\r\n            if (this.seletedStatus === \"L\") {\r\n                this.lstDBData = this.lstDBData.filter(x => x.checkvalue == true);\r\n                if (this.lstDBData.length == 0) {\r\n                    this.isVisible = false;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"No data found\" });\r\n                    return;\r\n                }\r\n            }\r\n            else if (this.seletedStatus === \"U\") {\r\n                this.lstDBData = this.lstDBData.filter(x => x.checkvalue == false);\r\n                if (this.lstDBData.length == 0) {\r\n                    this.isVisible = false;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"No data found\" });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this.lstDBData != null && this.lstDBData.length > 0) {\r\n                this.isVisible = true;\r\n            } else {\r\n\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"No data found\" });\r\n            }\r\n\r\n\r\n            this.lstCheckedLocations = new Array<MT_STIS_DEST_LOC_ALLOCATION>();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"BindDataGrid\");\r\n        }\r\n\r\n    }\r\n\r\n    filterdata(event) {\r\n        this.lstgridfilterData = [];\r\n        this.lstgridfilterData = new Array<MT_STIS_DEST_LOC_ALLOCATION>();\r\n        this.lstgridfilterData = event;\r\n    }\r\n    preField: string = \"\";\r\n    //customSort1(event) {\r\n    //    try {\r\n    //        var element = event;\r\n    //        this.lstDBData = [];\r\n    //        this.blnsortbycolumn = !this.blnsortbycolumn;\r\n\r\n    //        this.sortedcheckedrec = [];\r\n    //        this.sorteduncheckedrec = [];\r\n\r\n    //        this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n\r\n    //            if (a[element.field] < b[element.field])\r\n    //                return -1;\r\n    //            if (a[element.field] > b[element.field])\r\n    //                return 1;\r\n    //            return 0;\r\n\r\n\r\n    //        });\r\n    //        this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n\r\n    //            if (a[element.field] < b[element.field])\r\n    //                return -1;\r\n    //            if (a[element.field] > b[element.field])\r\n    //                return 1;\r\n    //            return 0;\r\n\r\n\r\n    //        });\r\n    //        if (this.blnsortbycolumn == false) {\r\n    //            this.lstDBData = [];\r\n    //            this.lstDBData = this.sortedcheckedrec.reverse().concat(this.sorteduncheckedrec.reverse());\r\n    //        }\r\n    //        else {\r\n    //            this.lstDBData = [];\r\n    //            this.lstDBData = this.sortedcheckedrec.concat(this.sorteduncheckedrec);\r\n    //        }\r\n\r\n    //        this.sortedcheckedrec = [];\r\n    //        this.sorteduncheckedrec = [];\r\n    //        this.lstCheckedLocations = new Array<MT_STIS_DEST_LOC_ALLOCATION>();\r\n    //    }\r\n\r\n    //    catch (ex) {\r\n    //        this.clientErrorMsg(ex, \"customSort\");\r\n    //    }\r\n    //}\r\n    customSort(event, field) {\r\n        this.blnSortByColumn = !this.blnSortByColumn;\r\n        var element = event;\r\n        if (this.preField == element.field) {\r\n            if (element.order == 1) {\r\n                element.order = -1;\r\n            } else {\r\n                element.order = 1;\r\n            }\r\n            // element.order = !element.order;\r\n\r\n        } else {\r\n            element.order = 1;\r\n        }\r\n        this.preField = element.field;\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n        let result = null;\r\n        let order: boolean;\r\n        if (element.field == 'BUSINESS_UNIT')\r\n            {\r\n            let filterlist = asEnumerable(this.lstDBData).Distinct(x => x.BUSINESS_UNIT).ToArray();\r\n            if (filterlist != null && filterlist.length == 1) {\r\n                return;\r\n            }\r\n        }\r\n        try {\r\n            this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] == null && b[element.field] != null)\r\n                    result = -1;\r\n                else if (a[element.field] != null && b[element.field] == null)\r\n                    result = 1;\r\n                else if (a[element.field] == null && b[element.field] == null)\r\n                    result = 0;\r\n                else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                    result = a[element.field].localeCompare(b[element.field]);\r\n                else\r\n                    result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                return (element.order * result);\r\n            });\r\n\r\n            this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] == null && b[element.field] != null)\r\n                    result = -1;\r\n                else if (a[element.field] != null && b[element.field] == null)\r\n                    result = 1;\r\n                else if (a[element.field] == null && b[element.field] == null)\r\n                    result = 0;\r\n                else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                    result = a[element.field].localeCompare(b[element.field]);\r\n                else\r\n                    result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                return (element.order * result);\r\n            });\r\n            this.lstDBData = [];\r\n            //if (this.blnSortByColumn == false) {\r\n            //    this.lstDBData = this.sortedcheckedrec.reverse().concat(this.sorteduncheckedrec.reverse());\r\n            //}\r\n            //else {\r\n          //  this.sorteduncheckedrec = asEnumerable(this.sorteduncheckedrec).OrderBy(a => (a.BUSINESS_UNIT)).ToArray();//.ThenByDescending(a => a.LOCATION_ID).ToArray();\r\n                this.lstDBData = this.sortedcheckedrec.concat(this.sorteduncheckedrec);\r\n           // }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"customSort\");\r\n        }\r\n\r\n       \r\n      \r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n    }\r\n    async getDesLocations() {\r\n\r\n        this.isVisible = false;\r\n        this.lstgridfilterData = null;\r\n        this.growlMessage = [];\r\n        try {\r\n            if ((this.orgGroupIDForDBUpdate == null || this.orgGroupIDForDBUpdate == undefined || this.orgGroupIDForDBUpdate == \"\" || this.orgGroupIDForDBUpdate == \"Select One\") && this.blnShowOrgGroupDD) {\r\n\r\n                this.growlMessage = [];\r\n                this.spinnerService.stop();\r\n                if (this.selectedOrgGroupId == \"Select One\" || this.selectedOrgGroupId == undefined || this.selectedOrgGroupId == \"\") {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid Org Group ID\" });\r\n                    return;\r\n                }\r\n            }\r\n            if (this.selectedDropDownUserId === \"Select User\" || this.selectedDropDownUserId === undefined || this.selectedDropDownUserId == \"\") {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please select valid User ID' });\r\n\r\n                this.isVisible = false;\r\n                return false;\r\n            }\r\n            if (this.blnShowOrgGroupLabel == true) {\r\n                this.orgGroupIDForDBUpdate = this.orgGrpID;\r\n            }\r\n            else {\r\n                this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n            }\r\n            let lstBUnitsArray: any[];\r\n            if (this.lstBUnits == undefined || this.lstBUnits.length == 0) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'No Assigned Inventory Business Units' });\r\n                this.spinnerService.stop();\r\n                return;\r\n            }\r\n            if (this.selectedBunit == 'Select BUnit' || this.selectedBunit == '' || this.selectedBunit == undefined) {\r\n                if (this.lstBUnits == undefined) {\r\n                    lstBUnitsArray = null;\r\n                }\r\n                else {\r\n                    lstBUnitsArray = this.lstBUnits;\r\n                }\r\n\r\n            }\r\n            else {\r\n                lstBUnitsArray = [];\r\n                lstBUnitsArray.push(this.selectedBunit);\r\n            }\r\n            if (this.selectedDropDownUserId === \"Select User\" || this.selectedDropDownUserId === \"undefined\" || this.selectedDropDownUserId == \"\") {\r\n                this.selectedUserIDList = this.deviceTokenEntry[TokenEntry_Enum.UserID];\r\n            }\r\n            else {\r\n                this.selectedUserIDList = this.selectedDropDownUserId;\r\n            }\r\n            this.lstDBData = new Array<MT_STIS_DEST_LOC_ALLOCATION>();\r\n            this.spinnerService.start();\r\n            await this.allocateDestinationLocationsService.getDestinationLocations(lstBUnitsArray, this.selectedLocation, this.selectedUserIDList, this.orgGroupIDForDBUpdate, this.selectedDropDownUserId)\r\n                .forEach((response) => {\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n                            this.lstDBData = [];\r\n                            this.lstDBData = response.DataList;\r\n                            this.lstLocations = [];\r\n                            for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n\r\n                                this.lstLocations.push(this.lstDBData[i]);\r\n                                if (this.lstDBData[i].CHK_ALLOCATED == 1) {\r\n                                    this.lstDBData[i].checkvalue = true;\r\n                                }\r\n                                else {\r\n                                    this.lstDBData[i].checkvalue = false;\r\n                                }\r\n                            }\r\n\r\n\r\n\r\n                            this.BindDataGrid();\r\n\r\n\r\n                            this.dataCheckedSorting = [];\r\n                            this.dataUncheckedSorting = [];\r\n                            for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n                                if (this.lstDBData[i].CHK_ALLOCATED == 1) {\r\n                                    this.dataCheckedSorting.push(this.lstDBData[i]);\r\n                                }\r\n                                else {\r\n                                    this.dataUncheckedSorting.push(this.lstDBData[i]);\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.isVisible = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.isVisible = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.isVisible = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getDesLocations\");\r\n        }\r\n    }\r\n\r\n    allocateDestinationLocatons() {\r\n        if (this.selectedDropDownUserId === \"Select User\" || this.selectedDropDownUserId === \"undefined\" || this.selectedDropDownUserId == \"\") {\r\n            this.growlMessage = [];\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please select valid User ID' });\r\n            return false;\r\n        }\r\n        try {\r\n            this.spinnerService.start();\r\n\r\n            this.allocateDestinationLocationsService.allocatedDestLocations(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.selectedDropDownUserId, this.lstDBData, true, this.selectedBunit)\r\n                .subscribe((response) => {\r\n                    this.growlMessage = [];\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Updated Successfully' });\r\n                            this.selectedDropDownUserId = \"\";\r\n                            this.selectedLocation = \"\";\r\n                            this.selectedBunit = \"\";\r\n                            this.lstCheckedLocations = new Array<MT_STIS_DEST_LOC_ALLOCATION>();\r\n                            this.isVisible = false;\r\n                            this.spinnerService.stop();\r\n                            this.lstDBData = [];\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            this.isVisible = false;\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            this.isVisible = false;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"allocateDestinationLocatons\");\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    async fillLocationsAuto(event) {\r\n        this.lstFilteredLocation = [];\r\n        let query = event.query;\r\n        this.lstFilteredLocation = this.filteredLoations(query, this.lstLocations)\r\n    }\r\n\r\n    filteredLoations(query, deslocatiions: MT_STIS_DEST_LOC_ALLOCATION[]): any[] {\r\n\r\n        try {\r\n            let filtered : any[] = [];\r\n            deslocatiions = asEnumerable(deslocatiions).Distinct(x => x.LOCATION_ID).ToArray()\r\n            if (query == \"%\") {\r\n                for (let i = 0; i < deslocatiions.length; i++) {\r\n                    let desLocValue = deslocatiions[i].LOCATION_ID;\r\n                    filtered.push(desLocValue);\r\n                }\r\n\r\n            } else {\r\n                if (query.length >= 1) {\r\n                    for (let i = 0; i < deslocatiions.length; i++) {\r\n                        let desLocValue = deslocatiions[i].LOCATION_ID;\r\n                        if (desLocValue.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n                            filtered.push(desLocValue);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return filtered;\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"allocateDestinationLocatons\");\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.deviceTokenEntry = null;\r\n        this.lstOrgGroups = null;\r\n        this.lstUsers = null;\r\n        this.lstOrgGroups = null;\r\n        this.lstBUnits = null;\r\n        this.lstFilteredLocation = null;\r\n        this.lstCheckedLocations = null;\r\n        this.lstDBData = null;\r\n        this.orgGroupData = null;\r\n        this.growlMessage = null;\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n        this.appID = -1;\r\n        this.ddllBunit = null\r\n        this.selectedLocation = null;\r\n    }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stis-allocate-destination-locations.component.ts","import { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { PAR_MNGT_VENDOR } from \"../../app/Entities/PAR_MNGT_VENDOR\";\r\nimport { StatusType, EnumApps, YesNo_Enum, TokenEntry_Enum } from './../Shared/AtParEnums';\r\nimport { MT_ATPAR_ORG_GROUPS } from '../entities/mt_atpar_org_groups';\r\nimport { MT_ATPAR_USER } from '../entities/mt_atpar_user';\r\nimport { MT_STIS_DISTRIB_TYPE } from '../Entities/mt_stis_distrib_type'\r\nimport { AllocateDistributionTypesService } from './stis-allocate-distribution-types.service'\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { Message, SelectItem } from './../components/common/api';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { List, Enumerable } from 'linqts';\r\nimport { asEnumerable } from 'linq-es5';\r\nimport { MT_ATPAR_SECURITY_AUDIT } from '../Entities/MT_ATPAR_SECURITY_AUDIT'\r\nimport { DataTable } from '../components/datatable/datatable';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n    template: require('./stis-allocate-distribution-types.component.html'),\r\n    providers: [AtParCommonService, HttpService, AllocateDistributionTypesService, AtParConstants]\r\n})\r\n\r\nexport class AllocateDistributionTypesComponent {\r\n    @ViewChild(DataTable) dataTableComponent: DataTable;\r\n    blnsortbycolumn: boolean = true;\r\n    loading: boolean = true;\r\n    deviceIDStatus: number;\r\n    descStatus: number;\r\n    macAddressStatus: number;\r\n    dataGrid: boolean = false;\r\n    _deviceTokenEntry: string[] = [];\r\n    growlMessage: Message[] = [];\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n    lstUserData: MT_ATPAR_USER[];\r\n    lblOrgGrpID: string;\r\n    orgGrpID: string;\r\n    blnShowOrgGroupLabel: boolean;\r\n    blnStatusMsg: boolean\r\n    blnShowOrgGroupID: boolean;\r\n    lstOrgGroups: SelectItem[] = [];\r\n    ddlUserId: SelectItem[] = [];\r\n    ddlDisplay: any[] = [];\r\n    lstDistribData: MT_STIS_DISTRIB_TYPE[] = [];\r\n    lstDistribTypes: MT_STIS_DISTRIB_TYPE[];\r\n    // lstCheckedDistribTypes: MT_STIS_DISTRIB_TYPE[];\r\n    sortedcheckedrec: MT_STIS_DISTRIB_TYPE[];\r\n    sorteduncheckedrec: MT_STIS_DISTRIB_TYPE[];\r\n\r\n    lstgridfilterData: MT_STIS_DISTRIB_TYPE[] = null;\r\n    dataCheckedSorting: MT_STIS_DISTRIB_TYPE[] = [];\r\n    dataUncheckedSorting: Array<MT_STIS_DISTRIB_TYPE>;\r\n\r\n    selectedDisplay: string;\r\n    sortField: string = \"\";\r\n    appID: string;\r\n    pageSize: number;\r\n    startIndex: number = 0;\r\n    endIndex: number;\r\n    chkValue: number;\r\n    menuCode: string;\r\n    auditSatus: string = \"\";\r\n    distribType: string = \"\";\r\n    selectedOrgGroupID: string = \"\";\r\n    strOrgGrpID: string;\r\n    searched: boolean;\r\n    selectedUserID: string;\r\n    preField: string = \"\";\r\n    selectedDistTypes: MT_STIS_DISTRIB_TYPE[];\r\n    lstAuditData: MT_ATPAR_SECURITY_AUDIT[] = [];\r\n\r\n    public constructor(\r\n        private spinnerService: SpinnerService,\r\n        private commonService: AtParCommonService,\r\n        private httpService: HttpService,\r\n        private distribTypesService: AllocateDistributionTypesService,\r\n        private atParConstant: AtParConstants) {\r\n    }\r\n\r\n    async ngOnInit() {\r\n        try {\r\n            this._deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n\r\n            this.startIndex = +sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.endIndex = +sessionStorage.getItem(\"RecordsEndindex\");\r\n            //   this.lstCheckedDistribTypes = new Array<MT_STIS_DISTRIB_TYPE>();\r\n            this.dataCheckedSorting = new Array<MT_STIS_DISTRIB_TYPE>();\r\n            this.dataUncheckedSorting = new Array<MT_STIS_DISTRIB_TYPE>();\r\n            this.appID = (EnumApps.StockIssue).toString();\r\n            this.menuCode = 'mt_stis_allocate_dist_types_setup.aspx';\r\n            this.ddlDisplay.push({ label: 'All', value: 'A' });\r\n            this.ddlDisplay.push({ label: 'Allocated', value: 'AL' });\r\n            this.ddlDisplay.push({ label: 'UnAllocated', value: 'N' });\r\n            this.selectedDisplay = this.ddlDisplay[0].value;\r\n            this.spinnerService.start();\r\n            this.checkAuditAllowed();\r\n            await this.bindOrgGroups();\r\n            if (this.blnShowOrgGroupID) {\r\n                this.ddlUserId = [];\r\n                this.ddlUserId.push({ label: \"Select User\", value: \"Select User\" });\r\n            }\r\n            this.pageSize = + this._deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n            this.spinnerService.stop();\r\n        } catch (exMsg) {\r\n            this.clientErrorMsg(exMsg, 'ngOnInit');\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    async bindOrgGroups() {\r\n        try {\r\n            this.spinnerService.start();\r\n            this.growlMessage = [];\r\n            if (this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID] == \"All\") {\r\n                await this.commonService.getOrgGroupIDS().\r\n                    catch(this.httpService.handleError).then((res: Response) => {\r\n                        let webresp = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                        this.spinnerService.stop();\r\n                        switch (webresp.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.orgGroupData = webresp.DataList;\r\n\r\n                                // this.blnStatusMsg = false;\r\n                                if (this.orgGroupData.length > 0) {\r\n                                    this.blnShowOrgGroupID = true;\r\n                                    this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" })\r\n                                    for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                        if (this.orgGroupData[i].ORG_GROUP_ID != \"All\") {\r\n                                            this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + \" - \" + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                        }\r\n                                    }\r\n                                }\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n            else {\r\n                this.spinnerService.start();\r\n                await this.commonService.getUserOrgGroups(this._deviceTokenEntry[TokenEntry_Enum.UserID], this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                    catch(this.httpService.handleError).then((res: Response) => {\r\n                        let orgGroups = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                        this.spinnerService.stop()\r\n                        switch (orgGroups.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.orgGroupData = orgGroups.DataList;\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.lblOrgGrpID = this.orgGroupData[0].ORG_GROUP_ID + \" - \" + this.orgGroupData[0].ORG_GROUP_NAME;\r\n\r\n                                if (this.blnShowOrgGroupLabel) {\r\n                                    this.populateUsersDropDown();\r\n                                }\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: orgGroups.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: orgGroups.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: orgGroups.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindOrgGroups\");\r\n        }\r\n    }\r\n\r\n    private async checkAuditAllowed() {\r\n        this.growlMessage = [];\r\n        try {\r\n            let webresp = new AtParWebApiResponse<string>();\r\n            await this.commonService.getAuditAllowed(this.appID, this.menuCode)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    webresp = res.json() as AtParWebApiResponse<string>\r\n                    this.spinnerService.stop();\r\n                    switch (webresp.StatType) {\r\n\r\n                        case StatusType.Success: {\r\n                            this.auditSatus = webresp.Data;\r\n                            break\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkAuditAllowed\");\r\n        }\r\n    }\r\n\r\n    async populateUsersDropDown() {\r\n        try {\r\n            this.ddlUserId = [];\r\n            this.selectedUserID = \"\";\r\n            if (this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID] != \"All\") {\r\n                this.orgGrpID = this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID];\r\n            }\r\n            if (this.blnShowOrgGroupID) {\r\n                this.orgGrpID = this.selectedOrgGroupID;\r\n            }\r\n\r\n            this.spinnerService.start();\r\n            await this.commonService.getUsersList(this._deviceTokenEntry[TokenEntry_Enum.UserID], EnumApps.StockIssue, this.orgGrpID)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    let webresp = res.json() as AtParWebApiResponse<MT_ATPAR_USER>\r\n                    this.spinnerService.stop();\r\n                    this.ddlUserId.push({ label: \"Select User\", value: \"Select User\" });\r\n                    switch (webresp.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstUserData = webresp.DataList;\r\n                            for (var i = 0; i < this.lstUserData.length; i++) {\r\n                                this.ddlUserId.push({ label: this.lstUserData[i].FULLNAME, value: this.lstUserData[i].USER_ID })\r\n                            }\r\n                            break\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage })\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"populateUsersDropDown\");\r\n        }\r\n    }\r\n\r\n    public async go() {\r\n        try {\r\n\r\n            this.lstgridfilterData = null;\r\n            this.dataGrid = false;\r\n            this.sortField = \"CHK_VALUE\";\r\n            this.growlMessage = [];\r\n            if (this.blnShowOrgGroupID) {\r\n                if (this.selectedOrgGroupID == 'Select One' || this.selectedOrgGroupID == undefined || this.selectedOrgGroupID == \"\") {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Org Group ID \" });\r\n                    return;\r\n                }\r\n            }\r\n            if (this.selectedUserID == 'Select User' || this.selectedUserID == undefined || this.selectedUserID == \"\") {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid UserId \" });\r\n                return;\r\n            }\r\n            else {\r\n                this.spinnerService.start();\r\n                if (this.distribType != null || this.distribType != \"\") {\r\n                    this.searched = true;\r\n                }\r\n                if (this.blnShowOrgGroupLabel) {\r\n                    this.strOrgGrpID = this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID].toString();\r\n                }\r\n                if (this.blnShowOrgGroupID) {\r\n                    this.strOrgGrpID = this.selectedOrgGroupID;\r\n                }\r\n\r\n                await this.distribTypesService.getDistributionTypes(this.distribType, this.selectedUserID, this.strOrgGrpID)\r\n                    .catch(this.httpService.handleError).then((res: Response) => {\r\n                        let distribType = res.json() as AtParWebApiResponse<MT_STIS_DISTRIB_TYPE>;\r\n                        this.lstDistribTypes = new Array<MT_STIS_DISTRIB_TYPE>();\r\n\r\n                        switch (distribType.StatType) {\r\n                            case StatusType.Success: {\r\n                                this.dataGrid = true;\r\n                                this.lstDistribData = distribType.DataList;\r\n                                this.dataCheckedSorting = asEnumerable(this.lstDistribData).Where(a => a.CHK_VALUE == 1).Select(a => a).ToArray();\r\n                                this.dataUncheckedSorting = asEnumerable(this.lstDistribData).Where(a => a.CHK_VALUE != 1).Select(a => a).ToArray();\r\n\r\n                                if (this.lstDistribData.length > 0) {\r\n                                    if (this.selectedDisplay == \"AL\") {\r\n\r\n                                        //  this.lstDistribTypes = asEnumerable(this.lstDistribData).Where(a => a.CHK_VALUE == 1).Select(a => a).ToArray();\r\n                                        this.lstDistribTypes = this.dataCheckedSorting.sort((a, b) => {\r\n                                            if (a.DISTRIB_TYPE < b.DISTRIB_TYPE) return -1;\r\n                                            if (a.DISTRIB_TYPE > b.DISTRIB_TYPE) return 1;\r\n                                            return 0;\r\n                                        })\r\n\r\n                                    }\r\n                                    else if (this.selectedDisplay == \"N\") {\r\n\r\n                                        // this.lstDistribTypes = asEnumerable(this.lstDistribData).Where(a => a.CHK_VALUE != 1).Select(a => a).ToArray();\r\n                                        this.lstDistribTypes = this.dataUncheckedSorting.sort((a, b) => {\r\n                                            if (a.DISTRIB_TYPE < b.DISTRIB_TYPE) return -1;\r\n                                            if (a.DISTRIB_TYPE > b.DISTRIB_TYPE) return 1;\r\n                                            return 0;\r\n                                        })\r\n                                    }\r\n                                    else {\r\n\r\n                                        this.lstDistribTypes = this.dataCheckedSorting.sort((a, b) => {\r\n                                            if (a.DISTRIB_TYPE < b.DISTRIB_TYPE) return -1;\r\n                                            if (a.DISTRIB_TYPE > b.DISTRIB_TYPE) return 1;\r\n                                            return 0;\r\n                                        }).concat(this.dataUncheckedSorting.sort((a, b) => {\r\n                                            if (a.DISTRIB_TYPE < b.DISTRIB_TYPE) return -1;\r\n                                            if (a.DISTRIB_TYPE > b.DISTRIB_TYPE) return 1;\r\n                                            return 0;\r\n                                        }));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    this.dataGrid = false;\r\n                                }\r\n                                this.dataCheckedSorting = asEnumerable(this.lstDistribData).Where(a => a.CHK_VALUE == 1).Select(a => a).ToArray();\r\n                                this.dataUncheckedSorting = asEnumerable(this.lstDistribData).Where(a => a.CHK_VALUE != 1).Select(a => a).ToArray();\r\n\r\n                                break;\r\n                            }\r\n\r\n                            case StatusType.Warn: {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: distribType.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: distribType.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: distribType.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n                this.spinnerService.stop();\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"go\");\r\n        }\r\n\r\n    }\r\n\r\n    filterdata(event) {\r\n        this.lstgridfilterData = new Array<MT_STIS_DISTRIB_TYPE>();\r\n        this.lstgridfilterData = event;\r\n    }\r\n\r\n    public onSort1(event) {\r\n        try {\r\n            var element = event;\r\n            this.blnsortbycolumn = !this.blnsortbycolumn;\r\n            this.blnsortbycolumn = !this.blnsortbycolumn;\r\n            let checkedData = asEnumerable(this.lstDistribTypes).Where(a => a.CHK_VALUE == 1).ToArray();\r\n            let unCheckedData = asEnumerable(this.lstDistribTypes).Where(a => a.CHK_VALUE == 0).ToArray();\r\n            if (event.data != null && event.data.length > 0) {\r\n\r\n\r\n                checkedData = checkedData.sort(function (a, b) {\r\n\r\n                    if (a[element.field] < b[element.field])\r\n                        return -1;\r\n                    if (a[element.field] > b[element.field])\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                unCheckedData = unCheckedData.sort(function (a, b) {\r\n\r\n                    if (a[element.field] < b[element.field])\r\n                        return -1;\r\n                    if (a[element.field] > b[element.field])\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                if (event.order == -1) {\r\n\r\n\r\n                    this.lstDistribTypes = checkedData.reverse().concat(unCheckedData.reverse());// sortedUnCheckedData.reverse();\r\n                } else {\r\n\r\n                    this.lstDistribTypes = checkedData.concat(unCheckedData);\r\n                }\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onSort\");\r\n        }\r\n\r\n    }\r\n\r\n    onSort(event, field) {\r\n        try {\r\n            var element = event;\r\n            if (this.preField == element.field) {\r\n                if (element.order == 1) {\r\n                    element.order = -1;\r\n\r\n                } else {\r\n                    element.order = 1;\r\n\r\n                }\r\n            } else {\r\n                element.order = 1;\r\n\r\n            }\r\n            this.preField = element.field;\r\n            this.sortedcheckedrec = [];\r\n            this.sorteduncheckedrec = [];\r\n            let result = null;\r\n            let order: boolean;\r\n\r\n            if (this.selectedDisplay == \"AL\") {\r\n                this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n                    if (a[element.field] == null && b[element.field] != null)\r\n                        result = -1;\r\n                    else if (a[element.field] != null && b[element.field] == null)\r\n                        result = 1;\r\n                    else if (a[element.field] == null && b[element.field] == null)\r\n                        result = 0;\r\n                    else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                        result = a[element.field].localeCompare(b[element.field]);\r\n                    else\r\n                        result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                    return (element.order * result);\r\n                });\r\n                this.lstDistribTypes = this.sortedcheckedrec;\r\n\r\n            }\r\n\r\n            else if (this.selectedDisplay == \"N\") {\r\n                this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n                    if (a[element.field] == null && b[element.field] != null)\r\n                        result = -1;\r\n                    else if (a[element.field] != null && b[element.field] == null)\r\n                        result = 1;\r\n                    else if (a[element.field] == null && b[element.field] == null)\r\n                        result = 0;\r\n                    else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                        result = a[element.field].localeCompare(b[element.field]);\r\n                    else\r\n                        result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                    return (element.order * result);\r\n                });\r\n                this.lstDistribTypes = this.sorteduncheckedrec;\r\n            }\r\n            else {\r\n\r\n\r\n                this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n                    if (a[element.field] == null && b[element.field] != null)\r\n                        result = -1;\r\n                    else if (a[element.field] != null && b[element.field] == null)\r\n                        result = 1;\r\n                    else if (a[element.field] == null && b[element.field] == null)\r\n                        result = 0;\r\n                    else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                        result = a[element.field].localeCompare(b[element.field]);\r\n                    else\r\n                        result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                    return (element.order * result);\r\n                });\r\n\r\n                this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n                    if (a[element.field] == null && b[element.field] != null)\r\n                        result = -1;\r\n                    else if (a[element.field] != null && b[element.field] == null)\r\n                        result = 1;\r\n                    else if (a[element.field] == null && b[element.field] == null)\r\n                        result = 0;\r\n                    else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                        result = a[element.field].localeCompare(b[element.field]);\r\n                    else\r\n                        result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                    return (element.order * result);\r\n                });\r\n                this.lstDistribTypes = this.sortedcheckedrec.concat(this.sorteduncheckedrec);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"customSort\");\r\n        }\r\n\r\n       // this.lstDistribTypes = [];\r\n\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n    }\r\n\r\n    checkAll() {\r\n        try {\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.endIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n            if (this.lstgridfilterData != null || this.lstgridfilterData != undefined) {\r\n\r\n                if (this.endIndex > this.lstgridfilterData.length) {\r\n                    this.endIndex = this.lstgridfilterData.length;\r\n                }\r\n\r\n                for (let i = this.startIndex; i <= this.endIndex - 1; i++) {\r\n                    this.lstgridfilterData[i].CHK_VALUE = 1;\r\n                }\r\n\r\n            }\r\n            else {\r\n                if (this.endIndex > this.lstDistribTypes.length) {\r\n                    this.endIndex = this.lstDistribTypes.length;\r\n                }\r\n                for (let i = this.startIndex; i <= this.endIndex - 1; i++) {\r\n                    this.lstDistribTypes[i].CHK_VALUE = 1;\r\n                }\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkAll\");\r\n        }\r\n    }\r\n\r\n    unCheckAll() {\r\n\r\n        try {\r\n            this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n            this.endIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n            if (this.lstgridfilterData != null || this.lstgridfilterData != undefined) {\r\n\r\n                if (this.endIndex > this.lstgridfilterData.length) {\r\n                    this.endIndex = this.lstgridfilterData.length;\r\n                }\r\n\r\n                for (let i = this.endIndex - 1; i >= this.startIndex; i--) {\r\n                    this.lstgridfilterData[i].CHK_VALUE = 0;\r\n                }\r\n            } else {\r\n                if (this.endIndex > this.lstDistribTypes.length) {\r\n                    this.endIndex = this.lstDistribTypes.length;\r\n                }\r\n                for (let i = this.endIndex - 1; i >= this.startIndex; i--) {\r\n                    this.lstDistribTypes[i].CHK_VALUE = 0;\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"unCheckAll\");\r\n        }\r\n    }\r\n\r\n    changeStatus(allocate) {\r\n        try {\r\n            let lstAllocateDistTypes = new Array<MT_STIS_DISTRIB_TYPE>();\r\n\r\n            for (let x = 0; x < allocate.length; x++) {\r\n\r\n                this.lstDistribTypes.push(allocate);\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"changeStatus\");\r\n        }\r\n    }\r\n\r\n    allocateDistributionTypes() {\r\n        try {\r\n            this.growlMessage = [];\r\n            if (this.distribType != \"\") {\r\n                this.searched = true;\r\n            }\r\n            else {\r\n                this.searched = false;\r\n            }\r\n            if (this.selectedUserID == \"Select User\") {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid UserId\" });\r\n                return;\r\n            }\r\n            this.spinnerService.start();\r\n            let selectedDistbTypes = asEnumerable(this.lstDistribData).Where(a => a.CHK_VALUE == 1).Select(a => a).ToArray();\r\n            this.distribTypesService.allocateDistributionTypes(this._deviceTokenEntry[TokenEntry_Enum.UserID], this.selectedUserID, selectedDistbTypes, this.searched)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    let webresp = res.json() as AtParWebApiResponse<MT_STIS_DISTRIB_TYPE>\r\n                    switch (webresp.StatType) {\r\n                        case StatusType.Success: {\r\n                            webresp.StatusMessage = \"Updated Successfully\"\r\n                            this.distribType = \"\"\r\n                            this.dataGrid = false;\r\n                            this.selectedDisplay = this.ddlDisplay[0].value;\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: webresp.StatusMessage });\r\n                            if (this.auditSatus == YesNo_Enum[YesNo_Enum.Y].toString()) {\r\n                                for (var i = 0; i <= selectedDistbTypes.length - 1; i++) {\r\n                                    let auditData = new MT_ATPAR_SECURITY_AUDIT();\r\n                                    auditData.FIELD_NAME = \"CHK_VALUE\";\r\n                                    auditData.OLD_VALUE = \"0\";\r\n                                    auditData.NEW_VALUE = \"1\";\r\n                                    auditData.KEY_1 = this.selectedUserID;\r\n                                    auditData.KEY_2 = this.appID;\r\n                                    auditData.KEY_3 = selectedDistbTypes[i].DISTRIB_TYPE;\r\n                                    auditData.KEY_4 = '';\r\n                                    auditData.KEY_5 = '';\r\n                                    this.lstAuditData.push(auditData);\r\n                                }\r\n                                this.spinnerService.start();\r\n                                this.commonService.insertAuditData(this.lstAuditData, this._deviceTokenEntry[TokenEntry_Enum.UserID], this.menuCode).\r\n                                    catch(this.httpService.handleError).then((res: Response) => {\r\n                                        let response = res.json() as AtParWebApiResponse<MT_ATPAR_SECURITY_AUDIT>;\r\n                                        this.spinnerService.stop();\r\n                                        switch (response.StatType) {\r\n                                            case StatusType.Success: {\r\n                                                break;\r\n                                            }\r\n                                            case StatusType.Warn: {\r\n                                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                                                break;\r\n                                            }\r\n                                            case StatusType.Error: {\r\n                                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                                                break;\r\n                                            }\r\n                                            case StatusType.Custom: {\r\n                                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                    });\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            if (this.blnShowOrgGroupID) {\r\n                                this.selectedUserID = \"Select User\";\r\n                            }\r\n                            if (this.blnShowOrgGroupLabel) {\r\n                                this.populateUsersDropDown();\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: webresp.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"allocateDistributionTypes\");\r\n        }\r\n    }\r\n\r\n    ddlOrgGrpIdChanged() {\r\n        try {\r\n            this.growlMessage = [];\r\n            this.dataGrid = false;\r\n            if (this.selectedOrgGroupID == 'Select One') {\r\n                this.dataGrid = false;\r\n                this.ddlUserId = [];\r\n                this.ddlUserId.push({ label: 'Select User', value: 'Select User' });\r\n            }\r\n            else {\r\n                this.populateUsersDropDown();\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ddlOrgGrpIdChanged\");\r\n        }\r\n    }\r\n\r\n    ddlUserChange() {\r\n        this.dataGrid = false;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._deviceTokenEntry = [];\r\n        this.growlMessage = [];\r\n        this.orgGroupData = [];\r\n        this.lstUserData = [];\r\n        this.lblOrgGrpID = \"\";\r\n        this.orgGrpID = \"\";\r\n        this.lstOrgGroups = [];\r\n        this.ddlUserId = [];\r\n        this.ddlDisplay = [];\r\n        this.lstDistribData = [];\r\n        this.lstDistribTypes = [];\r\n        //  this.lstCheckedDistribTypes = [];\r\n        this.dataCheckedSorting = null;\r\n        this.dataUncheckedSorting = null;\r\n        this.selectedDistTypes = [];\r\n        this.lstAuditData = [];\r\n        this.spinnerService.stop();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stis-allocate-distribution-types.component.ts","import { Component, CUSTOM_ELEMENTS_SCHEMA, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { MT_ATPAR_ORG_GROUPS } from '../../app/Entities/MT_ATPAR_ORG_GROUPS';\r\nimport { VM_ATPAR_IBU_ALLOCATION } from '../../app/Entities/VM_ATPAR_IBU_ALLOCATION';\r\nimport { MT_ATPAR_IBU_ALLOCATION } from '../../app/Entities/MT_ATPAR_IBU_ALLOCATION';\r\nimport { MT_ATPAR_ORG_GROUP_BUNITS } from '../../app/Entities/MT_ATPAR_ORG_GROUP_BUNITS';\r\nimport { MT_ATPAR_SECURITY_AUDIT } from '../../app/Entities/MT_ATPAR_SECURITY_AUDIT';\r\nimport { MT_ATPAR_USER } from '../../app/Entities/mt_atpar_user';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { SelectItem } from '../components/common/api';\r\nimport { ConfirmationService } from '../components/common/api';\r\nimport { TokenEntry_Enum, EnumApps, ClientType } from '../Shared/AtParEnums';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { BusinessType } from '../Shared/AtParEnums';\r\nimport { StatusType } from '../Shared/AtParEnums';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { Message } from '../components/common/api';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({  \r\n    template: require('./stis-allocate-inventory-business-units.component.html'),\r\n    providers: [HttpService, ConfirmationService, AtParCommonService, AtParConstants]\r\n})\r\n\r\nexport class SIAllocateInventoryBusinessUnitsComponent implements OnInit {\r\n\r\n    lstBUnits: any = [];\r\n    lstDBData: VM_ATPAR_IBU_ALLOCATION[];\r\n    lstgridfilterData: VM_ATPAR_IBU_ALLOCATION[];\r\n    deviceTokenEntry: string[] = [];\r\n    lstUsers: SelectItem[];\r\n    lstOrgGroups: SelectItem[];\r\n    lstCheckedBUnits: Array<VM_ATPAR_IBU_ALLOCATION>;\r\n    userDataList: MT_ATPAR_USER[];\r\n\r\n    dataCheckedSorting: VM_ATPAR_IBU_ALLOCATION[] = [];\r\n    dataUncheckedSorting: Array<VM_ATPAR_IBU_ALLOCATION>;\r\n    sortedcheckedrec: VM_ATPAR_IBU_ALLOCATION[];\r\n    sorteduncheckedrec: VM_ATPAR_IBU_ALLOCATION[];\r\n    orgGroupData: MT_ATPAR_ORG_GROUPS[];\r\n\r\n    orgGrpID: string = \"\";\r\n    orgGrpIDData: string = \"\";\r\n    userID: string = \"\";\r\n\r\n    startIndex: number;\r\n    EndIndex: number;\r\n\r\n    ////for orgGrpDropdown\r\n    blnShowOrgGroupLabel: boolean = false;\r\n    blnShowOrgGroupDD: boolean = false;\r\n\r\n    ////for userID DropDown\r\n    blnShowUserIDLabel: boolean = false;\r\n    blnShowUserIDDD: boolean = false;\r\n\r\n    selectedOrgGroupId: string = \"\";\r\n    selectedDropDownUserId: string = \"\";\r\n    selectedBunit: string = \"\";\r\n    selectedDescription: string = \"\";\r\n\r\n    isVisible: boolean = false;\r\n    growlMessage: Message[] = [];\r\n\r\n    ///bunits \r\n    lstFilteredBUnits: any = [];\r\n    orgGroupIDForDBUpdate: string;\r\n    showGrid: boolean = false;\r\n\r\n    blnsortbycolumn: boolean = true;\r\n    preField: string = \"\";\r\n    custom: string = \"custom\";\r\n    pazeSize: number;\r\n    isAuditRequired: string = \"\";\r\n    strAudit: string = \"\";\r\n\r\n    constructor(private httpService: HttpService, private _http: Http,\r\n        private spinnerService: SpinnerService,\r\n        public atParCommonService: AtParCommonService,\r\n        private atParConstant: AtParConstants,\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n        this.lstCheckedBUnits = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n        this.dataCheckedSorting = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n        this.dataUncheckedSorting = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n        this.lstFilteredBUnits = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n        this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n\r\n\r\n        // checking is Audit enabled for this page\r\n        this.checkAuditAllowed();\r\n        this.bindOrgGroups();\r\n\r\n        this.pazeSize = +this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n    }\r\n\r\n    async bindOrgGroups() {\r\n\r\n        this.spinnerService.start();\r\n        try {\r\n            await this.atParCommonService.getUserOrgGroups(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUPS>;\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.orgGroupData = data.DataList;\r\n                            this.spinnerService.stop();\r\n                            if (this.orgGroupData.length == 1) {\r\n\r\n                                this.blnShowOrgGroupLabel = true;\r\n                                this.orgGrpIDData = this.orgGroupData[0].ORG_GROUP_ID + \" - \" + this.orgGroupData[0].ORG_GROUP_NAME;\r\n                                this.orgGrpID = this.orgGroupData[0].ORG_GROUP_ID;\r\n\r\n                                this.populateBusinessUnits();\r\n                                this.bindUsersList();\r\n                                break;\r\n\r\n                            }\r\n                            else if (this.orgGroupData.length > 1) {\r\n                                this.blnShowOrgGroupDD = true;\r\n                                this.lstUsers = [];\r\n                                this.lstUsers.push({ label: \"Select User\", value: \"Select User\" })\r\n                                this.lstOrgGroups = [];\r\n                                this.lstOrgGroups.push({ label: \"Select One\", value: \"Select One\" })\r\n                                for (var i = 0; i < this.orgGroupData.length; i++) {\r\n                                    if (this.orgGroupData[i].ORG_GROUP_ID !== \"All\") {\r\n                                        this.lstOrgGroups.push({ label: this.orgGroupData[i].ORG_GROUP_ID + \" - \" + this.orgGroupData[i].ORG_GROUP_NAME, value: this.orgGroupData[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindOrgGroups\");\r\n        }\r\n    }\r\n\r\n    async ddlOrgGrpIdChanged() {\r\n\r\n        this.isVisible = false;\r\n        this.growlMessage = [];\r\n\r\n        if (this.selectedOrgGroupId == \"Select One\") {\r\n            this.lstUsers = [];\r\n            this.lstUsers.push({ label: \"Select User\", value: \"Select User\" });\r\n            return;\r\n        }\r\n\r\n        this.selectedDropDownUserId = \"\";\r\n\r\n        this.lstDBData = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n        this.spinnerService.start();\r\n\r\n        try {\r\n\r\n            await this.bindUsersList();\r\n\r\n            await this.populateBusinessUnits();\r\n\r\n            this.spinnerService.stop();\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"ddlOrgGrpIdChanged\");\r\n        }\r\n\r\n    }\r\n\r\n    ddlUserChange() {\r\n        this.isVisible = false;\r\n    }\r\n\r\n    async bindUsersList() {\r\n        try {\r\n            if (this.blnShowOrgGroupLabel == true) {\r\n                this.orgGroupIDForDBUpdate = this.orgGrpID;\r\n            }\r\n            else {\r\n                this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n            }\r\n\r\n            this.lstUsers = [];\r\n            this.lstUsers.push({ label: \"Select User\", value: \"Select User\" });\r\n            this.spinnerService.start();\r\n\r\n            await this.atParCommonService.getUsersList(this.deviceTokenEntry[TokenEntry_Enum.UserID],EnumApps.StockIssue, this.orgGroupIDForDBUpdate)\r\n                .catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_USER>;             \r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.userDataList = data.DataList;\r\n                            for (let i = 0; i < data.DataList.length; i++) {\r\n                                this.lstUsers.push({\r\n                                    label: data.DataList[i].FULLNAME,\r\n                                    value: data.DataList[i].USER_ID\r\n                                })\r\n                            }\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage = [];\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage = [];\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage = [];\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n        }\r\n\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindUsersList\");\r\n        }\r\n\r\n    }\r\n\r\n    selectedRow(values: any, event) {\r\n\r\n        if (event == true) {\r\n            values.CHK_VALUE = 1;\r\n        }\r\n        else {\r\n            values.CHK_VALUE = 0;\r\n            values.COUNT_FLAG = 0;\r\n            values.ALLOW_SIC_CONSIGN = \"N\";\r\n            values.blnCountFlag = 0;\r\n            values.blnAllowSicConsign = 0;\r\n        }\r\n\r\n        for (var i = 0; i < this.lstCheckedBUnits.length; i++) {\r\n            if (this.lstCheckedBUnits[i].BUSINESS_UNIT === values.BUSINESS_UNIT) {\r\n                var index = this.lstCheckedBUnits.indexOf(this.lstCheckedBUnits[i], 0)\r\n                this.lstCheckedBUnits.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        this.lstCheckedBUnits.push(values);\r\n    }\r\n\r\n    checkedCountFlag(values: any, event) {\r\n\r\n        if (event == true) {\r\n            values.CHK_VALUE = 1;\r\n            values.COUNT_FLAG = \"1\";\r\n            values.checkvalue = 1;\r\n\r\n        }\r\n        else {\r\n            values.COUNT_FLAG = \"0\";\r\n            values.ALLOW_SIC_CONSIGN = \"N\";\r\n            values.blnAllowSicConsign = 0;\r\n            values.blnCountFlag = 0;\r\n        }\r\n\r\n        for (var i = 0; i < this.lstCheckedBUnits.length; i++) {\r\n            if (this.lstCheckedBUnits[i].BUSINESS_UNIT === values.BUSINESS_UNIT) {\r\n                var index = this.lstCheckedBUnits.indexOf(this.lstCheckedBUnits[i], 0)\r\n                this.lstCheckedBUnits.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        this.lstCheckedBUnits.push(values);\r\n    }\r\n\r\n    checkedConsignFlag(values: any, event) {\r\n\r\n        if (event == true) {\r\n            values.CHK_VALUE = 1;\r\n            values.COUNT_FLAG = 1;\r\n            values.ALLOW_SIC_CONSIGN = \"Y\";\r\n            values.checkvalue = 1;\r\n            values.blnCountFlag = 1;\r\n\r\n        }\r\n        else {\r\n            values.ALLOW_SIC_CONSIGN = \"N\";\r\n        }\r\n\r\n        for (var i = 0; i < this.lstCheckedBUnits.length; i++) {\r\n            if (this.lstCheckedBUnits[i].BUSINESS_UNIT === values.BUSINESS_UNIT) {\r\n                var index = this.lstCheckedBUnits.indexOf(this.lstCheckedBUnits[i], 0)\r\n                this.lstCheckedBUnits.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        this.lstCheckedBUnits.push(values);\r\n    }\r\n\r\n    async populateBusinessUnits(): Promise<boolean> {\r\n\r\n        if (this.blnShowOrgGroupLabel == true) {\r\n            this.orgGroupIDForDBUpdate = this.orgGrpID;\r\n        }\r\n        else {\r\n            this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n        }\r\n\r\n        let isOrgBUnitsExist: boolean = false;\r\n        this.spinnerService.start();\r\n\r\n        if ((this.orgGroupIDForDBUpdate == null || this.orgGroupIDForDBUpdate == undefined || this.orgGroupIDForDBUpdate == \"\" || this.orgGroupIDForDBUpdate == \"Select One\") && this.blnShowOrgGroupDD) {\r\n            this.growlMessage = [];\r\n            this.spinnerService.stop();\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select OrgGroupID\" });\r\n            return;\r\n        }\r\n\r\n\r\n        try {\r\n            await this.atParCommonService.getOrgBusinessUnits( this.orgGroupIDForDBUpdate, BusinessType.Inventory).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUP_BUNITS>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.spinnerService.stop();\r\n                            this.lstFilteredBUnits = data.DataList;\r\n                            isOrgBUnitsExist = true;\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.showGrid = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            isOrgBUnitsExist = false;                       \r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.showGrid = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            isOrgBUnitsExist = false;\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.showGrid = false;\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            isOrgBUnitsExist = false;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            return Promise.resolve(isOrgBUnitsExist);\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"populateBusinessUnits\");\r\n        }\r\n    }\r\n\r\n    checkAll() {\r\n        this.lstCheckedBUnits = [];\r\n\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n\r\n        if (this.lstgridfilterData != null && this.lstgridfilterData != undefined && this.lstgridfilterData.length > 0) {\r\n\r\n            if (this.EndIndex > this.lstgridfilterData.length) {\r\n                this.EndIndex = this.lstgridfilterData.length;\r\n            }\r\n\r\n            for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                this.lstgridfilterData[i].checkvalue = true;\r\n                this.lstgridfilterData[i].CHK_VALUE = 1;              \r\n\r\n                this.lstCheckedBUnits.push(this.lstgridfilterData[i]);\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            if (this.EndIndex > this.lstDBData.length) {\r\n                this.EndIndex = this.lstDBData.length;\r\n            }\r\n\r\n            for (let i = this.startIndex; i <= this.EndIndex - 1; i++) {\r\n                this.lstDBData[i].checkvalue = true;\r\n                this.lstDBData[i].CHK_VALUE = 1;                             \r\n\r\n                this.lstCheckedBUnits.push(this.lstDBData[i]);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    unCheckAll() {\r\n        this.lstCheckedBUnits = [];\r\n        this.startIndex = + sessionStorage.getItem(\"Recordsstartindex\");\r\n        this.EndIndex = + sessionStorage.getItem(\"RecordsEndindex\");\r\n\r\n        if (this.lstgridfilterData != null && this.lstgridfilterData != undefined && this.lstgridfilterData.length > 0) {\r\n\r\n            if (this.EndIndex > this.lstgridfilterData.length) {\r\n                this.EndIndex = this.lstgridfilterData.length;\r\n            }\r\n\r\n            for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                this.lstgridfilterData[i].checkvalue = false;\r\n                this.lstgridfilterData[i].CHK_VALUE = 0;\r\n\r\n                this.lstgridfilterData[i].blnCountFlag = false;\r\n                this.lstgridfilterData[i].COUNT_FLAG == \"0\";\r\n\r\n                this.lstgridfilterData[i].blnAllowSicConsign = false;\r\n                this.lstgridfilterData[i].ALLOW_SIC_CONSIGN == \"N\";\r\n\r\n\r\n                this.lstCheckedBUnits.push(this.lstgridfilterData[i]);\r\n            }\r\n        }\r\n        else {\r\n            if (this.EndIndex > this.lstDBData.length) {\r\n                this.EndIndex = this.lstDBData.length;\r\n            }\r\n\r\n            for (let i = this.EndIndex - 1; i >= this.startIndex; i--) {\r\n                this.lstDBData[i].checkvalue = false;\r\n                this.lstDBData[i].CHK_VALUE = 0;\r\n\r\n                this.lstDBData[i].blnCountFlag = false;\r\n                this.lstDBData[i].COUNT_FLAG == \"0\";\r\n\r\n                this.lstDBData[i].blnAllowSicConsign = false;\r\n                this.lstDBData[i].ALLOW_SIC_CONSIGN == \"N\";\r\n\r\n\r\n                this.lstCheckedBUnits.push(this.lstDBData[i]);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    BindDataGrid() {\r\n\r\n        var lstDBDataList;\r\n        this.dataCheckedSorting = [];\r\n        this.dataUncheckedSorting = [];\r\n\r\n        for (let i = 0; i <= this.lstDBData.length - 1; i++) {\r\n            if (this.lstDBData[i].CHK_ALLOCATED == 1) {\r\n                this.dataCheckedSorting.push(this.lstDBData[i]);\r\n            }\r\n            else {\r\n                this.dataUncheckedSorting.push(this.lstDBData[i]);\r\n            }\r\n        }\r\n\r\n        this.showGrid = true;\r\n        this.isVisible = true;\r\n        this.spinnerService.stop();\r\n    }\r\n\r\n    filterdata(event) {\r\n        this.lstgridfilterData = [];\r\n        this.lstgridfilterData = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n        this.lstgridfilterData = event;\r\n    }\r\n\r\n    //customSort1(event) {\r\n    //    try {\r\n    //        var element = event;\r\n    //        this.lstDBData = [];\r\n    //        this.blnsortbycolumn = !this.blnsortbycolumn;\r\n\r\n    //        this.sortedcheckedrec = [];\r\n    //        this.sorteduncheckedrec = [];\r\n\r\n    //        this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n\r\n    //            if (a[element.field] < b[element.field])\r\n    //                return -1;\r\n    //            if (a[element.field] > b[element.field])\r\n    //                return 1;\r\n    //            return 0;\r\n\r\n\r\n    //        });\r\n    //        this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n\r\n    //            if (a[element.field] < b[element.field])\r\n    //                return -1;\r\n    //            if (a[element.field] > b[element.field])\r\n    //                return 1;\r\n    //            return 0;\r\n\r\n\r\n    //        });\r\n    //        if (this.blnsortbycolumn == false) {\r\n    //            this.lstDBData = [];\r\n    //            this.lstDBData = this.sortedcheckedrec.reverse().concat(this.sorteduncheckedrec.reverse());\r\n    //        }\r\n    //        else {\r\n    //            this.lstDBData = [];\r\n\r\n    //            this.lstDBData = this.sortedcheckedrec.concat(this.sorteduncheckedrec);\r\n    //        }\r\n\r\n    //        this.sortedcheckedrec = [];\r\n    //        this.sorteduncheckedrec = [];\r\n    //    }\r\n    //    catch (ex) {\r\n    //        this.clientErrorMsg(ex, \"customSort\");\r\n    //    }\r\n    //}\r\n\r\n    customSort(event, field) {\r\n        var element = event;\r\n        if (this.preField == element.field) {\r\n            if (element.order == 1) {\r\n                element.order = -1;\r\n            } else {\r\n                element.order = 1;\r\n            }\r\n            // element.order = !element.order;\r\n\r\n        } else {\r\n            element.order = 1;\r\n        }\r\n        this.preField = element.field;\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n        let result = null;\r\n        let order: boolean;\r\n\r\n        try {\r\n            this.sortedcheckedrec = this.dataCheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] == null && b[element.field] != null)\r\n                    result = -1;\r\n                else if (a[element.field] != null && b[element.field] == null)\r\n                    result = 1;\r\n                else if (a[element.field] == null && b[element.field] == null)\r\n                    result = 0;\r\n                else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                    result = a[element.field].localeCompare(b[element.field]);\r\n                else\r\n                    result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                return (element.order * result);\r\n            });\r\n\r\n            this.sorteduncheckedrec = this.dataUncheckedSorting.sort(function (a, b) {\r\n                if (a[element.field] == null && b[element.field] != null)\r\n                    result = -1;\r\n                else if (a[element.field] != null && b[element.field] == null)\r\n                    result = 1;\r\n                else if (a[element.field] == null && b[element.field] == null)\r\n                    result = 0;\r\n                else if (typeof a[element.field] === 'string' && typeof b[element.field] === 'string')\r\n                    result = a[element.field].localeCompare(b[element.field]);\r\n                else\r\n                    result = (a[element.field] < b[element.field]) ? -1 : (a[element.field] > b[element.field]) ? 1 : 0;\r\n\r\n                return (element.order * result);\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"customSort\");\r\n        }\r\n\r\n        this.lstDBData = [];\r\n        this.lstDBData = this.sortedcheckedrec.concat(this.sorteduncheckedrec);\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n    }\r\n    async fillBUnitsAuto(event) {\r\n\r\n        this.lstFilteredBUnits = [];\r\n\r\n\r\n        let query = event.query;\r\n        if (this.blnShowOrgGroupLabel == true) {\r\n            this.orgGroupIDForDBUpdate = this.orgGrpID;\r\n\r\n        }\r\n        else {\r\n            this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n        }\r\n\r\n        if (this.orgGroupIDForDBUpdate == undefined || this.orgGroupIDForDBUpdate == \"Select One\") {\r\n\r\n            this.growlMessage = [];\r\n\r\n            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select OrgGroupID\" });\r\n            return;\r\n        }\r\n        try {\r\n            await this.atParCommonService.getOrgBusinessUnits(this.orgGroupIDForDBUpdate, BusinessType.Inventory).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    this.spinnerService.stop();\r\n                    let data = res.json() as AtParWebApiResponse<MT_ATPAR_ORG_GROUP_BUNITS>;\r\n                    this.growlMessage = [];\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.lstBUnits = data.DataList;\r\n                            this.lstFilteredBUnits = this.filterBusinessUnits(query, this.lstBUnits);                           \r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            if (data.StatusCode != AtparStatusCodes.ATPAR_E_ASSIGN_ORGBUS) {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            }\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"fillBUnitsAuto\");\r\n        }\r\n    }\r\n\r\n    filterBusinessUnits(query, businessunits: any[]): any[] {\r\n        try {\r\n            let filtered : any[] = [];\r\n\r\n            if (query == \"%\") {\r\n                for (let i = 0; i < businessunits.length; i++) {\r\n                    let Bunitvalue = businessunits[i];\r\n                    filtered.push(Bunitvalue);\r\n                }\r\n\r\n            } else {\r\n                if (query.length >= 1) {\r\n                    for (let i = 0; i < businessunits.length; i++) {\r\n                        let Bunitvalue = businessunits[i];\r\n                        if (Bunitvalue.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n                            filtered.push(Bunitvalue);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return filtered;\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"filterBusinessUnits\");\r\n        }\r\n    }\r\n\r\n    async getAllBUnits() {\r\n\r\n        this.lstgridfilterData = null;\r\n        this.isVisible = false;\r\n        try {\r\n\r\n            if (this.blnShowOrgGroupLabel == true) {\r\n                this.orgGroupIDForDBUpdate = this.orgGrpID;\r\n            }\r\n            else {\r\n                this.orgGroupIDForDBUpdate = this.selectedOrgGroupId;\r\n            }\r\n\r\n            if ((this.orgGroupIDForDBUpdate == null || this.orgGroupIDForDBUpdate == undefined || this.orgGroupIDForDBUpdate == \"\" || this.orgGroupIDForDBUpdate == \"Select One\") && this.blnShowOrgGroupDD) {\r\n\r\n                this.growlMessage = [];\r\n                this.spinnerService.stop();\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please Select Org Group ID\" });\r\n                return;\r\n            }\r\n\r\n            if (this.selectedDropDownUserId === \"Select User\" || this.selectedDropDownUserId === \"undefined\" || this.selectedDropDownUserId == \"\") {\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please select valid User ID' });\r\n\r\n                this.showGrid = false;\r\n                return false;\r\n            }\r\n\r\n            this.lstDBData = new Array<VM_ATPAR_IBU_ALLOCATION>();\r\n\r\n            let isBUnitsExists = await this.populateBusinessUnits();\r\n\r\n            if (isBUnitsExists == true) {\r\n                this.spinnerService.start();\r\n\r\n                this.httpService.getSync({\r\n                    \"apiMethod\": \"/api/SIAllocBU/GetBUnits\",\r\n                    params: {\r\n                        \"bArray\": this.lstFilteredBUnits,\r\n                        \"appId\": \"10\",\r\n                        \"userID\": this.selectedDropDownUserId,\r\n                        \"bUnit\": this.selectedBunit,\r\n                        \"description\": this.selectedDescription,\r\n                        \"serverUserID\": this.deviceTokenEntry[TokenEntry_Enum.UserID]\r\n                        \r\n                    }\r\n                }).catch(this.httpService.handleError)\r\n                    .then((response: Response) => {\r\n                        let data = response.json();\r\n                        this.spinnerService.stop();\r\n                        switch (data.StatType) {\r\n                            case StatusType.Success: {\r\n\r\n\r\n                                this.lstDBData = [];\r\n                                this.lstDBData = data.DataList;\r\n\r\n                                for (let i = 0; i <= data.DataList.length - 1; i++) {\r\n                                    if (data.DataList[i].CHK_ALLOCATED == 1) {\r\n                                        data.DataList[i].checkvalue = true;\r\n                                    }\r\n                                    else {\r\n                                        data.DataList[i].checkvalue = false;\r\n                                    }\r\n\r\n                                    if (data.DataList[i].COUNT_FLAG == \"1\") {\r\n                                        data.DataList[i].blnCountFlag = true;\r\n                                    }\r\n                                    else {\r\n                                        data.DataList[i].blnCountFlag = false;\r\n                                    }\r\n\r\n                                    if (data.DataList[i].ALLOW_SIC_CONSIGN == \"Y\") {\r\n                                        data.DataList[i].blnAllowSicConsign = true;\r\n                                    }\r\n                                    else {\r\n                                        data.DataList[i].blnAllowSicConsign = false;\r\n                                    }\r\n                                }\r\n\r\n                                this.lstDBData = data.DataList;\r\n\r\n                                this.BindDataGrid();\r\n                                this.showGrid = true;\r\n                                this.spinnerService.stop();\r\n                                break;\r\n                            }\r\n                            case StatusType.Warn: {\r\n                                this.spinnerService.stop();\r\n                                this.showGrid = false;\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Error: {\r\n                                this.spinnerService.stop();\r\n                                this.showGrid = false;\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                            case StatusType.Custom: {\r\n                                this.spinnerService.stop();\r\n                                this.showGrid = false;\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    );\r\n\r\n            }\r\n\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getAllBUnits\");\r\n        }\r\n\r\n    }\r\n\r\n    async allocateBUnits() {\r\n        this.growlMessage = [];  \r\n\r\n        try {\r\n            if (this.selectedDropDownUserId === \"Select User\" || this.selectedDropDownUserId === \"undefined\" || this.selectedDropDownUserId == \"\") {\r\n                this.growlMessage = [];              \r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please select valid User ID' });                \r\n                return;\r\n            }\r\n            this.spinnerService.start();\r\n\r\n            this.httpService.create({\r\n                \"apiMethod\": \"/api/SIAllocBU/AllocateBUnits\",\r\n                formData: this.lstDBData,\r\n                params: {\r\n                    \"appId\": \"10\",\r\n                    \"userID\": this.selectedDropDownUserId,\r\n                    \"serverUserID\": this.deviceTokenEntry[TokenEntry_Enum.UserID],\r\n                    \"bArray\": this.lstFilteredBUnits,\r\n                    \"searched\": true,\r\n                    \"bUnit\": this.selectedBunit,\r\n                    \"description\": this.selectedDescription\r\n                    \r\n                }\r\n            }).catch(this.httpService.handleError).map((res: Response) => res.json() as AtParWebApiResponse<MT_ATPAR_IBU_ALLOCATION>).subscribe(\r\n                (response) => {\r\n\r\n                    this.growlMessage = [];\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {                        \r\n                            this.selectedDropDownUserId = \"\";                           \r\n                            this.selectedDescription = \"\";\r\n                            this.selectedBunit = \"\";\r\n                            this.isVisible = false;\r\n\r\n                            if (this.isAuditRequired == \"Y\") {\r\n                                this.insertAuditData();\r\n                                this.spinnerService.stop();\r\n                            } else {\r\n                                this.spinnerService.stop();\r\n                            }\r\n\r\n                            this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Updated Successfully' });\r\n                            this.lstDBData = [];\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            this.showGrid = false;\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            this.spinnerService.stop();\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n\r\n                });\r\n\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"allocateBUnits\");\r\n        }\r\n\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    } \r\n\r\n    async checkAuditAllowed() {\r\n        try {\r\n\r\n            await this.atParCommonService.getAuditAllowed(10, \"mt_stis_inv_bunit_alloc.aspx\").\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let data = res.json();\r\n                    this.growlMessage = [];\r\n\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.isAuditRequired = data.Data;\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"checkAuditAllowed\");\r\n        }\r\n    }\r\n\r\n    async insertAuditData() {\r\n\r\n        try {\r\n            let auditSecurity: MT_ATPAR_SECURITY_AUDIT;\r\n            let auditSecurityLst: Array<MT_ATPAR_SECURITY_AUDIT>;\r\n            auditSecurityLst = new Array<MT_ATPAR_SECURITY_AUDIT>();\r\n\r\n            for (let intCnount = 0; intCnount <= this.lstCheckedBUnits.length - 1; intCnount++) {\r\n\r\n                if (this.lstCheckedBUnits[intCnount].CHK_VALUE == 1) {\r\n\r\n                    auditSecurity = new MT_ATPAR_SECURITY_AUDIT();\r\n\r\n                    auditSecurity.FIELD_NAME = \"CHK_VALUE\";\r\n                    auditSecurity.OLD_VALUE = \"0\";\r\n                    auditSecurity.NEW_VALUE = \"1\";\r\n                    auditSecurity.KEY_1 = this.deviceTokenEntry[TokenEntry_Enum.UserID];\r\n                    auditSecurity.KEY_2 = \"10\";\r\n                    auditSecurity.KEY_3 = this.lstCheckedBUnits[intCnount].BUSINESS_UNIT;\r\n                    auditSecurity.KEY_4 = \"\";\r\n                    auditSecurity.KEY_5 = \"\";\r\n\r\n                    auditSecurityLst.push(auditSecurity);\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            let strScreenName = \"mt_stis_inv_bunit_alloc.aspx\";\r\n\r\n            await this.atParCommonService.insertAuditData(auditSecurityLst, this.deviceTokenEntry[TokenEntry_Enum.UserID], strScreenName).\r\n                catch(this.httpService.handleError).then((res: Response) => {\r\n                    let response = res.json() as AtParWebApiResponse<MT_ATPAR_SECURITY_AUDIT>;\r\n\r\n\r\n                    switch (response.StatType) {\r\n                        case StatusType.Success: {\r\n\r\n\r\n                            this.lstDBData = [];\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: response.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        } catch (ex){\r\n            this.clientErrorMsg(ex, \"insertAuditData\");\r\n        }\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.deviceTokenEntry = null;\r\n        this.lstOrgGroups = null;\r\n        this.lstUsers = null;\r\n        this.lstOrgGroups = null;\r\n        this.lstBUnits = null;\r\n        this.lstFilteredBUnits = null;\r\n        this.lstCheckedBUnits = null;\r\n        this.lstDBData = null;\r\n        this.orgGroupData = null;\r\n        this.growlMessage = null;\r\n        this.sortedcheckedrec = [];\r\n        this.sorteduncheckedrec = [];\r\n    }\r\n\r\n} \r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stis-allocate-inventory-business-units.component.ts","import { Component } from '@angular/core';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./stis-daily-activity.component.html')\r\n})\r\n\r\nexport class DailyActivityComponent {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stis-daily-activity.component.ts","import { Component } from '@angular/core';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./stis-daily-user-activity.component.html')\r\n})\r\n\r\nexport class DailyUserActivityComponent {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stis-daily-user-activity.component.ts","import { Component, CUSTOM_ELEMENTS_SCHEMA, OnDestroy, ViewChild, Input } from '@angular/core';\r\nimport { datatableservice } from './../components/datatable/datatableservice';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport { AtParCommonService } from '../Shared/atpar-common.service';\r\nimport { TokenEntry_Enum, ClientType, ModeEnum, BusinessType } from '../Shared/AtParEnums';\r\nimport { SelectItem, Message } from '../components/common/api';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { StatusType, EnumApps, MailPriority } from '../Shared/AtParEnums';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { ConfirmationService, Confirmation } from '../components/common/api';\r\nimport { DataTable } from '../components/datatable/datatable';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { SSL_CONFIG_DETAILS } from '../Entities/SSL_CONFIG_DETAILS';\r\nimport { IssueReportService } from './stis-issue-report.service';\r\nimport { VM_ISSUEREPORT } from '../entities/vm_issuereport';\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    template: require('./stis-issue-report.component.html'),\r\n    providers: [AtParCommonService, AtParConstants, IssueReportService],\r\n})\r\n\r\nexport class IssueReportComponent {\r\n    @Input() appId: string;\r\n    intAppId: number;\r\n    @ViewChild(DataTable) dataTableComponent: DataTable;\r\n    pageSize: number;\r\n    deviceTokenEntry: any;\r\n    growlMessage: Message[] = [];\r\n    breadCrumbMenu: Menus;\r\n\r\n\r\n    defDuration: number = 0;\r\n    statusCode: number = -1;\r\n    toMailAddr: string;\r\n    ipAddress: string;\r\n    gstrProtocal: string;\r\n    gstrServerName: string;\r\n    gstrPortNo: string;\r\n    showGrid: boolean = false;\r\n    isMailDialog: boolean = false;\r\n\r\n\r\n    fromDate: Date;\r\n    toDate: Date = new Date();\r\n    strFromDate: string;\r\n    strToDate: string;\r\n    strUserID: string;\r\n    orgGroupId: string;\r\n    userID: string;\r\n    itemID: string;\r\n    itemDesc: string;\r\n    patientID: string;\r\n    deptID: string;\r\n    issueUser: string;\r\n    issueLocation: string;\r\n    businessUnit: string;\r\n    showOrgDropdown: boolean;\r\n    selectedOrgGroupID: string;\r\n\r\n    lstOrgGroupIds: SelectItem[] = [];\r\n    lstStatus: SelectItem[] = [];\r\n    lstBusinessUnits: SelectItem[] = [];\r\n    lstUsers: SelectItem[] = [];\r\n    lstIssueReport: VM_ISSUEREPORT[] = [];\r\n    status: string;\r\n\r\n\r\n    constructor(private spinnerService: SpinnerService,\r\n        private atParCommonService: AtParCommonService,\r\n        private httpService: HttpService,\r\n        private atParConstant: AtParConstants,\r\n        private issueReportService: IssueReportService\r\n    ) {\r\n        this.breadCrumbMenu = new Menus();\r\n        this.deviceTokenEntry = JSON.parse(localStorage.getItem(\"DeviceTokenEntry\"));\r\n\r\n    }\r\n\r\n    async ngOnInit() {\r\n\r\n        this.pageSize = + this.deviceTokenEntry[TokenEntry_Enum.RecordsPerPage];\r\n\r\n        this.lstStatus.push({ label: 'ALL', value: 'ALL' }, { label: 'Issued', value: '6' }, { label: 'Cancelled', value: '13' }, { label: 'Returned', value: '16' });\r\n\r\n        this.status = 'ALL';\r\n\r\n        this.lstBusinessUnits.push({ label: 'ALL', value: 'ALL' });\r\n\r\n        this.businessUnit = 'ALL';\r\n\r\n        this.lstUsers.push({ label: 'ALL', value: 'ALL' });\r\n\r\n        this.userID = 'ALL';\r\n\r\n        this.spinnerService.start();\r\n\r\n        await this.getMyPreferences();\r\n\r\n        await this.bindOrgGroups();\r\n\r\n        if (!this.showOrgDropdown) {\r\n            await this.getOrgGroupAllocInvBUnits();\r\n            await this.getHeirarchyUsersList();\r\n        }\r\n\r\n        this.spinnerService.stop();\r\n    }\r\n\r\n    async getMyPreferences() {\r\n        try {\r\n            await this.atParCommonService.getMyPreferences('DEFAULT_REPORT_DURATION', this.deviceTokenEntry).then((result: Response) => {\r\n                this.spinnerService.stop();\r\n                let res = result.json() as AtParWebApiResponse<any>;\r\n                this.growlMessage = [];\r\n                switch (res.StatType) {\r\n                    case StatusType.Success: {\r\n                        this.defDuration = parseInt(res.DataVariable.toString());\r\n                        this.fromDate = new Date();\r\n                        var d = this.fromDate.getDate() - this.defDuration;\r\n\r\n                        this.fromDate.setDate(d);\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Custom: {\r\n                        this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            })\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'getMyPreferences');\r\n        }\r\n    }\r\n\r\n    async bindOrgGroups() {\r\n        try {\r\n            await this.atParCommonService.getUserOrgGroups(this.deviceTokenEntry[TokenEntry_Enum.UserID], this.deviceTokenEntry[TokenEntry_Enum.OrgGrpID])\r\n                .catch(this.httpService.handleError).then((result: Response) => {\r\n                    let res = result.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    this.lstOrgGroupIds = [];\r\n                    switch (res.StatType) {\r\n                        case StatusType.Success: {\r\n                            if (res.DataList.length == 1) {\r\n                                this.showOrgDropdown = false;\r\n                                this.orgGroupId = res.DataList[0].ORG_GROUP_ID + ' - ' + res.DataList[0].ORG_GROUP_NAME;\r\n                                this.selectedOrgGroupID = res.DataList[0].ORG_GROUP_ID;\r\n                            } else {\r\n                                this.showOrgDropdown = true;\r\n                                this.lstOrgGroupIds.push({ label: 'Select One', value: 'Select One' });\r\n                                this.selectedOrgGroupID = 'Select One';\r\n                                for (var i = 0; i < res.DataList.length; i++) {\r\n                                    if (res.DataList[i].ORG_GROUP_ID.toUpperCase() != 'ALL') {\r\n                                        this.lstOrgGroupIds.push({ label: (res.DataList[i].ORG_GROUP_ID + ' - ' + res.DataList[i].ORG_GROUP_NAME), value: res.DataList[i].ORG_GROUP_ID })\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.spinnerService.stop();\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"bindOrgGroups\");\r\n        }\r\n    }\r\n\r\n    async getOrgGroupAllocInvBUnits() {\r\n\r\n        try {\r\n            await this.issueReportService.getOrgGroupAllocInvBUnits(EnumApps.StockIssue, this.deviceTokenEntry[TokenEntry_Enum.UserID], this.selectedOrgGroupID).then((result: Response) => {\r\n                let res = result.json() as AtParWebApiResponse<any>;\r\n                this.growlMessage = [];\r\n                this.lstBusinessUnits = [];\r\n                this.businessUnit = '';\r\n                switch (res.StatType) {\r\n                    case StatusType.Success: {\r\n                        this.lstBusinessUnits.push({ label: 'ALL', value: 'ALL' });\r\n                        this.businessUnit = 'ALL';\r\n                        for (var i = 0; i < res.DataList.length; i++) {\r\n                            this.lstBusinessUnits.push({ label: res.DataList[i], value: res.DataList[i] })\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.spinnerService.stop();\r\n                        if (!this.showOrgDropdown) {\r\n                            this.lstBusinessUnits.push({ label: 'ALL', value: 'ALL' });\r\n                            this.businessUnit = 'ALL';\r\n                        }\r\n                        else {                           \r\n                            this.lstBusinessUnits.push({ label: 'Select One', value: '' });\r\n                            this.businessUnit = '';\r\n                            if (res.StatusCode == AtparStatusCodes.E_NORECORDFOUND) {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'No Assigned Org Business Units' });\r\n                            } else {\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                            }\r\n                        }\r\n                      \r\n\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Custom: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getOrgGroupAllocInvBUnits\");\r\n        }\r\n    }\r\n\r\n    async getHeirarchyUsersList() {\r\n        try {\r\n            await this.issueReportService.getHeirarchyUsersList(EnumApps.StockIssue, this.deviceTokenEntry[TokenEntry_Enum.UserID], this.selectedOrgGroupID).then((result: Response) => {\r\n                let res = result.json() as AtParWebApiResponse<any>;\r\n\r\n                this.lstUsers = [];\r\n                this.lstUsers.push({ label: 'ALL', value: 'ALL' });\r\n                this.userID = 'ALL';\r\n                switch (res.StatType) {\r\n                    case StatusType.Success: {\r\n                        for (var i = 0; i < res.DataDictionary[\"pDSUserList\"].Table1.length; i++) {\r\n                            this.lstUsers.push({ label: res.DataDictionary[\"pDSUserList\"].Table1[i].FULLNAME, value: res.DataDictionary[\"pDSUserList\"].Table1[i].USER_ID })\r\n                        }\r\n                        break;\r\n                    }\r\n                    case StatusType.Warn: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage = [];\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Error: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage = [];\r\n                        this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                    case StatusType.Custom: {\r\n                        this.spinnerService.stop();\r\n                        this.growlMessage = [];\r\n                        this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getHeirarchyUsersList\");\r\n        }\r\n    }\r\n\r\n    async ddlOrgGroup_SelectedIndexChanged() {\r\n        this.selectedOrgGroupID = this.orgGroupId;\r\n        if (this.orgGroupId != 'Select One') {\r\n            await this.getOrgGroupAllocInvBUnits();\r\n            await this.getHeirarchyUsersList();\r\n        } else {\r\n            this.lstBusinessUnits = [];\r\n            this.lstBusinessUnits.push({ label: 'ALL', value: 'ALL' });\r\n            this.businessUnit = 'ALL';\r\n        }\r\n    }\r\n\r\n    async btnGo_Click() {\r\n        try {\r\n            this.growlMessage = [];\r\n            this.showGrid = false;\r\n            var todayDate = new Date();\r\n\r\n            if (this.selectedOrgGroupID == 'Select One' || this.selectedOrgGroupID == undefined || this.selectedOrgGroupID == null) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Please select valid Org Group ID\" });\r\n            }\r\n            //else if (this.toDate > todayDate) {\r\n            //    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"Todate must be less than or equal to current date\" });\r\n            //}\r\n            else if (this.fromDate > this.toDate) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: \"FromDate must be less than Todate\" });\r\n            }\r\n            else {\r\n                //await this.getHeirarchyUsersList();\r\n\r\n                var strUserID = '';\r\n                if (this.userID == 'ALL') {\r\n                    if (this.lstUsers.length > 0) {\r\n                        for (var i = 0; i < this.lstUsers.length; i++) {\r\n                            if (strUserID != '') {\r\n                                strUserID = strUserID + \",'\" + this.lstUsers[i].value + \"'\";\r\n                            }\r\n                            else {\r\n                                strUserID = \"('\" + this.lstUsers[i].value + \"'\";\r\n                            }\r\n                        }\r\n                        strUserID = strUserID + \")\";\r\n                    }\r\n                    else {\r\n                        strUserID = \"(' \" + \"')\";\r\n                    }\r\n                }\r\n                else {\r\n                    strUserID = \"('\" + this.userID + \"')\";\r\n                }\r\n\r\n                var strBU = '';\r\n                if (this.businessUnit == 'ALL') {\r\n                    if (this.lstBusinessUnits.length > 0) {\r\n                        for (var i = 0; i < this.lstBusinessUnits.length; i++) {\r\n                            if (strBU != '') {\r\n                                strBU = strBU + \",'\" + this.lstBusinessUnits[i].value + \"'\"\r\n                            }\r\n                            else {\r\n                                strBU = \"('\" + this.lstBusinessUnits[i].value + \"'\"\r\n                            }\r\n                        }\r\n                        strBU = strBU + \")\"\r\n                    }\r\n                    else {\r\n                        strBU = \"(' \" + \"')\"\r\n                    }\r\n                }\r\n                else {\r\n                    strBU = \"('\" + this.businessUnit + \"')\"\r\n                }\r\n\r\n\r\n                this.deptID = this.deptID == undefined ? '' : this.deptID;\r\n                this.patientID = this.patientID == undefined ? '' : this.patientID;\r\n                this.issueUser = this.issueUser == undefined ? '' : this.issueUser;\r\n                this.itemID = this.itemID == undefined ? '' : this.itemID;\r\n                this.itemDesc = this.itemDesc == undefined ? '' : this.itemDesc;\r\n                this.issueLocation = this.issueLocation == undefined ? '' : this.issueLocation;\r\n                //this.strFromDate = this.fromDate.toLocaleDateString();\r\n                //this.strToDate = this.toDate.toLocaleDateString();\r\n                this.strFromDate = this.getDateString(this.fromDate);\r\n                this.strToDate = this.getDateString(this.toDate);\r\n                this.strUserID = this.userID;\r\n                this.spinnerService.start();\r\n                await this.issueReportService.getIssueReport(strBU, strUserID, this.deptID, this.patientID, this.issueUser, this.itemID, this.itemDesc, '', this.strFromDate, this.strToDate, this.status, this.issueLocation, this.lstUsers).then((result: Response) => {\r\n                    this.spinnerService.stop();\r\n                    let res = result.json() as AtParWebApiResponse<any>;\r\n                    this.growlMessage = [];\r\n                    switch (res.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.showGrid = true;\r\n                            this.lstIssueReport = res.DataDictionary[\"pDSUserList\"].Table1;\r\n                            this.replaceDS();\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: res.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, 'btnGo_Click');\r\n        }\r\n    }\r\n\r\n    replaceDS() {\r\n        for (var i = 0; i < this.lstIssueReport.length; i++) {\r\n            if (this.lstIssueReport[i].STATUS == '13') {\r\n                this.lstIssueReport[i].STATUS = 'Cancelled';\r\n            }\r\n            else if (this.lstIssueReport[i].STATUS == '16') {\r\n                this.lstIssueReport[i].STATUS = 'Returned';\r\n            }\r\n            else {\r\n                this.lstIssueReport[i].STATUS = 'Issued';\r\n            }\r\n            if (this.lstIssueReport[i].DEPT_ID == null || this.lstIssueReport[i].DEPT_ID == undefined) {\r\n                this.lstIssueReport[i].DEPT_ID = '';\r\n            }\r\n            if (this.lstIssueReport[i].PATIENT_ID == null || this.lstIssueReport[i].PATIENT_ID == undefined) {\r\n                this.lstIssueReport[i].PATIENT_ID = '';\r\n            }\r\n            if (this.lstIssueReport[i].ADJUST_TYPE == null || this.lstIssueReport[i].ADJUST_TYPE == undefined) {\r\n                this.lstIssueReport[i].ADJUST_TYPE = '';\r\n            }\r\n            if (this.lstIssueReport[i].ISSUE_TO_USER == null || this.lstIssueReport[i].ISSUE_TO_USER == undefined) {\r\n                this.lstIssueReport[i].ISSUE_TO_USER = '';\r\n            }\r\n            if (this.lstIssueReport[i].ISSUE_TO_LOCATION == null || this.lstIssueReport[i].ISSUE_TO_LOCATION == undefined) {\r\n                this.lstIssueReport[i].ISSUE_TO_LOCATION = '';\r\n            }\r\n            this.lstIssueReport[i].ISSUEDATE_USER = this.lstIssueReport[i].ISSUE_DATE + '-' + this.lstIssueReport[i].USER_NAME;\r\n            this.lstIssueReport[i].ITEMID_DESC = this.lstIssueReport[i].ITEM_ID + '-' + this.lstIssueReport[i].ITEM_DESC;\r\n            this.lstIssueReport[i].QTY_UOM = this.lstIssueReport[i].QTY + '-' + this.lstIssueReport[i].UOM;\r\n        }\r\n    }\r\n\r\n    async onExportToExcelClick(event) {\r\n        try {\r\n            event.stopImmediatePropagation();\r\n            this.spinnerService.start();\r\n            let html: string = await this.exportReportDetails('Excel');\r\n            //if (html != '' && html != null) {\r\n            //    var ua = window.navigator.userAgent;\r\n            //    var msie = ua.indexOf(\"MSIE \");\r\n            //    // If Internet Explorer\r\n            //    if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\r\n            //        this.statusCode = -1;\r\n            //        let folderName: string = '';\r\n            //        await this.atParCommonService.exportToExcel(html, \"StockIssueReport\", \"StockIssueReport\")\r\n            //            .then((res: Response) => {\r\n            //                let data = res.json();\r\n            //                this.statusCode = data.StatusCode;\r\n            //                if (this.statusCode.toString() == AtparStatusCodes.ATPAR_OK.toString()) {\r\n            //                    folderName = data.DataVariable.toString();\r\n            //                    var filename = this.httpService.BaseUrl + '/Uploaded/' + folderName + '/StockIssueReport.xls';\r\n            //                    var query = '?download';\r\n            //                    window.open(filename + query);\r\n            //                }\r\n            //                else {\r\n            //                    this.growlMessage = [];\r\n            //                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Internal Server Error.' });\r\n            //                }\r\n            //            });\r\n\r\n            //        await this.atParCommonService.deleteExcel(folderName, \"StockIssueReport\")\r\n            //            .then((res: Response) => {\r\n            //            });\r\n            //    } else {\r\n\r\n            //        var a = document.createElement('a');\r\n            //        var data_type = 'data:application/vnd.ms-excel';\r\n            //        html = html.replace(/ /g, '%20');\r\n            //        a.href = data_type + ', ' + html;\r\n            //        a.download = 'StockIssueReport.xls';\r\n            //        a.click();\r\n            //    }\r\n            //}\r\n            if (html != '' && html != null) {\r\n                let blob = new Blob([html], {\r\n                    type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\r\n                });\r\n                saveAs(blob, \"StockIssueReport.xls\");\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'onExportToExcelClick');\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async onPrintClick(event) {\r\n        try {\r\n            event.stopImmediatePropagation();\r\n            this.spinnerService.start();\r\n            var html = await this.exportReportDetails('Print');\r\n            if (html != '' && html != null) {\r\n\r\n                //var mywindow = window.open('', 'PRINT', 'height=600,width=600');\r\n                var mywindow = window.open(document.URL, null, 'height=650,width=650,status=no,resizable=yes, scrollbars=yes, toolbar=no,location=center,menubar=no');\r\n                if (mywindow != null && mywindow != undefined) {\r\n                    mywindow.document.write('<html><head><title>' + 'Stock Issue Report' + '</title>');\r\n                    mywindow.document.write('</head><body >');\r\n                    mywindow.document.write(html);\r\n                    mywindow.document.write('</body></html>');\r\n\r\n                    mywindow.document.close(); // necessary for IE >= 10\r\n                    mywindow.focus(); // necessary for IE >= 10*/\r\n\r\n                    return true;\r\n                } else {\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please set allow pop-ups for this site in your browser' });\r\n                }\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'onPrintClick');\r\n            return false;\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async onSendMailIconClick(event) {\r\n        try {\r\n            this.growlMessage = [];\r\n            this.isMailDialog = true;\r\n            this.toMailAddr = '';\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'onSendMailIconClick');\r\n        }\r\n    }\r\n\r\n    async onSendMailClick(event) {\r\n        try {\r\n            this.growlMessage = [];\r\n            if (this.toMailAddr == '' || this.toMailAddr == undefined) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Enter Email Address to Send' });\r\n                return;\r\n            }\r\n            var val = this.validateEmail(this.toMailAddr);\r\n            if (!val) {\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: 'Please Enter Valid Email Address to Send' });\r\n                return;\r\n            }\r\n            this.spinnerService.start();\r\n            let html: string = await this.exportReportDetails('Mail');\r\n            let toAddr: string = '';\r\n\r\n            this.isMailDialog = false;\r\n\r\n            if (html != '' && html != null) {\r\n                await this.atParCommonService.sendEmail(this.deviceTokenEntry[TokenEntry_Enum.SystemId], 'Stock Issue Report', JSON.stringify(html), this.toMailAddr, MailPriority.Normal.toString(), '')\r\n                    .then((res: Response) => {\r\n                        let data = res.json() as AtParWebApiResponse<number>;\r\n                        this.statusCode = data.StatusCode;\r\n                    });\r\n\r\n                if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                    this.growlMessage.push({ severity: 'success', summary: AtParConstants.GrowlTitle_Success, detail: 'Mail has been sent' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_FROM_ADDRESS) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'From Address is Missing! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_TO_ADDRESS) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Please Enter valid Email Address to Send' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_SUBJECT) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Subject is Missing! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_ENTER_BODY) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Body is Missing! Please contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_SMTP_SERVER_MISSING) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Email Server is Not Configured! Please Contact Administrator' });\r\n                }\r\n                else if (this.statusCode == AtparStatusCodes.EMAIL_SEND_FAILED) {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Mail Not Sent. Please Try Again' });\r\n                }\r\n                else {\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: 'Error while sending mail' });\r\n                }\r\n            }\r\n            this.toMailAddr = '';\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, 'onSendMailClick');\r\n        }\r\n        finally {\r\n\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async exportReportDetails(reqType: string) {\r\n        let htmlBuilder: string = '';\r\n        try {\r\n            this.statusCode = -1;\r\n            this.growlMessage = [];\r\n            let sbMailText: string;\r\n            let _strFrmDt: string;\r\n            let _strToDt: string;\r\n\r\n\r\n            let imgserverPath: string = '';\r\n\r\n            await this.atParCommonService.getServerIP()\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    var data = res.json() as AtParWebApiResponse<string>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.ipAddress = data.DataVariable.toString();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (data.StatType != StatusType.Success) {\r\n                        htmlBuilder = '';\r\n                        return htmlBuilder;\r\n                    }\r\n                });\r\n\r\n\r\n            await this.atParCommonService.getSSLConfigDetails()\r\n                .catch(this.httpService.handleError)\r\n                .then((res: Response) => {\r\n                    this.growlMessage = [];\r\n                    var data = res.json() as AtParWebApiResponse<SSL_CONFIG_DETAILS>;\r\n                    switch (data.StatType) {\r\n                        case StatusType.Success: {\r\n                            this.gstrProtocal = data.Data.PROTOCOL.toString();\r\n                            this.gstrServerName = data.Data.SERVER_NAME.toString();\r\n                            this.gstrPortNo = data.Data.PORT_NO.toString();\r\n                            break;\r\n                        }\r\n                        case StatusType.Error: {\r\n                            this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Warn: {\r\n                            this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                        case StatusType.Custom: {\r\n                            this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.StatusMessage });\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (data.StatType != StatusType.Success) {\r\n                        htmlBuilder = '';\r\n                        return htmlBuilder;\r\n                    }\r\n\r\n                });\r\n\r\n\r\n\r\n            //imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/atpar/web/images/';\r\n            imgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/atpar/AtParWebApi/assets/images/';\r\n\r\n\r\n\r\n\r\n            htmlBuilder = \"<Table align=center width=100% cellpadding=0 cellspacing = 0 vAlign=top>\"\r\n\r\n            if (reqType == \"Print\") {\r\n                htmlBuilder += \"<TR width='100%'><td colspan=2  align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg title=Atpar Version 2.4.4><img src=\" + imgserverPath + \"topbg.jpg width=75% height=63></td></TR>\"\r\n                htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                    \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                htmlBuilder += \"<tr><td colspan=10 align=left><span class=c2>Issue Report for <b>\" + this.userID + \"</b> between <b>\" + this.strFromDate + \"</b> and <b>\" + this.strToDate + \"</b></span></td><td align=right valign=top>&nbsp;\"\r\n\r\n                htmlBuilder += \"<A  href=\" + \"\" + \"javascript:window.print()\" + \"\" + \"><img src=\" + imgserverPath + \"print.jpg></A>\"\r\n            } else {\r\n                htmlBuilder += \"<TR width='100%'><td colspan=2 bgcolor='#fe9836' align=left  width='100%' height=63 nowrap><img height=63 src=\" + imgserverPath + \"logo.jpg></td></TR>\"\r\n                htmlBuilder += \"<TR><TD height=27 vAlign=bottom width=100% align=left colspan=2><font size=1 style=\" +\r\n                    \"COLOR:#8b4513;FONT-FAMILY:verdana;FONT-SIZE:8pt\" + \"><B>&nbsp;&nbsp;Mobile Supply Chain Execution<B></FONT></TD>\"\r\n                htmlBuilder += \"</TR><tr><td colspan=2>&nbsp;</td></tr><tr><td colspan=2><table align=left width=90% border=0><tr><td></td></tr>\"\r\n                htmlBuilder += \"<tr><td colspan=10 align=left><span class=c2>Issue Report for <b>\" + this.strUserID + \"</b> between <b>\" + this.strFromDate + \"</b> and <b>\" + this.strToDate + \"</b></span></td><td align=right valign=top>&nbsp;\"\r\n\r\n            }\r\n\r\n            htmlBuilder += \"</td></tr><tr height=20></tr></table></td></tr> \"\r\n            htmlBuilder += \"<table align=center width=90% style=\" + \"\" + \"BORDER-COLLAPSE:collapse\" + \"\" + \" border=1>\"\r\n            htmlBuilder += \"<tr>\"\r\n            htmlBuilder += \"<td align=center nowrap><span class=c2><b>Issue Date-User</b></span></td>\"\r\n            htmlBuilder += \"<td align=center nowrap><span class=c2><b>\"\r\n            htmlBuilder += \"Issue To Location/Company</b></span></td>\"\r\n            htmlBuilder += \"<td align=center nowrap><span class=c2><b>Issue To User</b></span></td>\"\r\n            htmlBuilder += \"<td align=center nowrap><span class=c2><b>Business Unit</b></span></td>\"\r\n            htmlBuilder += \"<td align=center nowrap><span class=c2><b>Dept ID</b></span></td>\"\r\n            htmlBuilder += \"<td align=center nowrap><span class=c2><b>Item ID - Item Description</b></span></td>\"\r\n            htmlBuilder += \"<td align=center nowrap><span class=c2><b>Qty - UOM</b></span></td>\"\r\n            htmlBuilder += \"<td align=center nowrap><span class=c2><b>Patient ID</b></span></td>\"\r\n            htmlBuilder += \"<td align=center nowrap><span class=c2><b>Adjustment Type</b></span></td>\"\r\n            htmlBuilder += \"<td align=center nowrap><span class=c2><b>Status</b></span></td>\"\r\n            htmlBuilder += \"<td align=center nowrap width=170><span class=c2><b>Signature </b></span><td>\"\r\n            htmlBuilder += \"</tr>\"\r\n\r\n            let sigimgserverPath = this.gstrProtocal + '://' + this.ipAddress + '/AtPar/AtParWebApi/Uploaded/';\r\n\r\n\r\n            for (var i = 0; i < this.lstIssueReport.length; i++) {\r\n\r\n                htmlBuilder += \"<tr height=90>\"\r\n                htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstIssueReport[i].ISSUE_DATE + \" - \"\r\n                    + this.lstIssueReport[i].USER_NAME + \"</span></td>\"\r\n                htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstIssueReport[i].ISSUE_TO_LOCATION + \"</span></td>\"\r\n                htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstIssueReport[i].ISSUE_TO_USER + \"</span></td>\"\r\n                htmlBuilder += \"<td align=left ><span class=c2>\" + this.lstIssueReport[i].BUSINESS_UNIT + \"</span></td>\"\r\n                htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstIssueReport[i].DEPT_ID + \"</span></td>\"\r\n                htmlBuilder += \"<td align=left wrap><span class=c2>\" + this.lstIssueReport[i].ITEM_ID + \" - \" + this.lstIssueReport[i].ITEM_DESC + \"</span></td>\"\r\n                htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstIssueReport[i].QTY + \" - \" + this.lstIssueReport[i].UOM + \"</span></td>\"\r\n                htmlBuilder += \"<td align=right nowrap><span class=c2>\" + this.lstIssueReport[i].PATIENT_ID + \"</span></td>\"\r\n                htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstIssueReport[i].ADJUST_TYPE + \"</span></td>\"\r\n                htmlBuilder += \"<td align=left nowrap><span class=c2>\" + this.lstIssueReport[i].STATUS + \"</span></td>\"\r\n\r\n\r\n                if (this.lstIssueReport[i].SIGNATURE != null) {\r\n                    htmlBuilder += \"<td border==#ffffff nowrap>&nbsp;<center><img  src=\" + sigimgserverPath + this.lstIssueReport[i].TRANS_ID + \".jpg></td>\"\r\n                }\r\n                else {\r\n                    htmlBuilder += \"<td border==#ffffff nowrap>&nbsp;<center></td>\"\r\n                }\r\n\r\n                htmlBuilder += \"</tr>\"\r\n            }\r\n\r\n\r\n            htmlBuilder += \"</table>\"\r\n            htmlBuilder += \"</td></td></Table>\"\r\n\r\n            return await htmlBuilder;\r\n        }\r\n        catch (ex) {\r\n            htmlBuilder = '';\r\n            this.clientErrorMsg(ex, 'exportReportDetails');\r\n        }\r\n    }\r\n\r\n    getDateString(MyDate: Date) {\r\n        var MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/' + ('0' + MyDate.getDate()).slice(-2) + '/' + MyDate.getFullYear();\r\n        return MyDateString\r\n    }\r\n\r\n    validateEmail(email) {\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    closeMailPopup() {\r\n        this.growlMessage = [];\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stis-issue-report.component.ts","import { Component } from '@angular/core';\r\nimport { EnumApps } from '../Shared/AtParEnums';\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n  \r\n    template: require('./stis-user-parameters.component.html')\r\n})\r\n\r\nexport class UserParametersComponent {\r\n    stisAppId: number = EnumApps.StockIssue;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stis-user-parameters.component.ts","import { Component } from '@angular/core';\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n@Component({\r\n  \r\n    template: require('./stockissue.component.html')\r\n})\r\n\r\n\r\nexport class StockIssueComponent { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stockissue.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { MT_STIS_DEST_LOC_ALLOCATION } from '../../app/Entities/MT_STIS_DEST_LOC_ALLOCATION';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\nimport { HttpService } from '../Shared/HttpService';\r\n\r\n@Injectable()\r\nexport class AllocateDestinationLocationsService {\r\n\r\n\r\n    constructor(private httpservice: HttpService) {\r\n    }\r\n\r\n    allocatedDestLocations(userID, selectedUserID,lstLocations: Array<MT_STIS_DEST_LOC_ALLOCATION> , searched, bUnit) {\r\n        return this.httpservice.create({\r\n            apiMethod: \"/api/AllocateDestinationLocations/AllocatedDestLocations\",\r\n            formData: lstLocations,\r\n            params: {\r\n                \"userID\": userID,\r\n                \"selectedUserID\": selectedUserID,\r\n                \"searched\": searched,\r\n                \"bUnit\": bUnit               \r\n            }\r\n        }).map(res => <AtParWebApiResponse<MT_STIS_DEST_LOC_ALLOCATION>>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    getAllocInvBUnits(appID, userID,orgGrpId) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/AllocateDestinationLocations/GetAllocInvBUnits\",\r\n            params: {\r\n                \"appID\": appID,\r\n                \"userID\": userID,\r\n                \"orgGrpId\": orgGrpId                \r\n            }\r\n        }).map(res => <AtParWebApiResponse<MT_STIS_DEST_LOC_ALLOCATION>>res.json()).catch(this.handleError);\r\n    }\r\n\r\n    getDestinationLocations(bArray: string[], location, userID, orgGroupID, serverUserID) {\r\n        return this.httpservice.get({\r\n            apiMethod: \"/api/AllocateDestinationLocations/GetDestinationLocations\",\r\n            params: {\r\n                \"bArray\": bArray,\r\n                \"location\": location,\r\n                \"userID\": userID,\r\n                \"orgGroupID\": orgGroupID,\r\n                \"serverUserID\": serverUserID                \r\n            }\r\n        }).map(res => <AtParWebApiResponse<MT_STIS_DEST_LOC_ALLOCATION>>res.json()).catch(this.handleError);\r\n\r\n    }\r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stis-allocate-destination-locations.services.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { MT_ATPAR_SECURITY_AUDIT } from '../Entities/MT_ATPAR_SECURITY_AUDIT';\r\nimport { MT_STIS_DISTRIB_TYPE } from '../Entities/MT_STIS_DISTRIB_TYPE';\r\n\r\n@Injectable()\r\n\r\nexport class AllocateDistributionTypesService {\r\n    constructor(private httpService: HttpService, public http: Http) { }\r\n\r\n    public async getDistributionTypes(distributionType, userID, orgGroupID) {\r\n\r\n        return await this.httpService.getSync({\r\n            apiMethod: \"/api/DistributionTypes/GetDistributionTypes\",\r\n            params: {\r\n                \"distributionType\": distributionType,\r\n                \"userID\": userID,\r\n                \"orgGroupID\": orgGroupID                \r\n            }\r\n        });\r\n    }\r\n    public async allocateDistributionTypes(loginUserID, selectedUserID, lstDistAllocation: Array<MT_STIS_DISTRIB_TYPE>, searched) {\r\n\r\n        return await this.httpService.create({\r\n            apiMethod: \"/api/DistributionTypes/AllocateDistributionTypes\",\r\n            formData: lstDistAllocation,\r\n            params: {\r\n                \"loginUserID\": loginUserID,\r\n                \"selectedUserID\": selectedUserID,\r\n                \"searched\": searched             \r\n            }\r\n        }).toPromise();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stis-allocate-distribution-types.service.ts","import { Injectable } from '@angular/core';\r\nimport { Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\n\r\n\r\n\r\n@Injectable()\r\n\r\nexport class IssueReportService {\r\n    constructor(private httpservice: HttpService) {\r\n    }\r\n\r\n    async getOrgGroupAllocInvBUnits(appID, userID, orgGroupID) {\r\n        return await this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/IssueReport/GetOrgGroupAllocInvBUnits\",\r\n            params: {\r\n                appID: appID,\r\n                userID: userID,\r\n                orgGroupID: orgGroupID\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    async getHeirarchyUsersList(appID, userID, orgGroupID) {\r\n        return await this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/IssueReport/GetHeirarchyUsersList\",\r\n            params: {\r\n                appID: appID,\r\n                userID: userID,\r\n                orgGrpID: orgGroupID\r\n            }\r\n        })\r\n    }\r\n\r\n    async getIssueReport(businessUnit, userID, deptID, patientID, issueUser, itemID, itemDesc, price, fromDate, toDate, status, issueLoc, userList) {\r\n        return await this.httpservice.create({\r\n            \"apiMethod\": \"/api/IssueReport/GetIssueReport\",\r\n            formData: userList,\r\n            params: {\r\n                bUnit: businessUnit,\r\n                userID: userID,\r\n                deptID: deptID,\r\n                patientID: patientID,\r\n                issueToUser: issueUser,\r\n                itemID: itemID,\r\n                itemDesc: itemDesc,\r\n                price: price,\r\n                fromDt: fromDate,\r\n                toDt: toDate,\r\n                status: status,\r\n                serverUserID: userID,\r\n                issueToLocation: issueLoc\r\n            }\r\n        }).toPromise();\r\n    }\r\n\r\n\r\n    public handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stis-issue-report.service.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\nimport { StockIssueComponent } from './stockissue.component';\r\n\r\nimport { AllocateDestinationLocationsComponent } from './stis-allocate-destination-locations.component';\r\nimport { AllocateDistributionTypesComponent } from './stis-allocate-distribution-types.component';\r\nimport { SIAllocateInventoryBusinessUnitsComponent } from './stis-allocate-inventory-business-units.component';\r\nimport { DailyActivityComponent } from './stis-daily-activity.component';\r\nimport { DailyUserActivityComponent } from './stis-daily-user-activity.component';\r\nimport { IssueReportComponent } from './stis-issue-report.component';\r\nimport { UserParametersComponent } from './stis-user-parameters.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: StockIssueComponent,\r\n        children: [\r\n            { path: 'allocatedestinationlocations', component: AllocateDestinationLocationsComponent },\r\n            { path: 'allocatedistributiontypes', component: AllocateDistributionTypesComponent },\r\n            { path: 'allocateinventorybusinessunits', component: SIAllocateInventoryBusinessUnitsComponent },\r\n            { path: 'dailyactivity', component: DailyActivityComponent },\r\n            { path: 'dailyuseractivity', component: DailyUserActivityComponent },\r\n            { path: 'issuereport', component: IssueReportComponent },\r\n            { path: 'userparameters', component: UserParametersComponent },\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class StockIssueRoutingModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stockissue-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { StockIssueComponent } from './stockissue.component';\r\n\r\n\r\nimport { AllocateDestinationLocationsComponent } from './stis-allocate-destination-locations.component';\r\nimport { AllocateDistributionTypesComponent } from './stis-allocate-distribution-types.component';\r\nimport { SIAllocateInventoryBusinessUnitsComponent } from './stis-allocate-inventory-business-units.component';\r\nimport { DailyActivityComponent } from './stis-daily-activity.component';\r\nimport { DailyUserActivityComponent } from './stis-daily-user-activity.component';\r\nimport { IssueReportComponent } from './stis-issue-report.component';\r\nimport { UserParametersComponent } from './stis-user-parameters.component';\r\n\r\nimport { StockIssueRoutingModule } from './stockissue-routing.module';\r\nimport { SharedModule } from '../Shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        StockIssueRoutingModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        StockIssueComponent,\r\n        AllocateDestinationLocationsComponent,\r\n        AllocateDistributionTypesComponent,\r\n        SIAllocateInventoryBusinessUnitsComponent,\r\n        DailyActivityComponent,\r\n        IssueReportComponent,\r\n        UserParametersComponent,\r\n        DailyUserActivityComponent\r\n\r\n    ]\r\n})\r\n\r\nexport class StockIssueModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/StockIssue/stockissue.module.ts","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\" *ngIf=\\\"true\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">Org Group ID </label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{orgGrpIDData}}</label>\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedOrgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\" (onChange)=\\\"ddlOrgGrpIdChanged()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">User ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstUsers\\\" [id]=\\\"'ddllstUsers'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedDropDownUserId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" (onChange)=\\\"ddlUserChange()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">Business Unit</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"ddllBunit\\\" [id]=\\\"'ddllBunit'\\\" [(ngModel)]=\\\"selectedBunit\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" (onChange)=\\\"ddl_Change()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"clear:both\\\"></div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">Location</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-ac-server [(ngModel)]=\\\"selectedLocation\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"lstFilteredLocation\\\" (completeMethod)=\\\"fillLocationsAuto($event)\\\"></atpar-ac-server>\\r\\n                                    </div>\\r\\n                                </div>                            \\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label col-xs-12 col-sm-6 col-md-4\\\">Display </label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"displayOptions\\\" [id]=\\\"'ddlDisplay'\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"seletedStatus\\\" (onChange)=\\\"ddl_Change()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-2 form-group\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"getDesLocations()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n\\r\\n                        <div class=\\\"col-xs-12\\\" *ngIf=\\\"isVisible\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                                <atpar-datatable [value]=\\\"lstDBData\\\" #dt [style]=\\\"{'width':'100%'}\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"pazeSize\\\" (filteredData)=\\\"filterdata($event)\\\"\\r\\n                                                 [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [responsive]=\\\"true\\\">\\r\\n\\r\\n                                    <p-column [style]=\\\"{'width':'7%', 'text-align':'center'}\\\" header=\\\"Select\\\">\\r\\n                                        <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                            <ul class=\\\"list-inline li-all-none\\\">\\r\\n                                                <li>\\r\\n\\r\\n                                                    <span (click)=\\\"checkAll()\\\" style=\\\"cursor:pointer\\\">All</span>\\r\\n                                                </li> |\\r\\n                                                <li>\\r\\n                                                    <span (click)=\\\"unCheckAll()\\\" style=\\\"cursor:pointer\\\">None</span>\\r\\n\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </template>\\r\\n                                        <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                            <atpar-switch (change)=\\\"selectedRow(ven,$event)\\\" [(ngModel)]=\\\"ven.checkvalue\\\"></atpar-switch>\\r\\n                                        </template>\\r\\n                                    </p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'10%'}\\\" field=\\\"BUSINESS_UNIT\\\" header=\\\"Business Unit\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'20%'}\\\" field=\\\"LOCATION_ID\\\" header=\\\"Location\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'40%'}\\\" field=\\\"LOCATION_DESC\\\" header=\\\"Description\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                    <p-column [style]=\\\"{'width':'25%'}\\\" field=\\\"USER_ID\\\" header=\\\"User\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\"> </p-column>\\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                            <br>\\r\\n                            <div class=\\\"col-xs-12 col-md-4 col-md-offset-5 col-sm-6 col-sm-5\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" id=\\\"btnsubmitForGrid\\\" (click)=\\\"allocateDestinationLocatons()\\\">Submit &nbsp; <i class=\\\"fa fa-check\\\"></i></button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/StockIssue/stis-allocate-destination-locations.component.html\n// module id = 2114\n// module chunks = 16","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">    \\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\" *ngIf=\\\"true\\\">\\r\\n            <br>\\r\\n            <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Org Group ID </label>                                    \\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{lblOrgGrpID}}</label>\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\"\\r\\n                                                      [(ngModel)]=\\\"selectedOrgGroupID\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                      filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupID\\\" (onChange)=\\\"ddlOrgGrpIdChanged()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">User ID</label>                                  \\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"ddlUserId\\\" [id]=\\\"'ddlUserID'\\\" [(ngModel)]=\\\"selectedUserID\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" [required]=\\\"true\\\" (onChange)=\\\"ddlUserChange()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            \\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Distrib Type</label>                           \\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"distribType\\\" [name]=\\\"txtDist\\\" [isFocused]=\\\"'false'\\\" [id]=\\\"'Dist'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div style=\\\"clear:both;\\\"></div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                        <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Display</label>                                   \\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"ddlDisplay\\\" [id]=\\\"'ddlDisplay'\\\" [(ngModel)]=\\\"selectedDisplay\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (onChange)=\\\"ddlUserChange()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"go()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"dataGrid\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                            <atpar-datatable [value]=\\\"lstDistribTypes\\\" #dt [style]=\\\"{'width':'100%'}\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"pageSize\\\" (onSort)=\\\"onSort($event)\\\" \\r\\n                                       (filteredData)=\\\"filterdata($event)\\\" expandableRows=\\\"true\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [responsive]=\\\"true\\\">\\r\\n                                <p-column [style]=\\\"{'width':'7%', 'text-align':'center'}\\\" header=\\\"Select\\\" field=\\\"CHK_VALUE\\\">\\r\\n                                    <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                        <ul class=\\\"list-inline li-all-none\\\">\\r\\n                                            <li>\\r\\n\\r\\n                                                <span (click)=\\\"checkAll()\\\" style=\\\"cursor:pointer\\\">All</span>\\r\\n                                            </li> |\\r\\n                                            <li>\\r\\n                                                <span (click)=\\\"unCheckAll()\\\" style=\\\"cursor:pointer\\\">None</span>\\r\\n\\r\\n                                            </li>\\r\\n                                        </ul>\\r\\n                                    </template>\\r\\n                                    <template let-col let-allocate=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <atpar-switch [checked]=\\\"allocate[col.field]==1?true:false\\\" [(ngModel)]=\\\"allocate[col.field]\\\" name=\\\"changeStatus\\\" (click)=\\\"changeStatus(allocate)\\\"></atpar-switch>\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n\\r\\n                               \\r\\n                                <p-column field=\\\"DISTRIB_TYPE\\\" header=\\\"Distrib Type\\\" sortable=\\\"custom\\\"   [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'25%'}\\\"> </p-column>\\r\\n                                <p-column field=\\\"DESCR\\\" header=\\\"Description\\\" sortable=\\\"custom\\\"   [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" > </p-column>\\r\\n                                <p-column field=\\\"SET_ID\\\" header=\\\"Set ID\\\" sortable=\\\"custom\\\"   [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'8%'}\\\"></p-column>\\r\\n                            \\r\\n                            </atpar-datatable>\\r\\n                            </div>\\r\\n                            <br>\\r\\n                            <div class=\\\"col-xs-12 col-sm-6 col-sm-offset-5 col-md-4 col-md-offset-5\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"allocateDistributionTypes()\\\">Submit &nbsp;<i class=\\\"fa fa-check\\\"></i></button>                             \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/StockIssue/stis-allocate-distribution-types.component.html\n// module id = 2115\n// module chunks = 16","module.exports = \"<div id=\\\"main\\\" class=\\\"content-page\\\">    \\r\\n    <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\" *ngIf=\\\"true\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding:0px;\\\">\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Org Group ID </label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <label *ngIf=\\\"blnShowOrgGroupLabel\\\" class=\\\"control-label lbl-left\\\">{{orgGrpIDData}}</label>\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroups\\\" [id]=\\\"'ddllstOrgGroups'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedOrgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" *ngIf=\\\"blnShowOrgGroupDD\\\" (onChange)=\\\"ddlOrgGrpIdChanged()\\\"></atpar-select>\\r\\n                                        <!--<input type=\\\"text\\\" name=\\\"\\\" id=\\\"input\\\" class=\\\"form-control bdr-purple\\\" value=\\\"NOI - NOI\\\" pattern=\\\"\\\" title=\\\"\\\" disabled>-->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">User ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstUsers\\\" [id]=\\\"'ddllstUsers'\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedDropDownUserId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" (onChange)=\\\"ddlUserChange()\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Business Unit</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <!--<input type=\\\"text\\\" class=\\\"form-control bdr-purple\\\" />-->\\r\\n                                        <atpar-ac-server [(ngModel)]=\\\"selectedBunit\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [suggestions]=\\\"lstFilteredBUnits\\\" (completeMethod)=\\\"fillBUnitsAuto($event)\\\"></atpar-ac-server>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"clear\\\"></div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Description</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <!--<input type=\\\"text\\\" class=\\\"form-control bdr-purple\\\" />-->\\r\\n                                        <atpar-text [(ngModel)]=\\\"selectedDescription\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [validations]=\\\"''\\\" [id]=\\\"'txtdescription'\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"getAllBUnits()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"isVisible\\\">\\r\\n                            <div class=\\\"container\\\">\\r\\n                            <atpar-datatable [value]=\\\"lstDBData\\\" [style]=\\\"{'width':'100%'}\\\" #dt [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"pazeSize\\\" (filteredData)=\\\"filterdata($event)\\\"\\r\\n                                             [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [responsive]=\\\"true\\\">\\r\\n\\r\\n\\r\\n\\r\\n                                <p-column [style]=\\\"{'width':'7%', 'text-align':'center'}\\\" header=\\\"Select\\\">\\r\\n                                    <template pTemplate=\\\"filter\\\" let-col>\\r\\n                                        <ul class=\\\"list-inline li-all-none\\\">\\r\\n                                            <li>\\r\\n\\r\\n                                                <span (click)=\\\"checkAll()\\\" style=\\\"cursor:pointer\\\">All</span>\\r\\n                                            </li> |\\r\\n                                            <li>\\r\\n                                                <span (click)=\\\"unCheckAll()\\\" style=\\\"cursor:pointer\\\">None</span>\\r\\n\\r\\n                                            </li>\\r\\n                                        </ul>\\r\\n                                    </template>\\r\\n                                    <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <atpar-switch (change)=\\\"selectedRow(ven,$event)\\\" [(ngModel)]=\\\"ven.checkvalue\\\"></atpar-switch>\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n\\r\\n                                <p-column [style]=\\\"{'width':'7%', 'text-align':'center'}\\\" header=\\\"Count Flag\\\">\\r\\n                                    <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <atpar-switch (change)=\\\"checkedCountFlag(ven,$event)\\\" [(ngModel)]=\\\"ven.blnCountFlag\\\"></atpar-switch>\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n\\r\\n                                <p-column [style]=\\\"{'width':'10%', 'text-align':'center'}\\\" header=\\\"Consignment Flag\\\">\\r\\n                                    <template let-ven=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n                                        <atpar-switch (change)=\\\"checkedConsignFlag(ven,$event)\\\" [(ngModel)]=\\\"ven.blnAllowSicConsign\\\"></atpar-switch>\\r\\n                                    </template>\\r\\n                                </p-column>\\r\\n\\r\\n                                <p-column [style]=\\\"{'width':'10%'}\\\" field=\\\"BUSINESS_UNIT\\\" header=\\\"Business Unit\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                <p-column [style]=\\\"{'width':'40%'}\\\" field=\\\"DESCR\\\" header=\\\"Description\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"> </p-column>\\r\\n                                <p-column [style]=\\\"{'width':'25%'}\\\" field=\\\"USER_ID\\\" header=\\\"User\\\" sortable=\\\"custom\\\" (sortFunction)=\\\"customSort($event)\\\" > </p-column>\\r\\n\\r\\n\\r\\n                            </atpar-datatable>\\r\\n                            </div>\\r\\n                            <br>\\r\\n                            <div class=\\\"col-xs-12 col-sm-6 col-sm-offset-5 col-md-4 col-md-offset-5\\\">\\r\\n                                <button class=\\\"btn btn-purple sbtn\\\" id=\\\"btnsubmitForGrid\\\" (click)=\\\"allocateBUnits()\\\">Submit &nbsp;<i class=\\\"fa fa-check\\\"></i></button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/StockIssue/stis-allocate-inventory-business-units.component.html\n// module id = 2116\n// module chunks = 16","module.exports = \"<div>\\r\\n    <span>this is stock issue daily activity screen.</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/StockIssue/stis-daily-activity.component.html\n// module id = 2117\n// module chunks = 16","module.exports = \"<div>\\r\\n    <span>this is stock issue daily user activity screen.</span>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/StockIssue/stis-daily-user-activity.component.html\n// module id = 2118\n// module chunks = 16","module.exports = \"\\r\\n<div id=\\\"main\\\" class=\\\"content-page\\\">\\r\\n    <div class=\\\"page-content-wrapper\\\">\\r\\n        <div class=\\\"container x_panel no-border\\\">\\r\\n            <br>\\r\\n            <div class=\\\"\\\">\\r\\n                <div class=\\\"panel panel-default\\\" style=\\\"border: 1px solid #eee;\\\">\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <!--style=\\\"padding:10px 0 0 0;\\\"-->\\r\\n                        <form class=\\\"form-horizontal form-label-left\\\" novalidate>\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"pull-right\\\" *ngIf=\\\"showGrid\\\">\\r\\n                                    <ul class=\\\"list-inline\\\">\\r\\n                                        <li class=\\\"no-padding\\\">\\r\\n                                            <i class=\\\"fa fa-envelope-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" style=\\\"cursor:pointer\\\" id=\\\"imgMail\\\" title=\\\"Send mail\\\" (click)=\\\"onSendMailIconClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                        <li class=\\\"no-padding\\\">\\r\\n                                            <i class=\\\"fa fa-print fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" style=\\\"cursor:pointer\\\" id=\\\"imgPrint\\\" title=\\\"Print\\\" (click)=\\\"onPrintClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                        <li class=\\\"no-padding\\\">\\r\\n                                            <i class=\\\"fa fa-file-excel-o fa-bg-lg bg-blue\\\" aria-hidden=\\\"true\\\" style=\\\"cursor:pointer\\\" id=\\\"imgExcel\\\" title=\\\"Excel Format\\\" (click)=\\\"onExportToExcelClick($event)\\\"></i>&nbsp;\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Org Group ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <label class=\\\"control-label lbl-left\\\" *ngIf=\\\"!showOrgDropdown\\\">{{orgGroupId}}</label>\\r\\n                                        <atpar-select [options]=\\\"lstOrgGroupIds\\\" *ngIf=\\\"showOrgDropdown\\\" [required]=\\\"true\\\" [id]=\\\"'ddlMasterOrgGrp'\\\" [(ngModel)]=\\\"orgGroupId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\" (onChange)=\\\"ddlOrgGroup_SelectedIndexChanged($event)\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Business Unit</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstBusinessUnits\\\" [id]=\\\"'ddlBusinessUnit'\\\" [(ngModel)]=\\\"businessUnit\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">User ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstUsers\\\" [id]=\\\"'ddlUser'\\\" [(ngModel)]=\\\"userID\\\" [ngModelOptions]=\\\"{standalone: true}\\\" filter=\\\"filter\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div style=\\\"clear:both;\\\"></div>\\r\\n\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Status</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-select [options]=\\\"lstStatus\\\" [(ngModel)]=\\\"status\\\" [id]=\\\"'ddlStatus'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Item ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"itemID\\\" [name]=\\\"txtItemID\\\" [id]=\\\"'txtItemID'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\"> Item Description</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"itemDesc\\\" [name]=\\\"txtDesc\\\" [id]=\\\"'txtDesc'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div style=\\\"clear:both;\\\"></div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Patient ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"patientID\\\" [name]=\\\"txtPatient\\\" [id]=\\\"'txtPatient'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Dept ID</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"deptID\\\" [name]=\\\"txtDepID\\\" [id]=\\\"'txtDepID'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">Issue To User</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"issueUser\\\" [name]=\\\"txtUser\\\" [id]=\\\"'txtUser'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div style=\\\"clear:both;\\\"></div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\"> Issue To Location</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <atpar-text [(ngModel)]=\\\"issueLocation\\\" [name]=\\\"txtLocation\\\" [id]=\\\"'txtLocation'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></atpar-text>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">From Date</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'FromDatePicker'\\\" [(ngModel)]=\\\"fromDate\\\" [placeholder]=\\\"'From Date'\\\" [dateFormat]=\\\"'mm/dd/yy'\\\" [required]=\\\"true\\\" [readonlyInput]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [yearNavigator]=\\\"true\\\"  yearRange=\\\"1950:2050\\\"></p-calendar>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-12 col-md-4 form-group\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 control-label\\\">To Date</label>\\r\\n                                    <div class=\\\"col-xs-12 col-sm-6 col-md-8\\\">\\r\\n                                        <p-calendar [showIcon]=\\\"true\\\" [id]=\\\"'ToDatePicker'\\\" [(ngModel)]=\\\"toDate\\\" [placeholder]=\\\"'To Date'\\\" [dateFormat]=\\\"'mm/dd/yy'\\\" [required]=\\\"true\\\" [readonlyInput]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [yearNavigator]=\\\"true\\\"  yearRange=\\\"1950:2050\\\"></p-calendar>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-xs-12 col-sm-6 col-sm-offset-5 col-md-4 col-md-offset-5\\\">\\r\\n                                    <button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"btnGo_Click()\\\">Go &nbsp; <i class=\\\"fa fa-arrow-right\\\"></i></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                        <br />\\r\\n                        <div style=\\\"clear:both;\\\"></div>\\r\\n                        <br />\\r\\n                        <div class=\\\"col-xs-12 help_txt\\\" style=\\\"margin:14px;\\\" *ngIf=\\\"showGrid\\\">\\r\\n                            <span class=\\\"text-primary\\\" style=\\\"float:left\\\">\\r\\n                                Issue Report for {{strUserID}} between {{strFromDate}} and {{strToDate}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <div class=\\\"container no-scrl\\\" *ngIf=\\\"showGrid\\\">\\r\\n\\r\\n                                <atpar-datatable [value]=\\\"lstIssueReport\\\" scrollable=\\\"true\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\" [rows]=\\\"pageSize\\\" [rowsPerPageOptions]=\\\"[10,20,30,40,50,60,70,80,90,100]\\\" [globalFilter]=\\\"gb\\\" [responsive]=\\\"true\\\">\\r\\n                                    <p-column header=\\\"Issue Date-User\\\" field=\\\"ISSUEDATE_USER\\\" [style]=\\\"{'width':'200px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n                                        <!--<template let-col let-ven=\\\"rowData\\\" pTemplate type=\\\"body\\\">\\r\\n                                            {{ven.ISSUE_DATE}} - {{ven.USER_NAME}}\\r\\n                                        </template>-->\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"ISSUE_TO_LOCATION\\\" header=\\\"Issue To Location\\\" [style]=\\\"{'width':'120px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"ISSUE_TO_USER\\\" header=\\\"Issue To User\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"BUSINESS_UNIT\\\" header=\\\"Business Unit\\\" [style]=\\\"{'width':'100px','text-align':'center'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"DEPT_ID\\\" header=\\\"Dept ID\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column header=\\\"Item ID - Item Description\\\" field=\\\"ITEMID_DESC\\\" [style]=\\\"{'width':'200px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n                                        <!--<template let-col let-ven=\\\"rowData\\\" pTemplate type=\\\"body\\\">\\r\\n                                            {{ven.ITEM_ID}} - {{ven.ITEM_DESC}}\\r\\n                                        </template>-->\\r\\n                                    </p-column>\\r\\n                                    <p-column header=\\\"Qty - UOM\\\" field=\\\"QTY_UOM\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\">\\r\\n                                        <!--<template let-col let-ven=\\\"rowData\\\" pTemplate type=\\\"body\\\">\\r\\n                                            {{ven.QTY}} - {{ven.UOM}}\\r\\n                                        </template>-->\\r\\n                                    </p-column>\\r\\n                                    <p-column field=\\\"PATIENT_ID\\\" header=\\\"Patient ID\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"ADJUST_TYPE\\\" header=\\\"Adjustment Type\\\" [style]=\\\"{'width':'115px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>\\r\\n                                    <p-column field=\\\"STATUS\\\" header=\\\"Status\\\" [style]=\\\"{'width':'100px'}\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\" [style]=\\\"{'width':'8%','text-align':'center'}\\\"></p-column>\\r\\n\\r\\n                                    <!--<p-column field=\\\"SIGNATURE\\\" header=\\\"Signature\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" filterPlaceholder=\\\"Search\\\"></p-column>-->\\r\\n                                    <p-column header =\\\"Signature\\\"  field=\\\"SIGNATURE\\\"  [style]=\\\"{'width':'120px'}\\\">\\r\\n                                        <template let-col let-ven =\\\"rowData\\\"  pTemplate=\\\"body\\\">\\r\\n                                            <img src =\\\"data:image/jpg;base64,{{ven.SIGNATURE}}\\\" *ngIf=\\\"ven.SIGNATURE!=null ?true:false\\\" class=\\\"img-responsive\\\" />\\r\\n                                            </template> \\r\\n                                            </p-column>\\r\\n\\r\\n                                </atpar-datatable>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n\\r\\n<mail-dialog header=\\\"Enter Recipient`s Email Address\\\" [width]=\\\"450\\\" (onClose)=\\\"closeMailPopup()\\\" [(visible)]=\\\"isMailDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\">\\r\\n    <div class=\\\"ui-grid ui-grid-responsive ui-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-1 col-md-1 col-sm-3 col-xs-3\\\" style=\\\"margin-top:2%;margin-right:-2%\\\">\\r\\n                <span style=\\\"font-weight:600\\\">To : </span>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-8 col-md-8 col-sm-8 col-xs-8\\\">\\r\\n                <atpar-text [(ngModel)]=\\\"toMailAddr\\\" [name]=\\\"txtToMailAddr\\\" [id]=\\\"'txtToMailAddr'\\\"></atpar-text>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-1 col-md-1 col-sm-3 col-xs-3\\\">\\r\\n                <span><button class=\\\"btn btn-purple sbtn\\\" (click)=\\\"onSendMailClick()\\\">Send &nbsp;<i class=\\\"fa fa-share-square-o\\\" aria-hidden=\\\"true\\\"></i></button> </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mail-dialog>\\r\\n\\r\\n\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/StockIssue/stis-issue-report.component.html\n// module id = 2119\n// module chunks = 16","module.exports = \"<div>\\r\\n    <atpar-user-parameters [appId]=\\\"stisAppId\\\"></atpar-user-parameters>\\r\\n    <!--<span>this is stock issue user paremeters screen.</span>-->\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/StockIssue/stis-user-parameters.component.html\n// module id = 2120\n// module chunks = 16","module.exports = \"<div>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/StockIssue/stockissue.component.html\n// module id = 2121\n// module chunks = 16"],"sourceRoot":""}