{"version":3,"sources":["webpack:///./src/app/trackitlogin/trackit.login.module.ts","webpack:///./src/app/Shared/AtParWebApiResponse.ts?b679*","webpack:///./src/app/Entities/TKIT_REQUESTOR.ts?8bff","webpack:///./src/app/Reports/config.ts?dbad*","webpack:///./src/app/_services/authentication.service.ts?728f*","webpack:///./src/app/trackitlogin/trackit.login.component.ts","webpack:///./src/app/trackitlogin/trackit.login.routes.ts","webpack:///./src/app/trackitlogin/trackit.login.service.ts","webpack:///./src/app/trackitlogin/trackit.login.component.html"],"names":[],"mappings":"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","file":"3.601fce7cdc00a672fc7a.chunk.js","sourcesContent":[" \r\n\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { TrackitLoginComponent } from './trackit.login.component';\r\nimport { TrackItLoginRoutingModule } from './trackit.login.routes';\r\nimport { SharedModule } from '../Shared/shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TrackItLoginRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        SharedModule\r\n    ],\r\n\r\n    declarations: [\r\n        TrackitLoginComponent,\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n\r\n})\r\n\r\nexport class TrackitLoginModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/trackitlogin/trackit.login.module.ts","\r\nimport { StatusType } from './atparenums';\r\nexport class AtParWebApiResponse<T> {\r\n    Data: T;\r\n    DataList: T[];\r\n    DataVariable: Object;\r\n    ExceptionMessage: string;\r\n    StatType: StatusType;\r\n    StatusCode: any;\r\n    StatusMessage: string; \r\n    DataDictionary: T[];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Shared/AtParWebApiResponse.ts","export class TKIT_REQUESTOR {\r\n    public ORG_GROUP_ID: string;\r\n    public REQUESTOR_ID: string;\r\n    public PASSWORD: string;\r\n    public NEWPASSWORD: string;\r\n    public CNFRMPASSWORD: string;\r\n    public FIRST_NAME: string;\r\n    public MIDDLE_INIT: string;\r\n    public LAST_NAME: string;\r\n    public PHONE: string;\r\n    public EMAIL: string;\r\n    public FAX: string;\r\n    public PAGER: string;\r\n    public LOCATION_ID: string;\r\n    public STATUS: string;\r\n    public checkStatus : boolean;\r\n    public RECORDS_PER_PAGE?: number;\r\n    public DEFAULT_REPORT_DURATION?: number;\r\n    public NO_OF_REQUESTS_FOR_SAME_EQ_ITM?: number;\r\n    public USERNAME: string;\r\n    public IMAGE_PATH: string;\r\n    public IMAGE: number[];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Entities/TKIT_REQUESTOR.ts","\nexport class Config {\n    public static getPath(value: string): string {\n\n        let apiEndPoint = window.location.protocol + \"//\" + window.location.hostname + \"/AtPar/ReportingStarterApi/\"\n\n       // let apiEndPoint = \"http://localhost/WebApi2StarterKit/\";\n       // let apiEndPoint = \"http://Localhost/AtPar/ReportingStarterApi/\"\n        //debugger;\n        switch (value) {\n            case \"register\":\n                return apiEndPoint + \"api/Account/Register\";\n            case \"login\":\n                return apiEndPoint + \"Token\";\n            case \"logout\":\n                return apiEndPoint + \"api/Account/Logout\";\n            case \"getizendatoken\":\n                return apiEndPoint + \"api/User/GenerateToken\";\n            default:\n                return \"\";\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/Reports/config.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response, RequestOptions, URLSearchParams } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map'\nimport { Config } from '../Reports/config'\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthenticationService {\n    public token: string;\n\n    constructor(private http: Http, private router:Router) {\n        // set token if saved in local storage\n        var currentUser = localStorage.getItem('currentUser');\n        this.token =  localStorage.getItem('tokenKey');\n    }\n\n    public  login(tenantname: string, username: string, password: string): Observable<boolean> {\n        let url: string = Config.getPath(\"login\");\n        \n        let urlSearchParams  = new URLSearchParams();\n        urlSearchParams.append('grant_type', 'password');\n        urlSearchParams.append('tenant', tenantname);\n        urlSearchParams.append('username', username);\n        urlSearchParams.append('password', password);\n\n        let body = urlSearchParams.toString();\n\n        let headers: Headers = new Headers({ \"Content-Type\": \"application/x-www-form-urlencoded\" });\n        let options: RequestOptions = new RequestOptions({ headers: headers });\n        \n        return this.http.post(url, body, options )\n            .map((response: Response) => {\n                let token = response.json() && response.json().access_token;\n                console.log(token);\n                if (token) {\n                    this.token = token;\n                    localStorage.setItem('currentUser', username);\n                    localStorage.setItem('tokenKey', token);\n                    this.getIzendaToken(token);\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n    }\n\n\n    //public async login(tenantname: string, username: string, password: string):Boolean {\n    //    let url: string = Config.getPath(\"login\");\n\n    //    let urlSearchParams = new URLSearchParams();\n    //    urlSearchParams.append('grant_type', 'password');\n    //    urlSearchParams.append('tenant', tenantname);\n    //    urlSearchParams.append('username', username);\n    //    urlSearchParams.append('password', password);\n\n    //    let body = urlSearchParams.toString();\n\n    //    let headers: Headers = new Headers({ \"Content-Type\": \"application/x-www-form-urlencoded\" });\n    //    let options: RequestOptions = new RequestOptions({ headers: headers });\n\n    //    return await this.http.post(url, body, options)\n    //        .map((response: Response) => {\n    //            let token = response.json() && response.json().access_token;\n    //            console.log(token);\n    //            if (token) {\n    //                this.token = token;\n    //                localStorage.setItem('currentUser', username);\n    //                localStorage.setItem('tokenKey', token);\n    //                this.getIzendaToken(token);\n    //                return true;\n    //            } else {\n    //                return false;\n    //            }\n    //        });\n    //}\n\n\n    Newlogin(tenantname: string, username: string, password: string) {\n\n        debugger;\n        let url: string = Config.getPath(\"login\");\n\n        let urlSearchParams = new URLSearchParams();\n        urlSearchParams.append('grant_type', 'password');\n        urlSearchParams.append('tenant', tenantname);\n        urlSearchParams.append('username', username);\n        urlSearchParams.append('password', password);\n\n        let body = urlSearchParams.toString();\n\n        let headers: Headers = new Headers({ \"Content-Type\": \"application/x-www-form-urlencoded\" });\n        let options: RequestOptions = new RequestOptions({ headers: headers });\n\n        this.http.post(url, body, options)\n            .map((response: Response) => {\n                let token = response.json() && response.json().access_token;\n                console.log(token);\n                if (token) {\n                    this.token = token;\n                    localStorage.setItem('currentUser', username);\n                    localStorage.setItem('tokenKey', token);\n                    this.getIzendaToken(token);\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n    }\n\n    logout(){\n        let url: string = Config.getPath(\"logout\");\n        var token = localStorage.getItem(\"tokenKey\");\n        let headers:Headers;\n        if (token) {\n            headers = new Headers({ \"Authorization\": 'Bearer ' + token });\n        }\n        let body = {};\n        let options: RequestOptions = new RequestOptions({ headers: headers });\n\n        return this.http.post(url, body, options )\n            .subscribe(response => {\n                    localStorage.removeItem('currentUser');\n                    localStorage.removeItem('tokenKey');\n                    localStorage.removeItem('izendatoken');\n            },\n            err=> { \n                console.log(err);\n                });\n        \n    }\n\n    register(tenantname: string, username: string, password: string, confirmpassword: string) {\n        let url: string = Config.getPath(\"register\");\n        let headers: Headers = new Headers({ \"Content-Type\": \"application/json; charset=utf-8\" });\n        let body: string = JSON.stringify({Tenant: tenantname,  Email: username, Password: password, ConfirmPassword: confirmpassword });\n        let options: RequestOptions = new RequestOptions({ headers: headers });\n\n\n        return this.http.post(url, body, options )\n            .map((response: Response) => {\n                if(response.status >= 200 && response.status < 300 ){\n                    return true;\n                }\n                else{\n                      return false;\n                }\n            });\n    }\n\n    getIzendaToken(token:string): void {\n        let url: string = Config.getPath(\"getizendatoken\");\n        let  headers = new Headers({ \"Authorization\": 'Bearer ' + token });\n        let options: RequestOptions = new RequestOptions({ headers: headers });\n\n        this.http.get(url, options)\n        .subscribe(\n            data => {\n                console.log(data.json());\n                localStorage.setItem(\"izendatoken\", data.json());\n            },\n            error => {\n                console.log(\"Cannot get Izenda Token\");\n                console.log(error);\n            });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/_services/authentication.service.ts","\r\nimport {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    ViewChild,\r\n    ElementRef, Output, EventEmitter\r\n} from '@angular/core';\r\n\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nimport {\r\n    Router,\r\n    ActivatedRoute,\r\n    Params,\r\n    NavigationExtras\r\n} from '@angular/router';\r\n\r\nimport {\r\n    Http,\r\n    Response\r\n} from '@angular/http';\r\n\r\nimport {\r\n    AbstractControl,\r\n    FormArray,\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators\r\n} from '@angular/forms';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport * as Rx from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { List } from 'linqts';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { AtParWebApiResponse } from '../Shared/AtParWebApiResponse';\r\n\r\nimport {\r\n    TokenEntry_Enum,\r\n    ClientType,\r\n    StatusType,\r\n    EnumApps,\r\n    YesNo_Enum\r\n} from '../Shared/AtParEnums';\r\n\r\nimport { AtparStatusCodes } from '../Shared/AtParStatusCodes';\r\nimport { MT_ATPAR_USER_PROFILE_APP_ACL_ORG } from '../Entities/MT_ATPAR_USER_PROFILE_APP_ACL_ORG';\r\nimport { MT_ATPAR_USER_PROFILE_APP_ACL } from '../Entities/MT_ATPAR_USER_PROFILE_APP_ACL';\r\nimport { MT_ATPAR_USER_ORG_GROUPS } from '../Entities/MT_ATPAR_USER_ORG_GROUPS';\r\nimport { MT_ATPAR_SYSTEM_DB } from '../Entities/MT_ATPAR_SYSTEM_DB';\r\nimport { TKIT_REQUESTOR } from '../Entities/TKIT_REQUESTOR';\r\nimport { MT_ATPAR_APP } from '../Entities/MT_ATPAR_APP';\r\nimport { MT_ATPAR_APP_GROUP } from '../Entities/MT_ATPAR_APP_GROUP';\r\nimport { VM_REPORTS_MENUS } from '../Entities/VM_REPORTS_MENUS';\r\nimport { TrackitloginService } from './trackit.login.service';\r\nimport { SpinnerService } from '../components/spinner/event.spinner.service';\r\nimport {\r\n    SelectItem,\r\n    Message\r\n} from './../components/common/api';\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\nimport { AtParConstants } from '../Shared/AtParConstants';\r\nimport { IzendaIntegrate } from '../_helpers/izendaintegrate';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport { LeftBarAnimationService } from '../Home/leftbar-animation.service';\r\nimport { Menus } from '../AtPar/Menus/routepath';\r\n\r\n\r\n/**\r\n*\tThis class represents the lazy loaded LoginComponent.\r\n*/\r\n\r\ndeclare var module: {\r\n    id: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'my-trackit',\r\n    template: require('./trackit.login.component.html'),\r\n    providers: [\r\n        TrackitloginService,\r\n        AuthenticationService,\r\n        AtParConstants,\r\n        HttpService\r\n    ],\r\n})\r\n\r\nexport class TrackitLoginComponent implements OnInit {\r\n    @Output() oncountbuttonclicked: EventEmitter<number> = new EventEmitter<number>();\r\n    countvalue: number = 0;\r\n    model: any = {};\r\n    mhsicon: string = \"\";\r\n    visibleUserID: boolean = false;\r\n    visiblePassword = false;\r\n    pSSOByPass: boolean;\r\n    trSystemId: boolean = false;\r\n    isSSOEnabled: boolean = false;\r\n    isValidUser: false;\r\n\r\n    statusCode: number = -1;\r\n    activeLblUserID: String;\r\n    activeLblPassword: String;\r\n    userId: string = \"\";\r\n    password: string = \"\";\r\n    deviceID: string = \"\";\r\n    systemID: string = \"\";\r\n    dateTime: string = \"\";\r\n    accessToken: string = \"\";\r\n    accessTokenXML: any;\r\n    errorCode: string = \"\";\r\n    _dbConnectionString: string = \"\";\r\n    systemRowData: any;\r\n    strServer: string = \"\";\r\n    strDatabase: string = \"\";\r\n    strUserID: string = \"\";\r\n    strPassword: string = \"\";\r\n    strSSOVariable: string = \"\";\r\n    strSSOCookie: string = \"\";\r\n    strSSOLogout: string = \"\";\r\n    strSystemId: string = \"\";\r\n    hdnSystemId: string = \"\";\r\n    strSSOUser: string = \"\";\r\n    gStrSSOUser: string = \"\";\r\n    selectedDB: string = \"\";\r\n    statusMessage: string = \"\";\r\n    statusType: any;\r\n    ipAddress: any;\r\n    passHash: any;\r\n    decryptpassword: any;\r\n    message: string;\r\n    dropdownData: SelectItem[] = [];\r\n    roleIds: MT_ATPAR_USER_PROFILE_APP_ACL[];\r\n    growlMessage: Message[] = [];\r\n    _deviceTokenEntry: string[] = [];\r\n    systemData: MT_ATPAR_SYSTEM_DB[];\r\n    atweb: AtParWebApiResponse<MT_ATPAR_SYSTEM_DB>;\r\n    userToken: AtParWebApiResponse<MT_ATPAR_USER_PROFILE_APP_ACL_ORG>;\r\n    lstApps: List<MT_ATPAR_APP>;\r\n    lstAppGroups: List<MT_ATPAR_APP_GROUP>;\r\n    myForm: FormGroup;\r\n    ipData: AtParWebApiResponse<string>;\r\n    loginData: TKIT_REQUESTOR = new TKIT_REQUESTOR();\r\n    breadCrumbMenu: Menus;\r\n    loginPswd: string = \"\";\r\n    savedUserID: boolean = true;\r\n    savedPassword: boolean = true;\r\n    @ViewChild('userID') user: ElementRef;\r\n    @ViewChild('f') formGroup;\r\n    public userID: HTMLDivElement;\r\n    //statusMessage: string = \"\";\r\n\r\n    constructor(\r\n        public fb: FormBuilder,\r\n        private router: Router,\r\n        private trackitloginService: TrackitloginService,\r\n        private route: ActivatedRoute,\r\n        private spinnerService: SpinnerService,\r\n        private authenticationservice: AuthenticationService,\r\n        private title: Title,\r\n        private izItergrate: IzendaIntegrate,\r\n        private atParConstant: AtParConstants,\r\n        private leftBarAnimationsewrvice: LeftBarAnimationService,\r\n        private httpService: HttpService\r\n    ) {\r\n        try {\r\n            this.mhsicon = \"assets/images/MHSAtpar.png\";\r\n            this.httpService.clearAppSession();\r\n            localStorage.setItem('isTrackITLogin', YesNo_Enum.Y.toString());\r\n            this.title.setTitle('TrackIT Login');\r\n            this.visibleUserID = false;\r\n            this.visiblePassword = false;\r\n            this.lstAppGroups = new List<MT_ATPAR_APP_GROUP>();\r\n            this.lstApps = new List<MT_ATPAR_APP>();\r\n            HttpService.previousTime = new Date();\r\n            this.myForm = this.fb.group({\r\n                userID: ['', Validators.required],\r\n                password: ['', Validators.required],\r\n\r\n            });\r\n            this.breadCrumbMenu = new Menus();\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"constructor\");\r\n        }\r\n    }\r\n\r\n    onFocusUserName() {\r\n        try {\r\n            if (this.model.userID == \"undefined\") {\r\n                this.visibleUserID = !this.visibleUserID;\r\n            } else { this.visibleUserID = true };\r\n            this.activeLblUserID = this.visibleUserID ? 'input-disturbed' : 'hide-class';\r\n            this.savedUserID = false;\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onFocusUserName\");\r\n        }\r\n    }\r\n\r\n    onFocusPassword() {\r\n        try {\r\n            if (this.model.password == \"undefined\") {\r\n                this.visiblePassword = !this.visiblePassword;\r\n            } else { this.visiblePassword = true; }\r\n            this.activeLblPassword = this.visiblePassword ? 'input-disturbed' : 'hide-class';\r\n            this.savedPassword = false;\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onFocusPassword\");\r\n        }\r\n    }\r\n\r\n    formKeyPressEvent(event) {\r\n        try {\r\n            if (event.charCode == 13) {\r\n                if (this.model.userID == null || this.model.userID == undefined || this.model.userID == '') {\r\n                    (<HTMLInputElement>document.getElementById(\"txtUserID\")).focus();\r\n                }\r\n                else if (this.model.password == null || this.model.password == undefined || this.model.password == '') {\r\n                    (<HTMLInputElement>document.getElementById(\"txtPassword\")).focus();\r\n                }\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"formKeyPressEvent\");\r\n        }\r\n    }\r\n\r\n    async onSubmit(userId, password) {\r\n\r\n        try {\r\n            if (userId == null || userId == \"\" || userId == undefined) {\r\n                this.statusMessage = \"Please enter Valid User ID\";\r\n                (<HTMLInputElement>document.getElementById(\"txtUserID\")).focus();\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                return;\r\n            }\r\n            if (password == null || password == \"\" || password == undefined) {\r\n                this.statusMessage = \"Please enter Valid Password\";\r\n                (<HTMLInputElement>document.getElementById(\"txtPassword\")).focus();\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                return;\r\n            }\r\n            this.userId = userId.toUpperCase();\r\n            this.loginPswd = password;\r\n\r\n            if (((<HTMLInputElement>document.getElementById(\"txtPassword\")).value == null)\r\n                || ((<HTMLInputElement>document.getElementById(\"txtPassword\")).value == '')) {\r\n                this.model.password = null;\r\n                return;\r\n            }\r\n\r\n            //  localStorage.setItem(\"userId\", userId);\r\n\r\n\r\n            if (this.trSystemId == true) {\r\n                if (this.selectedDB == null || this.selectedDB == \"\" ||\r\n                    this.selectedDB == undefined || this.selectedDB == \"Select System ID\") {\r\n                    this.statusMessage = \"Please select a SystemId\";\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                    return;\r\n                }\r\n            }\r\n            if (typeof this.hdnSystemId.trim() != 'undefined' && this.hdnSystemId) {\r\n                this.systemID = await this.hdnSystemId;\r\n            }\r\n            else {\r\n                this.systemID = this.selectedDB;\r\n            }\r\n            this.doLoginMethod();\r\n            // this.DoLogin(this.userId, password, this.deviceID, this.systemID)\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"onSubmit\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async doLoginMethod() {\r\n        await this.DoLogin(this.userId, this.loginPswd, this.deviceID, this.systemID)\r\n    }\r\n\r\n    async DoLogin(userID, password, deviceID, SystemID) {\r\n        try {\r\n            this.growlMessage = [];\r\n            HttpService.previousTime = new Date();\r\n            let userName: string = \"\";\r\n            let showProfile: string = \"\";\r\n            let OrgGrpId: string = \"\";\r\n            var key = CryptoJS.enc.Utf8.parse('8080808080808080');\r\n            var iv = CryptoJS.enc.Utf8.parse('8080808080808080');\r\n            //localStorage.setItem(\"UserLoginPwd\", password);\r\n            this.passHash = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(password), key,\r\n                { keySize: 128 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\r\n            this.spinnerService.start();\r\n            try {\r\n                let statusCode: number;\r\n                await this.trackitloginService.CheckLogin(userID, this.passHash).\r\n                    then(async (res: Response) => {\r\n                        let data = res.json();\r\n                        this.loginData = data.DataVariable;\r\n                        this.statusType = data.StatType;\r\n                        this.statusMessage = data.StatusMessage;\r\n                        statusCode = data.StatusCode;\r\n                        switch (this.statusType) {\r\n                            case StatusType.Success:\r\n                                {\r\n\r\n                                    this.dateTime = new Date().toLocaleString().toString();\r\n                                    this._deviceTokenEntry[TokenEntry_Enum.UserID] = userID;\r\n                                    this._deviceTokenEntry[TokenEntry_Enum.DeviceID] = deviceID;\r\n                                    this._deviceTokenEntry[TokenEntry_Enum.DateTime] = this.dateTime;\r\n                                    this._deviceTokenEntry[TokenEntry_Enum.ClientType] = ClientType.WEB.toFixed().toString();\r\n                                    this._deviceTokenEntry[TokenEntry_Enum.SystemId] = SystemID;\r\n                                    //this._deviceTokenEntry[TokenEntry_Enum.AccessToken] = \"\";\r\n                                    this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID] = this.loginData.ORG_GROUP_ID;\r\n                                    this._deviceTokenEntry[TokenEntry_Enum.AppName] = EnumApps[EnumApps.TrackIT].toString();\r\n                                    localStorage.setItem(\"tkitDeviceTokenEntry\", JSON.stringify(this._deviceTokenEntry));\r\n                                    localStorage.setItem(\"tkitUserID\", userID);\r\n                                    localStorage.setItem(\"userName\", this.loginData.USERNAME);\r\n                                    await this.GetOrgGroupParamValue();\r\n                                    await this.GetTKITMyPreferences();\r\n                                    await this.getRequestedItemsCount();\r\n                                    break;\r\n                                }\r\n                            case StatusType.Warn:\r\n                                {\r\n\r\n                                    this.spinnerService.stop();\r\n                                    if (data.StatusCode == AtparStatusCodes.TKIT_E_INACTIVEREQUESTOR) {\r\n                                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                                    }\r\n                                    else {\r\n\r\n                                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            case StatusType.Error:\r\n                                {\r\n\r\n                                    this.spinnerService.stop();\r\n                                    this.growlMessage = [];\r\n                                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: this.statusMessage });\r\n                                    break;\r\n                                }\r\n                            case StatusType.Custom:\r\n                                {\r\n                                    this.spinnerService.stop();\r\n                                    this.growlMessage = [];\r\n                                    this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: data.statusMessage });\r\n                                    break;\r\n                                }\r\n                        }\r\n\r\n                    });\r\n\r\n                if (statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                    await this.router.navigate(['trackitdashboard']);\r\n                }\r\n\r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"DoLogin\");\r\n            }\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"DoLogin\");\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n    async GetOrgGroupParamValue() {\r\n        try {\r\n            this.spinnerService.start();\r\n            let trackITAppId: number = EnumApps.TrackIT;\r\n            await this.trackitloginService.GetOrgGroupParamValue(\"UPDATE_TRACKIT_USER_PROFILE\", trackITAppId, this._deviceTokenEntry[TokenEntry_Enum.OrgGrpID]).\r\n                then((res: Response) => {\r\n\r\n                    let response = res.json() as AtParWebApiResponse<string>;\r\n                    this.spinnerService.stop();\r\n                    this.growlMessage = [];\r\n                    this.statusType = response.StatType;\r\n                    this.statusMessage = response.StatusMessage;\r\n\r\n                    switch (this.statusType) {\r\n                        case StatusType.Success:\r\n                            {\r\n                                localStorage.setItem(\"userName\", response.DataVariable.toString());\r\n                                break;\r\n                            }\r\n                        case StatusType.Warn:\r\n                            {\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                                break;\r\n                            }\r\n                        case StatusType.Error:\r\n                            {\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: this.statusMessage });\r\n                                break;\r\n                            }\r\n                        case StatusType.Custom:\r\n                            {\r\n                                this.spinnerService.stop();\r\n                                this.growlMessage.push({ severity: 'info', summary: AtParConstants.GrowlTitle_Info, detail: this.statusMessage });\r\n                                break;\r\n                            }\r\n                    }\r\n\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"GetOrgGroupParamValue\");\r\n        }\r\n    }\r\n\r\n\r\n    async GetTKITMyPreferences() {\r\n        try {\r\n\r\n            this.spinnerService.start();\r\n            await this.trackitloginService.GetTKITMyPreferences(\"RECORDS_PER_PAGE\", this._deviceTokenEntry[TokenEntry_Enum.UserID]).\r\n                then((res: Response) => {\r\n                    let data2 = res.json();\r\n                    if (data2.DataVariable != null) {\r\n                        this._deviceTokenEntry[TokenEntry_Enum.RecordsPerPage] = data2.DataVariable.toString();\r\n                        localStorage.setItem(\"tkitDeviceTokenEntry\", JSON.stringify(this._deviceTokenEntry));\r\n                    }\r\n                });\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"GetTKITMyPreferences\");\r\n        }\r\n\r\n    }\r\n\r\n    async GetSystemIds(data: string): Promise<AtParWebApiResponse<MT_ATPAR_SYSTEM_DB>> {\r\n        try {\r\n            this.atweb = new AtParWebApiResponse<MT_ATPAR_SYSTEM_DB>();\r\n            try {\r\n                this.spinnerService.start();\r\n                await this.trackitloginService.GetSystemIDs(data)\r\n                    .then((res: Response) => {\r\n                        let data = res.json();\r\n                        this.atweb = data;\r\n                    })\r\n                return this.atweb;\r\n            }\r\n            catch (ex) {\r\n                this.clientErrorMsg(ex, \"GetSystemIds\");\r\n                return;\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"GetSystemIds\");\r\n        }\r\n\r\n    }\r\n\r\n    async ngOnInit() {\r\n        try {\r\n            let samplResponse: string = '';\r\n            let strSSOUser: string = '';\r\n            await this.setDeviceTokenSession();\r\n            this.spinnerService.start();\r\n            var redirect;\r\n\r\n\r\n            this.route.queryParams.subscribe((params: Params) => {\r\n                redirect = params['redirected'];\r\n            });\r\n            if (HttpService.redirect == \"Y\") {\r\n                this.statusMessage = \"Session Expired\";\r\n                this.growlMessage = [];\r\n                this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n            }\r\n\r\n            await this.getLoginTemplateStyle();\r\n            await this.LoadData();\r\n\r\n\r\n            if (this.hdnSystemId.trim() == \"\" || this.hdnSystemId == \"\" || this.hdnSystemId == undefined) {\r\n                this.BindDropDown();\r\n            }\r\n\r\n\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"ngOnInit\");\r\n            return;\r\n        }\r\n        finally {\r\n            this.spinnerService.stop();\r\n        }\r\n    }\r\n\r\n\r\n    async getLoginTemplateStyle() {\r\n        try {\r\n            let wheight: any;\r\n            let loginHeight: any;\r\n            let loginWidth: any;\r\n            let wWidth: any;\r\n            wheight = window.innerHeight;\r\n            wWidth = window.innerWidth;\r\n\r\n            let loginElement: HTMLElement = (<HTMLElement>document.getElementById('divlogin'));\r\n\r\n            loginHeight = loginElement.clientHeight;\r\n            loginWidth = loginElement.clientWidth;\r\n\r\n            loginElement.style.setProperty('margin', (((wheight / 100) * 45) - (loginHeight / 2)) + 'px ' + '0 0 ' + ((wWidth / 2) - (loginWidth / 2)) + 'px');\r\n\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"getLoginTemplateStyle\");\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public async LoadData() {\r\n        try {\r\n            var querySystemID;\r\n\r\n            this.route.queryParams.subscribe((params: Params) => {\r\n                querySystemID = params['systemid'];\r\n            });\r\n            if (querySystemID != null) {\r\n                if (querySystemID.trim() != \"\") {\r\n                    // Checks whether the systemid from the query string exists in the DB or not\r\n                    this.strSystemId = querySystemID.toUpperCase();\r\n                    await this.CheckSystemID(this.strSystemId);\r\n                }\r\n                else {\r\n                    this.hdnSystemId = \"\";\r\n                    this.trSystemId = false;\r\n                }\r\n            }\r\n            else {\r\n\r\n                this.atweb = await this.GetSystemIds(\"\");\r\n                this.systemData = this.atweb.DataList;\r\n                this.statusCode = this.atweb.StatusCode;\r\n                this.statusType = this.atweb.StatType;\r\n                this.statusMessage = this.atweb.StatusMessage;\r\n                switch (this.statusType) {\r\n                    case StatusType.Success: {\r\n                        if (this.systemData.length > 1) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            this.hdnSystemId = this.systemData[0].SYSTEM_ID;\r\n                            this.trSystemId = false;\r\n                            this._deviceTokenEntry[TokenEntry_Enum.SystemId] = this.hdnSystemId;\r\n\r\n                        }\r\n                        break;\r\n                    }\r\n                    case StatusType.Error:\r\n                        this.statusMessage = this.statusMessage;\r\n                        this.growlMessage = [];\r\n                        this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: this.statusMessage });\r\n                        break;\r\n                    case StatusType.Warn:\r\n                        this.statusMessage = this.statusMessage;\r\n                        this.growlMessage = [];\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                        break;\r\n                    case StatusType.Custom:\r\n                        this.growlMessage = [];\r\n                        this.growlMessage.push({ severity: 'custom', summary: AtParConstants.GrowlTitle_Info, detail: this.statusMessage });\r\n                        break;\r\n\r\n                }\r\n\r\n            }\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"LoadData\");\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private async CheckSystemID(pSystemID: string) {\r\n        try {\r\n            this.atweb = await this.GetSystemIds(pSystemID)\r\n            this.systemData = this.atweb.DataList,\r\n                this.statusCode = this.atweb.StatusCode;\r\n\r\n            if (this.statusCode == AtparStatusCodes.ATPAR_OK) {\r\n                var strFilter: string = \"\";\r\n                strFilter = pSystemID;\r\n                if (this.systemData != null) {\r\n                    if (this.systemData.length > 0) {\r\n                        this.systemRowData = this.systemData.filter(x => x.SYSTEM_ID.toUpperCase() == strFilter);\r\n                    }\r\n                }\r\n                if (this.systemRowData != null) {\r\n                    this.statusType = StatusType.Success;\r\n                }\r\n                else {\r\n                    this.statusType = StatusType.Warn;\r\n                }\r\n            }\r\n            else {\r\n                this.statusType = this.atweb.StatType;\r\n            }\r\n            switch (this.statusType) {\r\n                case StatusType.Success:\r\n                    this.hdnSystemId = this.strSystemId;\r\n                    this._deviceTokenEntry[TokenEntry_Enum.SystemId] = this.strSystemId;\r\n                    this.trSystemId = false;\r\n                    break;\r\n                case StatusType.Error:\r\n                    this.statusMessage = this.atweb.StatusMessage;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: this.statusMessage });\r\n                    this.hdnSystemId = \"\";\r\n                    this.trSystemId = false;\r\n                    break;\r\n                case StatusType.Warn:\r\n                    this.statusMessage = this.atweb.StatusMessage;\r\n                    if (this.statusCode == AtparStatusCodes.E_NORECORDFOUND) {\r\n                        this.statusMessage = \"Not a valid system id.\";\r\n                        this.growlMessage = [];\r\n                        this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                        return;\r\n                    }\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                    this.hdnSystemId = \"\";\r\n                    this.trSystemId = false;\r\n                    break;\r\n                case StatusType.Custom:\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'custom', summary: AtParConstants.GrowlTitle_Info, detail: this.statusMessage });\r\n                    break;\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"CheckSystemID\");\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    async onChange(event) {\r\n        try {\r\n\r\n\r\n            this._deviceTokenEntry[TokenEntry_Enum.SystemId] = this.selectedDB;\r\n            localStorage.setItem(\"tkitDeviceTokenEntry\", JSON.stringify(this._deviceTokenEntry));\r\n            await this.trackitloginService.GetSystemIDs(this.selectedDB)\r\n                .then((res: Response) => {\r\n                    let data = res.json();\r\n                    this.atweb = data;\r\n                });\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"onChange\");\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    private async BindDropDown() {\r\n        try {\r\n            this.atweb = await this.GetSystemIds(\"\");\r\n            this.systemData = this.atweb.DataList,\r\n                this.statusCode = this.atweb.StatusCode;\r\n            this.statusType = this.atweb.StatType;\r\n            this.dropdownData.push({ label: \"Select System ID\", value: \"Select System ID\" })\r\n\r\n            switch (this.statusType) {\r\n                case StatusType.Success:\r\n                    if (this.systemData != null) {\r\n                        if (this.systemData.length > 1) {\r\n                            for (var i = 0; i < this.systemData.length; i++) {\r\n                                this.dropdownData.push({\r\n                                    label: this.systemData[i].SYSTEM_NAME + \" (\" + this.systemData[i].SYSTEM_ID + \")\", value: this.systemData[i].SYSTEM_ID\r\n                                })\r\n                                this.trSystemId = true;\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            this.hdnSystemId = this.systemData[0].SYSTEM_ID;\r\n                            this.trSystemId = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case StatusType.Error:\r\n                    this.statusMessage = this.statusMessage;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'error', summary: AtParConstants.GrowlTitle_Error, detail: this.statusMessage });\r\n                    break;\r\n                case StatusType.Warn:\r\n                    this.statusMessage = this.statusMessage;\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'warn', summary: AtParConstants.GrowlTitle_Warn, detail: this.statusMessage });\r\n                    break;\r\n                case StatusType.Custom:\r\n                    this.growlMessage = [];\r\n                    this.growlMessage.push({ severity: 'custom', summary: AtParConstants.GrowlTitle_Info, detail: this.statusMessage });\r\n                    break;\r\n            }\r\n\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"BindDropDown\");\r\n            return;\r\n        }\r\n\r\n    }\r\n    setDeviceTokenSession() {\r\n        try {\r\n            this._deviceTokenEntry[TokenEntry_Enum.UserID] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.DeviceID] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.DateTime] = this.dateTime;\r\n            this._deviceTokenEntry[TokenEntry_Enum.ClientType] = ClientType.WEB.toFixed().toString();\r\n            this._deviceTokenEntry[TokenEntry_Enum.SystemId] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.AccessToken] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.IdleTime] = \"1000\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.DeptID] = \"\";\r\n            this._deviceTokenEntry[TokenEntry_Enum.AppName] = EnumApps[EnumApps.TrackIT].toString()\r\n            localStorage.setItem(\"tkitDeviceTokenEntry\", JSON.stringify(this._deviceTokenEntry));\r\n        } catch (ex) {\r\n            this.clientErrorMsg(ex, \"setDeviceTokenSession\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    clientErrorMsg(strExMsg, funName) {\r\n        this.growlMessage = [];\r\n        this.atParConstant.catchClientError(this.growlMessage, this.spinnerService, strExMsg.toString(), funName, this.constructor.name);\r\n    }\r\n\r\n\r\n    OnDestroy() {\r\n\r\n        this.model = null;\r\n        this.visibleUserID = null;\r\n        this.activeLblUserID = null;\r\n        this.activeLblPassword = null;\r\n        this.visiblePassword = null;\r\n        this.userId = null;\r\n        this.password = null;\r\n        this.deviceID = null;\r\n        this.systemID = null;\r\n        this.pSSOByPass = null;\r\n        this.dateTime = null;\r\n        this.accessToken = null;\r\n        this.accessTokenXML = null;\r\n        this.systemData = null;\r\n        this.errorCode = null;\r\n        this.systemRowData = null;\r\n        this.strServer = null;\r\n        this.strDatabase = null;\r\n        this.strUserID = null;\r\n        this.strPassword = null;\r\n        this.trSystemId = null;\r\n        this.statusCode = -1;\r\n        this.isSSOEnabled = null;\r\n        this.isValidUser = null;\r\n        this.strSSOVariable = null;\r\n        this.strSSOCookie = null;\r\n        this.strSSOLogout = null;\r\n        this.strSystemId = null;\r\n        this.hdnSystemId = null;\r\n        this.strSSOUser = null;\r\n        this.gStrSSOUser = null;\r\n        this.ipAddress = null;\r\n        this.passHash = null;\r\n        this.decryptpassword = null;\r\n        this.roleIds = null;\r\n        this.atweb = null;\r\n        this.userToken = null;\r\n        this.selectedDB = null;\r\n        this.statusMessage = null;\r\n        this.statusType = null;\r\n        this.growlMessage = null;\r\n        this.spinnerService.stop();\r\n        this.spinnerService = null;\r\n        this._dbConnectionString = null;\r\n        this.dropdownData = null;\r\n        this._deviceTokenEntry = null;\r\n        this.lstApps = null;\r\n        this.lstAppGroups = null;\r\n        this.myForm = null;\r\n        this.ipData = null;\r\n\r\n    }\r\n\r\n    async getRequestedItemsCount() {\r\n        try {\r\n            await this.trackitloginService.GetRequestedItemsCount()\r\n                .then((res: Response) => {\r\n                    let data = res.json();\r\n                    if (data.DataVariable != null) {\r\n                        this.countvalue = data.DataVariable;\r\n                    }\r\n                    else {\r\n                        this.countvalue = 0;\r\n                    }\r\n                    localStorage.setItem('ViewCartItemsCount', this.countvalue.toString());\r\n                    this.spinnerService.emitCountChangedValue(this.countvalue);\r\n                    this.oncountbuttonclicked.emit(this.countvalue);\r\n\r\n                })\r\n        }\r\n        catch (ex) {\r\n            this.clientErrorMsg(ex, \"getRequestedItemsCount\");\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/trackitlogin/trackit.login.component.ts","\r\n \r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { TrackitLoginComponent } from './trackit.login.component'\r\n\r\nexport const routes: Routes = [\r\n    { path: '', component: TrackitLoginComponent, data: { title: 'trackitlogin' } }\r\n  \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class TrackItLoginRoutingModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/trackitlogin/trackit.login.routes.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { HttpService } from '../Shared/HttpService';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport * as Rx from 'rxjs/Rx'\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n\r\n@Injectable()\r\nexport class TrackitloginService {\r\n\r\n    constructor(private httpservice: HttpService) { }\r\n    private headers = new Headers({ 'Content-Type': 'application/json' });\r\n\r\n    public GetAccessToken(userID, passHash, loginType,\r\n        dateTime, deviceID, accessToken,\r\n        SSOByPass) {\r\n\r\n        return this.httpservice.get({\r\n            \"apiMethod\": \"/api/Login/GetAccessToken\",\r\n            params: {\r\n                \"userID\": userID,\r\n                \"pPassword\": passHash,\r\n                \"loginType\": loginType,\r\n                \"dateTime\": dateTime,\r\n                \"deviceID\": deviceID,\r\n                \"accessToken\": accessToken,\r\n                \"SSOByPass\": SSOByPass\r\n            }\r\n        });\r\n    }\r\n\r\n    CheckLogin(userId, password) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/TrackITLogin/CheckLogin\",\r\n            params: {\r\n                \"userID\": userId,\r\n                \"pPassword\":password\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    GetSystemIDs(data: string) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Common/GetSystemIDs\",\r\n            params: {\r\n                \"systemID\": data\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    GetOrgGroupParamValue(orgParamName, appID, orgGroupID) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Common/GetOrgGroupParamValue\",\r\n            params: {\r\n                \"orgParamName\": orgParamName,\r\n                \"appID\": appID,\r\n                \"orgGroupID\": orgGroupID\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    GetAppRoleIDs(userID) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/User/GetAppRoleIDs\",\r\n            params: {\r\n                \"UserId\": userID\r\n            }\r\n        });\r\n    }\r\n\r\n    GetUserOrgGrpID(userID) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Common/GetUserOrgGrpID\",\r\n            params: {\r\n                \"userID\": userID\r\n            }\r\n        });\r\n\r\n    }\r\n    GetRecordsPerPage(userID) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/User/GetUser\",\r\n            params: {\r\n                \"userId\": userID\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    GetTKITMyPreferences(preference, requestorID)\r\n    {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/CommonTrackIT/GetTKITMyPreferences\",\r\n            params: {\r\n                \"preference\": preference,\r\n                \"requestorID\": requestorID\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n    IsValidUser(userID) {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Login/IsValidUser\",\r\n            params: {\r\n                \"userId\": userID\r\n            }\r\n        });\r\n\r\n    }\r\n    GetIpAddress() {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/Login/GetIpAddress\",\r\n        });\r\n\r\n    }\r\n   \r\n    GetRequestedItemsCount() {\r\n        return this.httpservice.getSync({\r\n            \"apiMethod\": \"/api/ViewCart/GetRequestedItemsCount\",\r\n            params: {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n   \r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/trackitlogin/trackit.login.service.ts","module.exports = \"<form class=\\\"form-horizontal login-form m-t-20\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" name=\\\"form\\\" (ngSubmit)=\\\"onSubmit(model.userID,model.password)\\\" #f=\\\"ngForm\\\" novalidate (keypress)=\\\"formKeyPressEvent($event)\\\">\\r\\n    <div class=\\\"accountbg\\\"></div>\\r\\n    <div class=\\\"wrapper-page\\\" id=\\\"divlogin\\\">\\r\\n        <div class=\\\"panel panel-color panel-primary panel-pages\\\">\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                    <div class=\\\"col-xs-12\\\">\\r\\n                        <img [src]=\\\"mhsicon\\\" alt=\\\"\\\" class=\\\"img-responsive\\\" style=\\\"width:65%;margin:inherit;\\\">\\r\\n                        <h3 class=\\\"\\\">Requestor Sign In</h3>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"input-wrap\\\">\\r\\n                                    <label id=\\\"lblUserID\\\" for=\\\"userID\\\" *ngIf=\\\"!userID.invalid && (userID.dirty || userID.touched)\\\" [ngClass]=\\\"activeLblUserID\\\">Username</label>\\r\\n                                    <label id=\\\"lblUserID\\\" for=\\\"userID\\\" *ngIf=\\\"(!f.submitted || model.userID ) && userID.invalid\\\" [ngClass]=\\\"activeLblUserID\\\">Username</label> \\r\\n                                    <input id=\\\"txtUserID\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userID\\\" (focus)=\\\"onFocusUserName()\\\" (click)=\\\"onFocusUserName()\\\" [(ngModel)]=\\\"model.userID\\\" #userID=\\\"ngModel\\\" required autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"input-wrap\\\">\\r\\n                                    <label id=\\\"lblPassword\\\" for=\\\"password\\\" *ngIf=\\\"!password.invalid && (password.dirty || password.touched)\\\" [ngClass]=\\\"activeLblPassword\\\">Password</label>\\r\\n                                    <label id=\\\"lblPassword\\\" for=\\\"password\\\" *ngIf=\\\"(!f.submitted || model.password)&& password.invalid\\\" [ngClass]=\\\"activeLblPassword\\\">Password</label>\\r\\n                                    <input id=\\\"txtPassword\\\" (click)=\\\"onFocusPassword()\\\" (focus)=\\\"onFocusPassword()\\\" type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" required />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <div class=\\\"input-wrap\\\">\\r\\n                                    <div *ngIf=\\\"trSystemId\\\">\\r\\n                                        <atpar-select [options]=\\\"dropdownData\\\" [(ngModel)]=\\\"selectedDB\\\" [id]=\\\"'ddlOrgGroup'\\\" [required]=\\\"true\\\" [ngModelOptions]=\\\"{standalone:true}\\\" (onChange)=\\\"onChange($event)\\\"></atpar-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xs-12 col-sm-4 col-md-4 pull-right\\\">\\r\\n                            <button id=\\\"btnLogin\\\" class=\\\"btn btn-primary btn-lg waves-effect waves-light\\\" [disabled]=\\\"loading\\\">Login &nbsp;<i class=\\\"fa fa-sign-in\\\"></i></button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </div>                \\r\\n            </div>\\r\\n        </div>\\r\\n        <atpar-growl [value]=\\\"growlMessage\\\" sticky=\\\"sticky\\\"></atpar-growl>\\r\\n    </div>\\r\\n</form>\\r\\n<style>\\r\\n    .waves-effect {\\r\\n        z-index: 0 !important;\\r\\n    }\\r\\n\\r\\n    .waves-light {\\r\\n        z-index: 0 !important;\\r\\n    }\\r\\n</style>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/trackitlogin/trackit.login.component.html\n// module id = 2155\n// module chunks = 3"],"sourceRoot":""}